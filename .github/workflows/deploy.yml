name: Deploy to Production # Test deployment

on:
  push:
    branches: [ main, deploy ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/elo-community:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Copy code to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: "."
        target: "${{ secrets.PROJECT_PATH }}"
        strip_components: 0
        overwrite: true
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          # 프로젝트 경로 설정 (PROJECT_PATH 우선 사용)
          PROJECT_DIR="${{ secrets.PROJECT_PATH }}"
          echo "📁 프로젝트 경로: $PROJECT_DIR"
          
          # 프로젝트 디렉토리 생성 및 이동
          mkdir -p "$PROJECT_DIR"
          cd "$PROJECT_DIR"
          
          # 현재 디렉토리 확인
          echo "📍 현재 디렉토리: $(pwd)"
          echo "📋 디렉토리 내용:"
          ls -la
          
          # .env 파일 경로 확인
          echo "🔍 .env 파일 경로 확인:"
          echo "현재 위치: $(pwd)"
          echo "infra/.env 경로: $(pwd)/infra/.env"
          echo "../.env 경로: $(dirname $(pwd))/.env"
          echo "절대 경로: $PROJECT_DIR/.env"
          
          # 각 경로에 .env 파일이 있는지 확인
          echo "📋 .env 파일 존재 여부:"
          [ -f ".env" ] && echo "✅ ./env: 존재" || echo "❌ ./env: 없음"
          [ -f "infra/.env" ] && echo "✅ infra/.env: 존재" || echo "❌ infra/.env: 없음"
          [ -f "../.env" ] && echo "✅ ../.env: 존재" || echo "❌ ../.env: 없음"
          [ -f "$PROJECT_DIR/.env" ] && echo "✅ $PROJECT_DIR/.env: 존재" || echo "❌ $PROJECT_DIR/.env: 없음"
          
          # Base64로 인코딩된 .env 파일 생성 (루트에 생성)
          echo "🔐 .env 파일 생성 중..."
          echo '${{ secrets.ENV }}' | base64 -d > .env
          
          # .env 파일 상태 확인
          echo "📄 .env 파일 상태:"
          ls -la .env
          echo "📏 .env 파일 크기: $(wc -c < .env) bytes"
          
          # .env 파일 내용 확인 (보안을 위해 민감한 정보 가림)
          echo "📋 .env 파일 내용 (민감한 정보 가림):"
          head -10 .env | sed 's/=.*/=***/g'
          
          # .env 파일 내용 확인 (마지막 5줄, 민감한 정보 가림)
          echo "📋 .env 파일 내용 (마지막 5줄, 민감한 정보 가림):"
          tail -5 .env | sed 's/=.*/=***/g'
          
          # .env 파일 권한 설정 (보안)
          chmod 600 .env
          
          # .env 파일을 현재 셸 세션에 로드
          echo "📥 .env 파일을 셸 세션에 로드 중..."
          export $(cat .env | grep -v '^#' | xargs)
          
          # infra 폴더가 있는지 확인
          if [ ! -d "infra" ]; then
            echo "❌ infra 폴더가 없습니다. 코드를 복사해야 합니다."
            echo "📋 현재 디렉토리 내용:"
            ls -la
            exit 1
          fi
          
          echo "✅ infra 폴더 확인됨"
          echo "📋 infra 폴더 내용:"
          ls -la infra/
          
          # 환경변수 상태 확인 (민감한 정보 가림)
          echo "🔍 환경변수 상태 확인:"
          echo "DB_PASSWORD: ${DB_PASSWORD:+'***'}"
          echo "DB_HOST: ${DB_HOST:-'설정되지 않음'}"
          echo "DB_PORT: ${DB_PORT:-'설정되지 않음'}"
          echo "DB_DATABASE: ${DB_DATABASE:-'설정되지 않음'}"
          echo "DOCKER_USERNAME: ${DOCKER_USERNAME:-'설정되지 않음'}"
          echo "IMAGE_TAG: ${IMAGE_TAG:-'설정되지 않음'}"
          
          # Docker 서비스 상태 확인 (간단하게)
          echo "🔧 Docker 서비스 확인 중..."
          sudo systemctl status docker --no-pager || true
          
          # Docker Compose 실행 (sudo로 실행, .env 파일 명시)
          echo "🐳 Docker Compose 실행 중..."
          sudo docker compose -f infra/docker-compose.yml --env-file .env down
          sudo docker compose -f infra/docker-compose.yml --env-file .env pull
          sudo docker compose -f infra/docker-compose.yml --env-file .env up -d --build
          
          # 헬스체크
          sleep 30
          curl -f http://localhost:3000/api/v1/health || exit 1
