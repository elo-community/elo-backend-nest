name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV }}" | base64 -d > .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/elo-community-backend-nest:latest
            ${{ secrets.DOCKER_USERNAME }}/elo-community-backend-nest:${{ github.sha }}

      # EC2 SSH 키 설정
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      # EC2로 파일 복사
      - name: Upload docker-compose and nginx config to EC2
        run: |
          scp -o StrictHostKeyChecking=no -r ./docker-compose.yml ./nginx \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/elo-backend-nest/

      # EC2에서 Docker Compose 실행
      - name: SSH into EC2 and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/${{ secrets.EC2_USER }}/elo-backed-nest
            docker compose pull
            docker compose up -d
          EOF
