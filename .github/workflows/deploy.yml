name: Deploy to Production # Test deployment

on:
  push:
    branches: [ main, deploy ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/elo-community:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          cd ${{ secrets.PROJECT_PATH || '/home/${{ secrets.EC2_USERNAME }}/elo-community' }}
          
          # Base64로 인코딩된 .env 파일 생성
          echo '${{ secrets.ENV }}' | base64 -d > .env
          
          # .env 파일 권한 설정 (보안)
          chmod 600 .env
          
          # Docker Compose 실행
          docker compose -f infra/docker-compose.yml down
          docker compose -f infra/docker-compose.yml pull
          docker compose -f infra/docker-compose.yml up -d --build
          
          # 헬스체크
          sleep 30
          curl -f http://localhost:3000/api/v1/health || exit 1
