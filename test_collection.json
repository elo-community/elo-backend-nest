{
    "info": {
        "name": "ELO Community API Tests",
        "description": "API 테스트를 위한 컬렉션",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:3000/api/v1",
            "type": "string"
        },
        {
            "key": "accessToken",
            "value": "",
            "type": "string"
        },
        {
            "key": "userId",
            "value": "",
            "type": "string"
        },
        {
            "key": "postId",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "1. 테스트 사용자 생성",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Response has access token\", function () {",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.success).to.eql(true);",
                            "    pm.expect(jsonData.data.accessToken).to.not.be.empty;",
                            "    ",
                            "    // 토큰을 변수에 저장",
                            "    pm.collectionVariables.set(\"accessToken\", jsonData.data.accessToken);",
                            "    pm.collectionVariables.set(\"userId\", jsonData.data.user.id);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{}"
                },
                "url": {
                    "raw": "{{baseUrl}}/auth/test-user",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "auth",
                        "test-user"
                    ]
                }
            }
        },
        {
            "name": "2. 토큰 검증",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Token is valid\", function () {",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.success).to.eql(true);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{accessToken}}"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/auth/verify",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "auth",
                        "verify"
                    ]
                }
            }
        },
        {
            "name": "3. 게시글 생성",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Post created successfully\", function () {",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.success).to.eql(true);",
                            "    pm.expect(jsonData.data.id).to.not.be.empty;",
                            "    ",
                            "    // 생성된 게시글 ID를 변수에 저장",
                            "    pm.collectionVariables.set(\"postId\", jsonData.data.id);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{accessToken}}"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"title\": \"테스트 게시글\",\n  \"content\": \"이것은 테스트용 게시글입니다.\",\n  \"type\": \"post\",\n  \"isHidden\": false\n}"
                },
                "url": {
                    "raw": "{{baseUrl}}/posts",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "posts"
                    ]
                }
            }
        },
        {
            "name": "4. 게시글 상세 조회",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Post details retrieved\", function () {",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.success).to.eql(true);",
                            "    pm.expect(jsonData.data.id).to.eql(parseInt(pm.collectionVariables.get(\"postId\")));",
                            "    pm.expect(jsonData.data.author).to.not.be.empty;",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{baseUrl}}/posts/{{postId}}",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "posts",
                        "{{postId}}"
                    ]
                }
            }
        },
        {
            "name": "5. 댓글 작성",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Comment created successfully\", function () {",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.success).to.eql(true);",
                            "    pm.expect(jsonData.data.id).to.not.be.empty;",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{accessToken}}"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"content\": \"테스트 댓글입니다.\",\n  \"postId\": {{postId}}\n}"
                },
                "url": {
                    "raw": "{{baseUrl}}/comments",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "comments"
                    ]
                }
            }
        },
        {
            "name": "6. 대댓글 작성",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Reply created successfully\", function () {",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.success).to.eql(true);",
                            "    pm.expect(jsonData.data.id).to.not.be.empty;",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{accessToken}}"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"content\": \"테스트 대댓글입니다.\",\n  \"commentId\": 1\n}"
                },
                "url": {
                    "raw": "{{baseUrl}}/replies",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "replies"
                    ]
                }
            }
        }
    ]
}