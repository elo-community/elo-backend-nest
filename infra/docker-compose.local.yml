name: elo-local

services:
  backend:
    container_name: backend-local
    build:
      context: ..
      dockerfile: Dockerfile
    image: elo-community-backend:local
    restart: always
    ports:
      - "3000:3000"
    networks:
      - app-network
    env_file:
      - ../.env.amoy.local
    environment:
      - NODE_ENV=development
      - NETWORK=amoy
      - HEALTH_PATH=/api/v1/health
    healthcheck:
      test: [ "CMD", "node", "-e", "http=require('http');p=process.env.HEALTH_PATH||'/health';req=http.request({host:'127.0.0.1',port:3000,path:p,timeout:5000},r=>process.exit(r.statusCode===200?0:1));req.on('error',()=>process.exit(1));req.end()" ]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
  # 모니터링: 배포 컴포즈 정의 재사용
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.local.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - app-network

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - app-network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:${DB_PASSWORD}@host.docker.internal:5432/elo_community?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  grafana-storage:
