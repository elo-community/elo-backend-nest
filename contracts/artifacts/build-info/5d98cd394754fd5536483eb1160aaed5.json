{"id":"5d98cd394754fd5536483eb1160aaed5","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    function __Pausable_init() internal onlyInitializing {\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\n\npragma solidity >=0.4.11;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/RewardPool.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/**\n * @title RewardPool\n * @dev Pre-funded vault that holds ERC-20 tokens for reward distributions\n * Only the authorized Distributor can withdraw tokens to pay rewards\n */\ncontract RewardPool is Initializable, AccessControlUpgradeable, UUPSUpgradeable {\n    using SafeERC20 for IERC20;\n\n    bytes32 public constant DISTRIBUTOR_ROLE = keccak256(\"DISTRIBUTOR_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    mapping(address => uint256) public tokenBalances;\n    address public distributor;\n\n    event Deposited(address indexed token, uint256 amount);\n    event Paid(address indexed token, address indexed to, uint256 amount);\n    event DistributorSet(address indexed oldDistributor, address indexed newDistributor);\n\n    error Unauthorized();\n    error InsufficientBalance();\n    error DistributorNotSet();\n    error InvalidAmount();\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address admin) public initializer {\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n        \n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(PAUSER_ROLE, admin);\n    }\n\n    /**\n     * @dev Deposit tokens into the pool (admin only)\n     * @param token ERC-20 token address\n     * @param amount Amount to deposit\n     */\n    function deposit(address token, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (amount == 0) revert InvalidAmount();\n        \n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\n        tokenBalances[token] += amount;\n        \n        emit Deposited(token, amount);\n    }\n\n    /**\n     * @dev Pay tokens to a recipient (distributor only)\n     * @param token ERC-20 token address\n     * @param to Recipient address\n     * @param amount Amount to pay\n     */\n    function payTo(address token, address to, uint256 amount) external onlyRole(DISTRIBUTOR_ROLE) {\n        if (amount == 0) revert InvalidAmount();\n        if (to == address(0)) revert InvalidAmount();\n        if (tokenBalances[token] < amount) revert InsufficientBalance();\n        \n        tokenBalances[token] -= amount;\n        IERC20(token).safeTransfer(to, amount);\n        \n        emit Paid(token, to, amount);\n    }\n\n    /**\n     * @dev Set the distributor address (admin only)\n     * @param newDistributor New distributor address\n     */\n    function setDistributor(address newDistributor) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (newDistributor == address(0)) revert InvalidAmount();\n        \n        address oldDistributor = distributor;\n        distributor = newDistributor;\n        \n        if (oldDistributor != address(0)) {\n            _revokeRole(DISTRIBUTOR_ROLE, oldDistributor);\n        }\n        \n        _grantRole(DISTRIBUTOR_ROLE, newDistributor);\n        \n        emit DistributorSet(oldDistributor, newDistributor);\n    }\n\n    /**\n     * @dev Get token balance in the pool\n     * @param token ERC-20 token address\n     * @return Current balance\n     */\n    function balance(address token) external view returns (uint256) {\n        return tokenBalances[token];\n    }\n\n    /**\n     * @dev Internal function to debit tokens (for future use)\n     * @param token ERC-20 token address\n     * @param amount Amount to debit\n     */\n    function _debit(address token, uint256 amount) internal {\n        if (tokenBalances[token] < amount) revert InsufficientBalance();\n        tokenBalances[token] -= amount;\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(DEFAULT_ADMIN_ROLE) {}\n} "},"contracts/SignedRewardDistributor.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"./RewardPool.sol\";\n\n/**\n * @title SignedRewardDistributor\n * @dev Handles EIP-712 signed reward claims with pre-funded pool\n */\ncontract SignedRewardDistributor is \n    Initializable, \n    AccessControlUpgradeable, \n    PausableUpgradeable, \n    ReentrancyGuardUpgradeable, \n    UUPSUpgradeable,\n    EIP712 \n{\n    using ECDSA for bytes32;\n\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant SIGNER_ROLE = keccak256(\"SIGNER_ROLE\");\n\n    RewardPool public rewardPool;\n    \n    struct Distribution {\n        address token;\n        uint256 total;        // cap for this distribution\n        uint256 remaining;    // starts == total, decreases on claims\n        uint256 snapshotBlock;\n        uint256 deadline;     // unix seconds\n        bool active;\n    }\n\n    mapping(uint256 => Distribution) public dists;\n    mapping(uint256 => mapping(address => uint256)) public claimed; // cumulative model\n\n    event DistributionCreated(\n        uint256 indexed id, \n        address indexed token, \n        uint256 total, \n        uint256 snapshotBlock, \n        uint256 deadline\n    );\n    event Claimed(\n        uint256 indexed id, \n        address indexed account, \n        uint256 amount, \n        uint256 newClaimedTotal\n    );\n\n    error DistributionNotFound();\n    error DistributionInactive();\n    error DeadlineExpired();\n    error InvalidDeadline();\n    error InsufficientRemaining();\n    error NoAmountToClaim();\n    error InvalidSignature();\n    error UnauthorizedSigner();\n    error InvalidAmount();\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() EIP712(\"SignedRewardDistributor\", \"1\") {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _rewardPool, \n        address admin, \n        address signer\n    ) public initializer {\n        __AccessControl_init();\n        __Pausable_init();\n        __ReentrancyGuard_init();\n        __UUPSUpgradeable_init();\n        \n        rewardPool = RewardPool(_rewardPool);\n        \n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(PAUSER_ROLE, admin);\n        _grantRole(SIGNER_ROLE, signer);\n    }\n\n    /**\n     * @dev Create a new distribution (admin only)\n     */\n    function createDistribution(\n        uint256 id,\n        address token,\n        uint256 total,\n        uint256 snapshotBlock,\n        uint256 deadline\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (token == address(0)) revert InvalidAmount();\n        if (total == 0) revert InvalidAmount();\n        if (deadline <= block.timestamp) revert InvalidDeadline();\n        if (dists[id].active) revert DistributionNotFound(); // id already exists\n        \n        dists[id] = Distribution({\n            token: token,\n            total: total,\n            remaining: total,\n            snapshotBlock: snapshotBlock,\n            deadline: deadline,\n            active: true\n        });\n        \n        emit DistributionCreated(id, token, total, snapshotBlock, deadline);\n    }\n\n    /**\n     * @dev Claim rewards using EIP-712 signature\n     */\n    function claim(\n        uint256 distributionId,\n        bytes32 postId,\n        address account,\n        uint256 authorizedAmount,\n        uint256 deadline,\n        bytes calldata signature\n    ) external nonReentrant whenNotPaused {\n        if (account == address(0)) revert InvalidAmount();\n        if (deadline <= block.timestamp) revert DeadlineExpired();\n        \n        Distribution storage dist = dists[distributionId];\n        if (!dist.active) revert DistributionInactive();\n        if (deadline > dist.deadline) revert DeadlineExpired();\n        \n        // Verify EIP-712 signature\n        bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n            keccak256(\"Claim(uint256 distributionId,bytes32 postId,address account,uint256 authorizedAmount,uint256 deadline)\"),\n            distributionId,\n            postId,\n            account,\n            authorizedAmount,\n            deadline\n        )));\n        \n        address signer = digest.recover(signature);\n        if (!hasRole(SIGNER_ROLE, signer)) revert UnauthorizedSigner();\n        \n        // Calculate claimable amount\n        uint256 alreadyClaimed = claimed[distributionId][account];\n        if (authorizedAmount <= alreadyClaimed) revert NoAmountToClaim();\n        \n        uint256 toClaim = authorizedAmount - alreadyClaimed;\n        if (dist.remaining < toClaim) revert InsufficientRemaining();\n        \n        // Update state\n        claimed[distributionId][account] = authorizedAmount;\n        dist.remaining -= toClaim;\n        \n        // Transfer tokens from pool\n        rewardPool.payTo(dist.token, account, toClaim);\n        \n        emit Claimed(distributionId, account, toClaim, authorizedAmount);\n    }\n\n    /**\n     * @dev Sweep remaining tokens after deadline (admin only)\n     */\n    function sweepRemainder(uint256 id, address to) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        Distribution storage dist = dists[id];\n        if (!dist.active) revert DistributionInactive();\n        if (block.timestamp <= dist.deadline) revert DeadlineExpired();\n        if (to == address(0)) revert InvalidAmount();\n        \n        dist.active = false;\n        \n        // Optional: move unused cap back to pool (logical cap just resets)\n        // For now, we keep the logical cap approach\n    }\n\n    /**\n     * @dev Pause/unpause contract\n     */\n    function pause() external onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() external onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    /**\n     * @dev Get distribution info\n     */\n    function getDistribution(uint256 id) external view returns (Distribution memory) {\n        return dists[id];\n    }\n\n    /**\n     * @dev Get claimed amount for user\n     */\n    function getClaimed(uint256 id, address account) external view returns (uint256) {\n        return claimed[id][account];\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(DEFAULT_ADMIN_ROLE) {}\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"ContextUpgradeable":[860],"ERC165Upgradeable":[1189],"IAccessControl":[1272],"IERC165":[5014],"Initializable":[632]},"id":365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":1273,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":861,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":5015,"src":"284:80:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"292:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":1190,"src":"365:79:0","symbolAliases":[{"foreign":{"id":8,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"373:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":633,"src":"445:63:0","symbolAliases":[{"foreign":{"id":10,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"453:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":13,"name":"Initializable","nameLocations":["2217:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"2217:13:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2217:13:0"},{"baseName":{"id":15,"name":"ContextUpgradeable","nameLocations":["2232:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":860,"src":"2232:18:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2232:18:0"},{"baseName":{"id":17,"name":"IAccessControl","nameLocations":["2252:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1272,"src":"2252:14:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2252:14:0"},{"baseName":{"id":19,"name":"ERC165Upgradeable","nameLocations":["2268:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":1189,"src":"2268:17:0"},"id":20,"nodeType":"InheritanceSpecifier","src":"2268:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"510:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":364,"linearizedBaseContracts":[364,1189,5014,1272,860,632],"name":"AccessControlUpgradeable","nameLocation":"2189:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":27,"members":[{"constant":false,"id":24,"mutability":"mutable","name":"hasRole","nameLocation":"2351:7:0","nodeType":"VariableDeclaration","scope":27,"src":"2318:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":23,"keyName":"account","keyNameLocation":"2334:7:0","keyType":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2318:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"name":"bool","nodeType":"ElementaryTypeName","src":"2345:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"adminRole","nameLocation":"2376:9:0","nodeType":"VariableDeclaration","scope":27,"src":"2368:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2368:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2299:8:0","nodeType":"StructDefinition","scope":364,"src":"2292:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2422:18:0","nodeType":"VariableDeclaration","scope":364,"src":"2398:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2398:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2455:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":37,"members":[{"constant":false,"id":36,"mutability":"mutable","name":"_roles","nameLocation":"2603:6:0","nodeType":"VariableDeclaration","scope":37,"src":"2569:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":35,"keyName":"role","keyNameLocation":"2585:4:0","keyType":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2577:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2569:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":34,"nodeType":"UserDefinedTypeName","pathNode":{"id":33,"name":"RoleData","nameLocations":["2593:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":27,"src":"2593:8:0"},"referencedDeclaration":27,"src":"2593:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2538:20:0","nodeType":"StructDefinition","scope":364,"src":"2531:85:0","visibility":"public"},{"constant":true,"id":40,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2764:28:0","nodeType":"VariableDeclaration","scope":364,"src":"2739:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":38,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2739:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2795:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":47,"nodeType":"Block","src":"2958:87:0","statements":[{"AST":{"nativeSrc":"2977:62:0","nodeType":"YulBlock","src":"2977:62:0","statements":[{"nativeSrc":"2991:38:0","nodeType":"YulAssignment","src":"2991:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"3001:28:0","nodeType":"YulIdentifier","src":"3001:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2991:6:0","nodeType":"YulIdentifier","src":"2991:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":44,"isOffset":false,"isSlot":true,"src":"2991:6:0","suffix":"slot","valueSize":1},{"declaration":40,"isOffset":false,"isSlot":false,"src":"3001:28:0","valueSize":1}],"id":46,"nodeType":"InlineAssembly","src":"2968:71:0"}]},"id":48,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2877:24:0","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[],"src":"2901:2:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"$","nameLocation":"2955:1:0","nodeType":"VariableDeclaration","scope":48,"src":"2926:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":43,"nodeType":"UserDefinedTypeName","pathNode":{"id":42,"name":"AccessControlStorage","nameLocations":["2926:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"2926:20:0"},"referencedDeclaration":37,"src":"2926:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2925:32:0"},"scope":364,"src":"2868:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":58,"nodeType":"Block","src":"3262:44:0","statements":[{"expression":{"arguments":[{"id":54,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"3283:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":53,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[131,152],"referencedDeclaration":131,"src":"3272:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":56,"nodeType":"ExpressionStatement","src":"3272:16:0"},{"id":57,"nodeType":"PlaceholderStatement","src":"3298:1:0"}]},"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"3051:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":59,"name":"onlyRole","nameLocation":"3239:8:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"role","nameLocation":"3256:4:0","nodeType":"VariableDeclaration","scope":59,"src":"3248:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":50,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3248:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3247:14:0"},"src":"3230:76:0","virtual":false,"visibility":"internal"},{"body":{"id":64,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":65,"implemented":true,"kind":"function","modifiers":[{"id":62,"kind":"modifierInvocation","modifierName":{"id":61,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init","nameLocation":"3321:20:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":364,"src":"3312:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":70,"nodeType":"Block","src":"3451:7:0","statements":[]},"id":71,"implemented":true,"kind":"function","modifiers":[{"id":68,"kind":"modifierInvocation","modifierName":{"id":67,"name":"onlyInitializing","nameLocations":["3434:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3434:16:0"},"nodeType":"ModifierInvocation","src":"3434:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3392:30:0","nodeType":"FunctionDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3422:2:0"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"3451:0:0"},"scope":364,"src":"3383:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1188],"body":{"id":92,"nodeType":"Block","src":"3582:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":80,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3599:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":82,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"3619:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1272_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1272_$","typeString":"type(contract IAccessControl)"}],"id":81,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3614:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1272","typeString":"type(contract IAccessControl)"}},"id":84,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3635:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3614:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3599:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":88,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3674:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":86,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3650:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$364_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3656:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"3650:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3650:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3599:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":79,"id":91,"nodeType":"Return","src":"3592:94:0"}]},"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3463:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":93,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3500:17:0","nodeType":"FunctionDefinition","overrides":{"id":76,"nodeType":"OverrideSpecifier","overrides":[],"src":"3558:8:0"},"parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"interfaceId","nameLocation":"3525:11:0","nodeType":"VariableDeclaration","scope":93,"src":"3518:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":73,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3518:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3517:20:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":93,"src":"3576:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":77,"name":"bool","nodeType":"ElementaryTypeName","src":"3576:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3575:6:0"},"scope":364,"src":"3491:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1239],"body":{"id":117,"nodeType":"Block","src":"3863:124:0","statements":[{"assignments":[105],"declarations":[{"constant":false,"id":105,"mutability":"mutable","name":"$","nameLocation":"3902:1:0","nodeType":"VariableDeclaration","scope":117,"src":"3873:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":104,"nodeType":"UserDefinedTypeName","pathNode":{"id":103,"name":"AccessControlStorage","nameLocations":["3873:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"3873:20:0"},"referencedDeclaration":37,"src":"3873:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":108,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":106,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"3906:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3906:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3873:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":109,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"3949:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3951:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"3949:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":112,"indexExpression":{"id":111,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3958:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3949:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3964:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3949:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":115,"indexExpression":{"id":114,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3972:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3949:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":102,"id":116,"nodeType":"Return","src":"3942:38:0"}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3699:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":118,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3789:7:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3805:4:0","nodeType":"VariableDeclaration","scope":118,"src":"3797:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3797:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3819:7:0","nodeType":"VariableDeclaration","scope":118,"src":"3811:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3811:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3796:31:0"},"returnParameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":118,"src":"3857:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100,"name":"bool","nodeType":"ElementaryTypeName","src":"3857:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3856:6:0"},"scope":364,"src":"3780:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":130,"nodeType":"Block","src":"4252:47:0","statements":[{"expression":{"arguments":[{"id":125,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"4273:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":126,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"4279:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":124,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[131,152],"referencedDeclaration":152,"src":"4262:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":129,"nodeType":"ExpressionStatement","src":"4262:30:0"}]},"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"3993:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4205:10:0","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"role","nameLocation":"4224:4:0","nodeType":"VariableDeclaration","scope":131,"src":"4216:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4216:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4215:14:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"4252:0:0"},"scope":364,"src":"4196:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":151,"nodeType":"Block","src":"4502:124:0","statements":[{"condition":{"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4516:23:0","subExpression":{"arguments":[{"id":140,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4525:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":141,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"4531:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":139,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4517:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4517:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":150,"nodeType":"IfStatement","src":"4512:108:0","trueBody":{"id":149,"nodeType":"Block","src":"4541:79:0","statements":[{"errorCall":{"arguments":[{"id":145,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"4595:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":146,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4604:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":144,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"4562:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":148,"nodeType":"RevertStatement","src":"4555:54:0"}]}}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4305:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":152,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4438:10:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4457:4:0","nodeType":"VariableDeclaration","scope":152,"src":"4449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"4471:7:0","nodeType":"VariableDeclaration","scope":152,"src":"4463:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4448:31:0"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"4502:0:0"},"scope":364,"src":"4429:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1247],"body":{"id":172,"nodeType":"Block","src":"4881:117:0","statements":[{"assignments":[162],"declarations":[{"constant":false,"id":162,"mutability":"mutable","name":"$","nameLocation":"4920:1:0","nodeType":"VariableDeclaration","scope":172,"src":"4891:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":161,"nodeType":"UserDefinedTypeName","pathNode":{"id":160,"name":"AccessControlStorage","nameLocations":["4891:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"4891:20:0"},"referencedDeclaration":37,"src":"4891:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":165,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":163,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"4924:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4924:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4891:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":166,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"4967:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4969:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"4967:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":169,"indexExpression":{"id":168,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"4976:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4967:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4982:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4967:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":159,"id":171,"nodeType":"Return","src":"4960:31:0"}]},"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"4632:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":173,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4816:12:0","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"role","nameLocation":"4837:4:0","nodeType":"VariableDeclaration","scope":173,"src":"4829:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4829:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4828:14:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":173,"src":"4872:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4872:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4871:9:0"},"scope":364,"src":"4807:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1255],"body":{"id":191,"nodeType":"Block","src":"5388:42:0","statements":[{"expression":{"arguments":[{"id":187,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5409:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":188,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"5415:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":186,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5398:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5398:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":190,"nodeType":"ExpressionStatement","src":"5398:25:0"}]},"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"5004:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":192,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":182,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5381:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":181,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5368:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5368:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":184,"kind":"modifierInvocation","modifierName":{"id":180,"name":"onlyRole","nameLocations":["5359:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5359:8:0"},"nodeType":"ModifierInvocation","src":"5359:28:0"}],"name":"grantRole","nameLocation":"5303:9:0","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"role","nameLocation":"5321:4:0","nodeType":"VariableDeclaration","scope":192,"src":"5313:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5313:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"account","nameLocation":"5335:7:0","nodeType":"VariableDeclaration","scope":192,"src":"5327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"5327:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5312:31:0"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"5388:0:0"},"scope":364,"src":"5294:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1263],"body":{"id":210,"nodeType":"Block","src":"5805:43:0","statements":[{"expression":{"arguments":[{"id":206,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5827:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5833:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":205,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"5815:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5815:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":209,"nodeType":"ExpressionStatement","src":"5815:26:0"}]},"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"5436:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":211,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":203,"kind":"modifierInvocation","modifierName":{"id":199,"name":"onlyRole","nameLocations":["5776:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5776:8:0"},"nodeType":"ModifierInvocation","src":"5776:28:0"}],"name":"revokeRole","nameLocation":"5719:10:0","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"role","nameLocation":"5738:4:0","nodeType":"VariableDeclaration","scope":211,"src":"5730:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5730:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"account","nameLocation":"5752:7:0","nodeType":"VariableDeclaration","scope":211,"src":"5744:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"5744:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5729:31:0"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"5805:0:0"},"scope":364,"src":"5710:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1271],"body":{"id":233,"nodeType":"Block","src":"6475:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":219,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6489:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":220,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"6511:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6511:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6489:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":227,"nodeType":"IfStatement","src":"6485:102:0","trueBody":{"id":226,"nodeType":"Block","src":"6525:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":223,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"6546:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6546:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"RevertStatement","src":"6539:37:0"}]}},{"expression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6609:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6615:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"6597:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":232,"nodeType":"ExpressionStatement","src":"6597:37:0"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"5854:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":234,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6405:12:0","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"role","nameLocation":"6426:4:0","nodeType":"VariableDeclaration","scope":234,"src":"6418:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6418:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6440:18:0","nodeType":"VariableDeclaration","scope":234,"src":"6432:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"6432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6417:42:0"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"6475:0:0"},"scope":364,"src":"6396:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":269,"nodeType":"Block","src":"6839:245:0","statements":[{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"$","nameLocation":"6878:1:0","nodeType":"VariableDeclaration","scope":269,"src":"6849:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":243,"nodeType":"UserDefinedTypeName","pathNode":{"id":242,"name":"AccessControlStorage","nameLocations":["6849:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"6849:20:0"},"referencedDeclaration":37,"src":"6849:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":247,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"6882:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6882:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6849:59:0"},{"assignments":[249],"declarations":[{"constant":false,"id":249,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6926:17:0","nodeType":"VariableDeclaration","scope":269,"src":"6918:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":253,"initialValue":{"arguments":[{"id":251,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6959:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":250,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"6946:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6946:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6918:46:0"},{"expression":{"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":254,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6974:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6976:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"6974:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":258,"indexExpression":{"id":256,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6974:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6989:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":26,"src":"6974:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":260,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7001:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6974:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":262,"nodeType":"ExpressionStatement","src":"6974:36:0"},{"eventCall":{"arguments":[{"id":264,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7042:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":265,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"7048:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":266,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7067:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":263,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"7025:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7025:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"EmitStatement","src":"7020:57:0"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"6647:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":270,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6775:13:0","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"role","nameLocation":"6797:4:0","nodeType":"VariableDeclaration","scope":270,"src":"6789:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6789:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"adminRole","nameLocation":"6811:9:0","nodeType":"VariableDeclaration","scope":270,"src":"6803:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6803:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6788:33:0"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"6839:0:0"},"scope":364,"src":"6766:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":316,"nodeType":"Block","src":"7401:304:0","statements":[{"assignments":[282],"declarations":[{"constant":false,"id":282,"mutability":"mutable","name":"$","nameLocation":"7440:1:0","nodeType":"VariableDeclaration","scope":316,"src":"7411:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":281,"nodeType":"UserDefinedTypeName","pathNode":{"id":280,"name":"AccessControlStorage","nameLocations":["7411:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"7411:20:0"},"referencedDeclaration":37,"src":"7411:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":285,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"7444:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7444:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7411:59:0"},{"condition":{"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7484:23:0","subExpression":{"arguments":[{"id":287,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7493:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":288,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7499:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":286,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"7485:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7485:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":314,"nodeType":"Block","src":"7662:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7683:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":279,"id":313,"nodeType":"Return","src":"7676:12:0"}]},"id":315,"nodeType":"IfStatement","src":"7480:219:0","trueBody":{"id":311,"nodeType":"Block","src":"7509:147:0","statements":[{"expression":{"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":291,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"7523:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7525:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"7523:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":295,"indexExpression":{"id":293,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7532:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7523:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7538:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"7523:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":298,"indexExpression":{"id":297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7546:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7523:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7557:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7523:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":301,"nodeType":"ExpressionStatement","src":"7523:38:0"},{"eventCall":{"arguments":[{"id":303,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7592:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":304,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"7607:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":302,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"7580:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7580:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"EmitStatement","src":"7575:45:0"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7641:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":279,"id":310,"nodeType":"Return","src":"7634:11:0"}]}}]},"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"7090:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":317,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7327:10:0","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"role","nameLocation":"7346:4:0","nodeType":"VariableDeclaration","scope":317,"src":"7338:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7338:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"account","nameLocation":"7360:7:0","nodeType":"VariableDeclaration","scope":317,"src":"7352:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"7352:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7337:31:0"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":317,"src":"7395:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":277,"name":"bool","nodeType":"ElementaryTypeName","src":"7395:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7394:6:0"},"scope":364,"src":"7318:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"8026:304:0","statements":[{"assignments":[329],"declarations":[{"constant":false,"id":329,"mutability":"mutable","name":"$","nameLocation":"8065:1:0","nodeType":"VariableDeclaration","scope":362,"src":"8036:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"AccessControlStorage","nameLocations":["8036:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"8036:20:0"},"referencedDeclaration":37,"src":"8036:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":332,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":330,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"8069:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8036:59:0"},{"condition":{"arguments":[{"id":334,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8117:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":335,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8123:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":333,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"8109:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8109:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":360,"nodeType":"Block","src":"8287:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8308:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":326,"id":359,"nodeType":"Return","src":"8301:12:0"}]},"id":361,"nodeType":"IfStatement","src":"8105:219:0","trueBody":{"id":357,"nodeType":"Block","src":"8133:148:0","statements":[{"expression":{"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":337,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8147:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8149:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"8147:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":341,"indexExpression":{"id":339,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8156:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8147:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8162:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"8147:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":344,"indexExpression":{"id":343,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8170:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8147:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8181:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8147:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":347,"nodeType":"ExpressionStatement","src":"8147:39:0"},{"eventCall":{"arguments":[{"id":349,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8217:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":350,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8223:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":351,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"8232:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8232:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":348,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"8205:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"EmitStatement","src":"8200:45:0"},{"expression":{"hexValue":"74727565","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8266:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":326,"id":356,"nodeType":"Return","src":"8259:11:0"}]}}]},"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"7711:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7951:11:0","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"role","nameLocation":"7971:4:0","nodeType":"VariableDeclaration","scope":363,"src":"7963:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7963:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"account","nameLocation":"7985:7:0","nodeType":"VariableDeclaration","scope":363,"src":"7977:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"7977:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7962:31:0"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"8020:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":324,"name":"bool","nodeType":"ElementaryTypeName","src":"8020:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8019:6:0"},"scope":364,"src":"7942:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":365,"src":"2171:6161:0","usedErrors":[381,384,1199,1202],"usedEvents":[389,1211,1220,1229]}],"src":"108:8225:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[632]},"id":633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":366,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":632,"linearizedBaseContracts":[632],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":375,"members":[{"constant":false,"id":371,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":375,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":370,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":375,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":632,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":378,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":632,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":381,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":384,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":389,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":389,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":386,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":471,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[394],"declarations":[{"constant":false,"id":394,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":471,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":393,"nodeType":"UserDefinedTypeName","pathNode":{"id":392,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"4158:20:1"},"referencedDeclaration":375,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":397,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":395,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[399],"declarations":[{"constant":false,"id":399,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":471,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":398,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":403,"initialValue":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":400,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[405],"declarations":[{"constant":false,"id":405,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":471,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":404,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":408,"initialValue":{"expression":{"id":406,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[410],"declarations":[{"constant":false,"id":410,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":471,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":409,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":416,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":411,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":414,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[418],"declarations":[{"constant":false,"id":418,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":471,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":431,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":419,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":424,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$632","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$632","typeString":"contract Initializable"}],"id":423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":432,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":434,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":441,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":440,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":437,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":439,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":442,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":447,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":448,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":456,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":455,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":449,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":457,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":458,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":469,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":459,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":464,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":465,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":472,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":518,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[479],"declarations":[{"constant":false,"id":479,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":518,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":478,"nodeType":"UserDefinedTypeName","pathNode":{"id":477,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"6355:20:1"},"referencedDeclaration":375,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":482,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":485,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":487,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":494,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":493,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":495,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":498,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":500,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":501,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":507,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":508,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":515,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":514,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":519,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":519,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":474,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":525,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":527,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":539,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":537,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":534,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":540,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":632,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[546],"declarations":[{"constant":false,"id":546,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":585,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":545,"nodeType":"UserDefinedTypeName","pathNode":{"id":544,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"7824:20:1"},"referencedDeclaration":375,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":549,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":547,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":550,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":556,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":555,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":552,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":557,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":560,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":584,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":583,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":565,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":569,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":568,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":574,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":577,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":575,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":632,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":596,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":592,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":591,"id":595,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":597,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":589,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":632,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":607,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":603,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":602,"id":606,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":608,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":600,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":632,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":616,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":614,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":613,"id":615,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":617,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":632,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[625],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":630,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":628,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":626,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":622,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":625,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":629,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":631,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":621,"nodeType":"UserDefinedTypeName","pathNode":{"id":620,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"9129:20:1"},"referencedDeclaration":375,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":632,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":633,"src":"2349:6929:1","usedErrors":[381,384],"usedEvents":[389]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1712],"IERC1822Proxiable":[1418],"Initializable":[632],"UUPSUpgradeable":[814]},"id":815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":634,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":1419,"src":"141:88:2","symbolAliases":[{"foreign":{"id":635,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":1713,"src":"230:84:2","symbolAliases":[{"foreign":{"id":637,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":633,"src":"315:50:2","symbolAliases":[{"foreign":{"id":639,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":642,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1023:13:2"},"id":643,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":644,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1418,"src":"1038:17:2"},"id":645,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":814,"linearizedBaseContracts":[814,1418,632],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":652,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":814,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":650,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":656,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":814,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":654,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":659,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":664,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":664,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":671,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":667,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":670,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":672,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":679,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":675,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":678,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":680,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":685,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":686,"implemented":true,"kind":"function","modifiers":[{"id":683,"kind":"modifierInvocation","modifierName":{"id":682,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":814,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":691,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":692,"implemented":true,"kind":"function","modifiers":[{"id":689,"kind":"modifierInvocation","modifierName":{"id":688,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":814,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1417],"body":{"id":703,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":700,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1712_$","typeString":"type(library ERC1967Utils)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1433,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":699,"id":702,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":704,"implemented":true,"kind":"function","modifiers":[{"id":696,"kind":"modifierInvocation","modifierName":{"id":695,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":680,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":704,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":814,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":723,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":715,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":714,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":719,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":718,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":724,"implemented":true,"kind":"function","modifiers":[{"id":712,"kind":"modifierInvocation","modifierName":{"id":711,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":724,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":724,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":708,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":814,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":745,"nodeType":"Block","src":"4623:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":730,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4658:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":732,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4667:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":734,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"4728:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1712_$","typeString":"type(library ERC1967Utils)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1464,"src":"4728:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":737,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4764:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4728:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":744,"nodeType":"IfStatement","src":"4633:251:2","trueBody":{"id":743,"nodeType":"Block","src":"4823:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":740,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"4844:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"RevertStatement","src":"4837:36:2"}]}}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"4381:192:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4587:11:2","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"4598:2:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"4623:0:2"},"scope":814,"src":"4578:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"5059:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":752,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:2","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":754,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5090:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5073:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":760,"nodeType":"IfStatement","src":"5069:145:2","trueBody":{"id":759,"nodeType":"Block","src":"5098:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":756,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"5174:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"RevertStatement","src":"5167:36:2"}]}}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"4896:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5016:18:2","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"5034:2:2"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"5059:0:2"},"scope":814,"src":"5007:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"5226:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":768,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5612:17:2","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"newImplementation","nameLocation":"5638:17:2","nodeType":"VariableDeclaration","scope":768,"src":"5630:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5629:27:2"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"5673:0:2"},"scope":814,"src":"5603:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":812,"nodeType":"Block","src":"6117:453:2","statements":[{"clauses":[{"block":{"id":801,"nodeType":"Block","src":"6207:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6225:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":785,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1712_$","typeString":"type(library ERC1967Utils)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6246:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1433,"src":"6233:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6225:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":793,"nodeType":"IfStatement","src":"6221:120:2","trueBody":{"id":792,"nodeType":"Block","src":"6267:74:2","statements":[{"errorCall":{"arguments":[{"id":789,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6321:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":788,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6292:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":791,"nodeType":"RevertStatement","src":"6285:41:2"}]}},{"expression":{"arguments":[{"id":797,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6384:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"6403:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":794,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"6354:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1712_$","typeString":"type(library ERC1967Utils)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1527,"src":"6354:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"6354:54:2"}]},"errorName":"","id":802,"nodeType":"TryCatchClause","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"slot","nameLocation":"6201:4:2","nodeType":"VariableDeclaration","scope":802,"src":"6193:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6193:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6192:14:2"},"src":"6184:235:2"},{"block":{"id":809,"nodeType":"Block","src":"6426:138:2","statements":[{"errorCall":{"arguments":[{"id":806,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6535:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":803,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"6493:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1712_$","typeString":"type(library ERC1967Utils)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6506:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"6493:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"RevertStatement","src":"6486:67:2"}]},"errorName":"","id":810,"nodeType":"TryCatchClause","src":"6420:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":777,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6149:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":776,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"6131:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1418_$","typeString":"type(contract IERC1822Proxiable)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1418","typeString":"contract IERC1822Proxiable"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"6131:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":811,"nodeType":"TryStatement","src":"6127:437:2"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"5680:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":813,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6041:21:2","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"newImplementation","nameLocation":"6071:17:2","nodeType":"VariableDeclaration","scope":813,"src":"6063:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"data","nameLocation":"6103:4:2","nodeType":"VariableDeclaration","scope":813,"src":"6090:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":772,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6062:46:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"6117:0:2"},"scope":814,"src":"6032:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":815,"src":"986:5586:2","usedErrors":[381,384,659,664,1438,1451,2274,2537],"usedEvents":[389,1366]}],"src":"115:6458:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[860],"Initializable":[632]},"id":861,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":816,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":861,"sourceUnit":633,"src":"126:63:3","symbolAliases":[{"foreign":{"id":817,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":820,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"728:13:3"},"id":821,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":860,"linearizedBaseContracts":[860,632],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":826,"nodeType":"Block","src":"800:7:3","statements":[]},"id":827,"implemented":true,"kind":"function","modifiers":[{"id":824,"kind":"modifierInvocation","modifierName":{"id":823,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":860,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":832,"nodeType":"Block","src":"875:7:3","statements":[]},"id":833,"implemented":true,"kind":"function","modifiers":[{"id":830,"kind":"modifierInvocation","modifierName":{"id":829,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":860,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":838,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":837,"id":840,"nodeType":"Return","src":"959:17:3"}]},"id":842,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":860,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":850,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":847,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":846,"id":849,"nodeType":"Return","src":"1066:15:3"}]},"id":851,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":844,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":860,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":858,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":855,"id":857,"nodeType":"Return","src":"1176:8:3"}]},"id":859,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":860,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":861,"src":"688:505:3","usedErrors":[381,384],"usedEvents":[389]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[860],"Initializable":[632],"PausableUpgradeable":[1020]},"id":1021,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":862,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1021,"sourceUnit":861,"src":"128:67:4","symbolAliases":[{"foreign":{"id":863,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"136:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1021,"sourceUnit":633,"src":"196:63:4","symbolAliases":[{"foreign":{"id":865,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"204:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":868,"name":"Initializable","nameLocations":["742:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"742:13:4"},"id":869,"nodeType":"InheritanceSpecifier","src":"742:13:4"},{"baseName":{"id":870,"name":"ContextUpgradeable","nameLocations":["757:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":860,"src":"757:18:4"},"id":871,"nodeType":"InheritanceSpecifier","src":"757:18:4"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"261:439:4","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1020,"linearizedBaseContracts":[1020,860,632],"name":"PausableUpgradeable","nameLocation":"719:19:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"782:66:4","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":875,"members":[{"constant":false,"id":874,"mutability":"mutable","name":"_paused","nameLocation":"891:7:4","nodeType":"VariableDeclaration","scope":875,"src":"886:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:4","nodeType":"StructDefinition","scope":1020,"src":"853:52:4","visibility":"public"},{"constant":true,"id":878,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:4","nodeType":"VariableDeclaration","scope":1020,"src":"1023:117:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:4","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":885,"nodeType":"Block","src":"1227:82:4","statements":[{"AST":{"nativeSrc":"1246:57:4","nodeType":"YulBlock","src":"1246:57:4","statements":[{"nativeSrc":"1260:33:4","nodeType":"YulAssignment","src":"1260:33:4","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:4","nodeType":"YulIdentifier","src":"1270:23:4"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:4","nodeType":"YulIdentifier","src":"1260:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":882,"isOffset":false,"isSlot":true,"src":"1260:6:4","suffix":"slot","valueSize":1},{"declaration":878,"isOffset":false,"isSlot":false,"src":"1270:23:4","valueSize":1}],"id":884,"nodeType":"InlineAssembly","src":"1237:66:4"}]},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:4","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[],"src":"1175:2:4"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"$","nameLocation":"1224:1:4","nodeType":"VariableDeclaration","scope":886,"src":"1200:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":881,"nodeType":"UserDefinedTypeName","pathNode":{"id":880,"name":"PausableStorage","nameLocations":["1200:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"1200:15:4"},"referencedDeclaration":875,"src":"1200:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:4"},"scope":1020,"src":"1147:162:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"1315:73:4","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":891,"name":"Paused","nameLocation":"1399:6:4","nodeType":"EventDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:4","nodeType":"VariableDeclaration","scope":891,"src":"1406:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:4"},"src":"1393:30:4"},{"anonymous":false,"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"1429:70:4","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":896,"name":"Unpaused","nameLocation":"1510:8:4","nodeType":"EventDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:4","nodeType":"VariableDeclaration","scope":896,"src":"1519:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:4"},"src":"1504:32:4"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"1542:76:4","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":899,"name":"EnforcedPause","nameLocation":"1629:13:4","nodeType":"ErrorDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"1642:2:4"},"src":"1623:22:4"},{"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"1651:80:4","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":902,"name":"ExpectedPause","nameLocation":"1742:13:4","nodeType":"ErrorDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[],"src":"1755:2:4"},"src":"1736:22:4"},{"body":{"id":909,"nodeType":"Block","src":"1969:47:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":905,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"1979:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"ExpressionStatement","src":"1979:19:4"},{"id":908,"nodeType":"PlaceholderStatement","src":"2008:1:4"}]},"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"1764:175:4","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":910,"name":"whenNotPaused","nameLocation":"1953:13:4","nodeType":"ModifierDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"1966:2:4"},"src":"1944:72:4","virtual":false,"visibility":"internal"},{"body":{"id":917,"nodeType":"Block","src":"2216:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":913,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"2226:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"2226:16:4"},{"id":916,"nodeType":"PlaceholderStatement","src":"2252:1:4"}]},"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"2022:167:4","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":918,"name":"whenPaused","nameLocation":"2203:10:4","nodeType":"ModifierDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"2213:2:4"},"src":"2194:66:4","virtual":false,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"2319:7:4","statements":[]},"id":924,"implemented":true,"kind":"function","modifiers":[{"id":921,"kind":"modifierInvocation","modifierName":{"id":920,"name":"onlyInitializing","nameLocations":["2302:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2302:16:4"},"nodeType":"ModifierInvocation","src":"2302:16:4"}],"name":"__Pausable_init","nameLocation":"2275:15:4","nodeType":"FunctionDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[],"src":"2290:2:4"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"2319:0:4"},"scope":1020,"src":"2266:60:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":929,"nodeType":"Block","src":"2395:7:4","statements":[]},"id":930,"implemented":true,"kind":"function","modifiers":[{"id":927,"kind":"modifierInvocation","modifierName":{"id":926,"name":"onlyInitializing","nameLocations":["2378:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2378:16:4"},"nodeType":"ModifierInvocation","src":"2378:16:4"}],"name":"__Pausable_init_unchained","nameLocation":"2341:25:4","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"2366:2:4"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"2395:0:4"},"scope":1020,"src":"2332:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"2549:92:4","statements":[{"assignments":[938],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"$","nameLocation":"2583:1:4","nodeType":"VariableDeclaration","scope":945,"src":"2559:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":937,"nodeType":"UserDefinedTypeName","pathNode":{"id":936,"name":"PausableStorage","nameLocations":["2559:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"2559:15:4"},"referencedDeclaration":875,"src":"2559:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":941,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"2587:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$875_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2559:49:4"},{"expression":{"expression":{"id":942,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2625:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2627:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":874,"src":"2625:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":935,"id":944,"nodeType":"Return","src":"2618:16:4"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"2407:84:4","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":946,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2505:6:4","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"2511:2:4"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"2543:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":933,"name":"bool","nodeType":"ElementaryTypeName","src":"2543:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2542:6:4"},"scope":1020,"src":"2496:145:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":957,"nodeType":"Block","src":"2760:77:4","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":950,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2774:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":956,"nodeType":"IfStatement","src":"2770:61:4","trueBody":{"id":955,"nodeType":"Block","src":"2784:47:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":952,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"2805:13:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":954,"nodeType":"RevertStatement","src":"2798:22:4"}]}}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"2647:57:4","text":" @dev Throws if the contract is paused."},"id":958,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2718:17:4","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"2735:2:4"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"2760:0:4"},"scope":1020,"src":"2709:128:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":970,"nodeType":"Block","src":"2957:78:4","statements":[{"condition":{"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2971:9:4","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":962,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2972:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":969,"nodeType":"IfStatement","src":"2967:62:4","trueBody":{"id":968,"nodeType":"Block","src":"2982:47:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":965,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3003:13:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3003:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":967,"nodeType":"RevertStatement","src":"2996:22:4"}]}}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"2843:61:4","text":" @dev Throws if the contract is not paused."},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2918:14:4","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"2932:2:4"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[],"src":"2957:0:4"},"scope":1020,"src":"2909:126:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":994,"nodeType":"Block","src":"3219:127:4","statements":[{"assignments":[979],"declarations":[{"constant":false,"id":979,"mutability":"mutable","name":"$","nameLocation":"3253:1:4","nodeType":"VariableDeclaration","scope":994,"src":"3229:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":978,"nodeType":"UserDefinedTypeName","pathNode":{"id":977,"name":"PausableStorage","nameLocations":["3229:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"3229:15:4"},"referencedDeclaration":875,"src":"3229:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":982,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":980,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"3257:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$875_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3229:49:4"},{"expression":{"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":983,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"3288:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3290:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":874,"src":"3288:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3300:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3288:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":988,"nodeType":"ExpressionStatement","src":"3288:16:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":990,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"3326:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":989,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"3319:6:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"EmitStatement","src":"3314:25:4"}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"3041:124:4","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":995,"implemented":true,"kind":"function","modifiers":[{"id":975,"kind":"modifierInvocation","modifierName":{"id":974,"name":"whenNotPaused","nameLocations":["3205:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":910,"src":"3205:13:4"},"nodeType":"ModifierInvocation","src":"3205:13:4"}],"name":"_pause","nameLocation":"3179:6:4","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"3185:2:4"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"3219:0:4"},"scope":1020,"src":"3170:176:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1018,"nodeType":"Block","src":"3526:130:4","statements":[{"assignments":[1003],"declarations":[{"constant":false,"id":1003,"mutability":"mutable","name":"$","nameLocation":"3560:1:4","nodeType":"VariableDeclaration","scope":1018,"src":"3536:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1002,"nodeType":"UserDefinedTypeName","pathNode":{"id":1001,"name":"PausableStorage","nameLocations":["3536:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"3536:15:4"},"referencedDeclaration":875,"src":"3536:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1006,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1004,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"3564:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$875_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3536:49:4"},{"expression":{"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1007,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"3595:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$875_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3597:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":874,"src":"3595:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3607:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3595:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"ExpressionStatement","src":"3595:17:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1014,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"3636:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1013,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"3627:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3627:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"EmitStatement","src":"3622:27:4"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"3352:121:4","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1019,"implemented":true,"kind":"function","modifiers":[{"id":999,"kind":"modifierInvocation","modifierName":{"id":998,"name":"whenPaused","nameLocations":["3515:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":918,"src":"3515:10:4"},"nodeType":"ModifierInvocation","src":"3515:10:4"}],"name":"_unpause","nameLocation":"3487:8:4","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[],"src":"3495:2:4"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"3526:0:4"},"scope":1020,"src":"3478:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1021,"src":"701:2957:4","usedErrors":[381,384,899,902],"usedEvents":[389,891,896]}],"src":"102:3557:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[632],"ReentrancyGuardUpgradeable":[1149]},"id":1150,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1022,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1024,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1150,"sourceUnit":633,"src":"134:63:5","symbolAliases":[{"foreign":{"id":1023,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"142:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1026,"name":"Initializable","nameLocations":["1142:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1142:13:5"},"id":1027,"nodeType":"InheritanceSpecifier","src":"1142:13:5"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"199:894:5","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1149,"linearizedBaseContracts":[1149,632],"name":"ReentrancyGuardUpgradeable","nameLocation":"1112:26:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1030,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1935:11:5","nodeType":"VariableDeclaration","scope":1149,"src":"1910:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1949:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1033,"mutability":"constant","name":"ENTERED","nameLocation":"1981:7:5","nodeType":"VariableDeclaration","scope":1149,"src":"1956:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1991:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"1999:73:5","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1037,"members":[{"constant":false,"id":1036,"mutability":"mutable","name":"_status","nameLocation":"2125:7:5","nodeType":"VariableDeclaration","scope":1037,"src":"2117:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"2084:22:5","nodeType":"StructDefinition","scope":1149,"src":"2077:62:5","visibility":"public"},{"constant":true,"id":1040,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2289:30:5","nodeType":"VariableDeclaration","scope":1149,"src":"2264:124:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2264:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2322:66:5","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1047,"nodeType":"Block","src":"2489:89:5","statements":[{"AST":{"nativeSrc":"2508:64:5","nodeType":"YulBlock","src":"2508:64:5","statements":[{"nativeSrc":"2522:40:5","nodeType":"YulAssignment","src":"2522:40:5","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2532:30:5","nodeType":"YulIdentifier","src":"2532:30:5"},"variableNames":[{"name":"$.slot","nativeSrc":"2522:6:5","nodeType":"YulIdentifier","src":"2522:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1044,"isOffset":false,"isSlot":true,"src":"2522:6:5","suffix":"slot","valueSize":1},{"declaration":1040,"isOffset":false,"isSlot":false,"src":"2532:30:5","valueSize":1}],"id":1046,"nodeType":"InlineAssembly","src":"2499:73:5"}]},"id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2404:26:5","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"2430:2:5"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"$","nameLocation":"2486:1:5","nodeType":"VariableDeclaration","scope":1048,"src":"2455:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1043,"nodeType":"UserDefinedTypeName","pathNode":{"id":1042,"name":"ReentrancyGuardStorage","nameLocations":["2455:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1037,"src":"2455:22:5"},"referencedDeclaration":1037,"src":"2455:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2454:34:5"},"scope":1149,"src":"2395:183:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"2584:52:5","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1051,"name":"ReentrancyGuardReentrantCall","nameLocation":"2647:28:5","nodeType":"ErrorDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[],"src":"2675:2:5"},"src":"2641:37:5"},{"body":{"id":1059,"nodeType":"Block","src":"2744:51:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1056,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"2754:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"2754:34:5"}]},"id":1060,"implemented":true,"kind":"function","modifiers":[{"id":1054,"kind":"modifierInvocation","modifierName":{"id":1053,"name":"onlyInitializing","nameLocations":["2727:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2727:16:5"},"nodeType":"ModifierInvocation","src":"2727:16:5"}],"name":"__ReentrancyGuard_init","nameLocation":"2693:22:5","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[],"src":"2715:2:5"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[],"src":"2744:0:5"},"scope":1149,"src":"2684:111:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"2871:113:5","statements":[{"assignments":[1067],"declarations":[{"constant":false,"id":1067,"mutability":"mutable","name":"$","nameLocation":"2912:1:5","nodeType":"VariableDeclaration","scope":1077,"src":"2881:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1066,"nodeType":"UserDefinedTypeName","pathNode":{"id":1065,"name":"ReentrancyGuardStorage","nameLocations":["2881:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1037,"src":"2881:22:5"},"referencedDeclaration":1037,"src":"2881:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1070,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1068,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2916:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1037_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2881:63:5"},{"expression":{"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1071,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2954:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2956:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1036,"src":"2954:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1074,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2966:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2954:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1076,"nodeType":"ExpressionStatement","src":"2954:23:5"}]},"id":1078,"implemented":true,"kind":"function","modifiers":[{"id":1063,"kind":"modifierInvocation","modifierName":{"id":1062,"name":"onlyInitializing","nameLocations":["2854:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2854:16:5"},"nodeType":"ModifierInvocation","src":"2854:16:5"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2810:32:5","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"2842:2:5"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"2871:0:5"},"scope":1149,"src":"2801:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1088,"nodeType":"Block","src":"3385:79:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1081,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"3395:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"ExpressionStatement","src":"3395:21:5"},{"id":1084,"nodeType":"PlaceholderStatement","src":"3426:1:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1085,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3437:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"ExpressionStatement","src":"3437:20:5"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"2990:366:5","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1089,"name":"nonReentrant","nameLocation":"3370:12:5","nodeType":"ModifierDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"3382:2:5"},"src":"3361:103:5","virtual":false,"visibility":"internal"},{"body":{"id":1113,"nodeType":"Block","src":"3509:345:5","statements":[{"assignments":[1094],"declarations":[{"constant":false,"id":1094,"mutability":"mutable","name":"$","nameLocation":"3550:1:5","nodeType":"VariableDeclaration","scope":1113,"src":"3519:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1093,"nodeType":"UserDefinedTypeName","pathNode":{"id":1092,"name":"ReentrancyGuardStorage","nameLocations":["3519:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1037,"src":"3519:22:5"},"referencedDeclaration":1037,"src":"3519:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1097,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1095,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3554:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1037_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3519:63:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1098,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"3670:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3672:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1036,"src":"3670:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1100,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"3683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3670:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"3666:88:5","trueBody":{"id":1105,"nodeType":"Block","src":"3692:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1102,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"3713:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1104,"nodeType":"RevertStatement","src":"3706:37:5"}]}},{"expression":{"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"3828:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3830:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1036,"src":"3828:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1110,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"3840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3828:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1112,"nodeType":"ExpressionStatement","src":"3828:19:5"}]},"id":1114,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3479:19:5","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"3498:2:5"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"3509:0:5"},"scope":1149,"src":"3470:384:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1129,"nodeType":"Block","src":"3898:245:5","statements":[{"assignments":[1119],"declarations":[{"constant":false,"id":1119,"mutability":"mutable","name":"$","nameLocation":"3939:1:5","nodeType":"VariableDeclaration","scope":1129,"src":"3908:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1118,"nodeType":"UserDefinedTypeName","pathNode":{"id":1117,"name":"ReentrancyGuardStorage","nameLocations":["3908:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1037,"src":"3908:22:5"},"referencedDeclaration":1037,"src":"3908:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1122,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1120,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3943:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1037_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3908:63:5"},{"expression":{"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1123,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4113:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4115:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1036,"src":"4113:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1126,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"4125:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4113:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1128,"nodeType":"ExpressionStatement","src":"4113:23:5"}]},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3869:18:5","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[],"src":"3887:2:5"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"3898:0:5"},"scope":1149,"src":"3860:283:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1147,"nodeType":"Block","src":"4386:117:5","statements":[{"assignments":[1138],"declarations":[{"constant":false,"id":1138,"mutability":"mutable","name":"$","nameLocation":"4427:1:5","nodeType":"VariableDeclaration","scope":1147,"src":"4396:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1137,"nodeType":"UserDefinedTypeName","pathNode":{"id":1136,"name":"ReentrancyGuardStorage","nameLocations":["4396:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1037,"src":"4396:22:5"},"referencedDeclaration":1037,"src":"4396:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1141,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1139,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"4431:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1037_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4396:63:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1142,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"4476:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1037_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4478:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1036,"src":"4476:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1144,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4476:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1135,"id":1146,"nodeType":"Return","src":"4469:27:5"}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"4149:168:5","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1148,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4331:23:5","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"4354:2:5"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1148,"src":"4380:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1133,"name":"bool","nodeType":"ElementaryTypeName","src":"4380:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4379:6:5"},"scope":1149,"src":"4322:181:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1150,"src":"1094:3411:5","usedErrors":[381,384,1051],"usedEvents":[389]}],"src":"109:4397:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[1189],"IERC165":[5014],"Initializable":[632]},"id":1190,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1151,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1190,"sourceUnit":5015,"src":"140:80:6","symbolAliases":[{"foreign":{"id":1152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1190,"sourceUnit":633,"src":"221:66:6","symbolAliases":[{"foreign":{"id":1154,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"229:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1157,"name":"Initializable","nameLocations":["808:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"808:13:6"},"id":1158,"nodeType":"InheritanceSpecifier","src":"808:13:6"},{"baseName":{"id":1159,"name":"IERC165","nameLocations":["823:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"823:7:6"},"id":1160,"nodeType":"InheritanceSpecifier","src":"823:7:6"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"289:479:6","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1189,"linearizedBaseContracts":[1189,5014,632],"name":"ERC165Upgradeable","nameLocation":"787:17:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1165,"nodeType":"Block","src":"888:7:6","statements":[]},"id":1166,"implemented":true,"kind":"function","modifiers":[{"id":1163,"kind":"modifierInvocation","modifierName":{"id":1162,"name":"onlyInitializing","nameLocations":["871:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"871:16:6"},"nodeType":"ModifierInvocation","src":"871:16:6"}],"name":"__ERC165_init","nameLocation":"846:13:6","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"859:2:6"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"888:0:6"},"scope":1189,"src":"837:58:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1171,"nodeType":"Block","src":"962:7:6","statements":[]},"id":1172,"implemented":true,"kind":"function","modifiers":[{"id":1169,"kind":"modifierInvocation","modifierName":{"id":1168,"name":"onlyInitializing","nameLocations":["945:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"945:16:6"},"nodeType":"ModifierInvocation","src":"945:16:6"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:6","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"933:2:6"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"962:0:6"},"scope":1189,"src":"901:68:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5013],"body":{"id":1187,"nodeType":"Block","src":"1084:64:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1180,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"1101:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1182,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"1121:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5014_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5014_$","typeString":"type(contract IERC165)"}],"id":1181,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1116:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5014","typeString":"type(contract IERC165)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1130:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1116:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1101:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1179,"id":1186,"nodeType":"Return","src":"1094:47:6"}]},"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"974:23:6","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1188,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1011:17:6","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"interfaceId","nameLocation":"1036:11:6","nodeType":"VariableDeclaration","scope":1188,"src":"1029:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1174,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1029:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1028:20:6"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1188,"src":"1078:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1177,"name":"bool","nodeType":"ElementaryTypeName","src":"1078:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1077:6:6"},"scope":1189,"src":"1002:146:6","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1190,"src":"769:381:6","usedErrors":[381,384],"usedEvents":[389]}],"src":"114:1037:6"},"id":6},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[1272]},"id":1273,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1191,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"135:90:7","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":1272,"linearizedBaseContracts":[1272],"name":"IAccessControl","nameLocation":"236:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"257:56:7","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":1199,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:7","nodeType":"ErrorDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"account","nameLocation":"365:7:7","nodeType":"VariableDeclaration","scope":1199,"src":"357:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:7","nodeType":"VariableDeclaration","scope":1199,"src":"374:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:7"},"src":"318:76:7"},{"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"400:148:7","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":1202,"name":"AccessControlBadConfirmation","nameLocation":"559:28:7","nodeType":"ErrorDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[],"src":"587:2:7"},"src":"553:37:7"},{"anonymous":false,"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"596:254:7","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":1211,"name":"RoleAdminChanged","nameLocation":"861:16:7","nodeType":"EventDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:7","nodeType":"VariableDeclaration","scope":1211,"src":"878:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1207,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:7","nodeType":"VariableDeclaration","scope":1211,"src":"900:33:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1209,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:7","nodeType":"VariableDeclaration","scope":1211,"src":"935:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:7"},"src":"855:110:7"},{"anonymous":false,"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"971:295:7","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":1220,"name":"RoleGranted","nameLocation":"1277:11:7","nodeType":"EventDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:7","nodeType":"VariableDeclaration","scope":1220,"src":"1289:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1216,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:7","nodeType":"VariableDeclaration","scope":1220,"src":"1311:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:7","nodeType":"VariableDeclaration","scope":1220,"src":"1336:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:7"},"src":"1271:89:7"},{"anonymous":false,"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"1366:275:7","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":1229,"name":"RoleRevoked","nameLocation":"1652:11:7","nodeType":"EventDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:7","nodeType":"VariableDeclaration","scope":1229,"src":"1664:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1225,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:7","nodeType":"VariableDeclaration","scope":1229,"src":"1686:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:7","nodeType":"VariableDeclaration","scope":1229,"src":"1711:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:7"},"src":"1646:89:7"},{"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"1741:76:7","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":1239,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:7","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"role","nameLocation":"1847:4:7","nodeType":"VariableDeclaration","scope":1239,"src":"1839:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"account","nameLocation":"1861:7:7","nodeType":"VariableDeclaration","scope":1239,"src":"1853:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1239,"src":"1893:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1236,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:7"},"scope":1272,"src":"1822:77:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"1905:184:7","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":1247,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:7","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"role","nameLocation":"2124:4:7","nodeType":"VariableDeclaration","scope":1247,"src":"2116:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:7"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1247,"src":"2153:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:7"},"scope":1272,"src":"2094:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"2168:239:7","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1255,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:7","nodeType":"FunctionDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"role","nameLocation":"2439:4:7","nodeType":"VariableDeclaration","scope":1255,"src":"2431:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"account","nameLocation":"2453:7:7","nodeType":"VariableDeclaration","scope":1255,"src":"2445:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:7"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[],"src":"2470:0:7"},"scope":1272,"src":"2412:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"2477:223:7","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1263,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:7","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"role","nameLocation":"2733:4:7","nodeType":"VariableDeclaration","scope":1263,"src":"2725:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"account","nameLocation":"2747:7:7","nodeType":"VariableDeclaration","scope":1263,"src":"2739:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:7"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[],"src":"2764:0:7"},"scope":1272,"src":"2705:60:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"2771:491:7","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":1271,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:7","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"role","nameLocation":"3297:4:7","nodeType":"VariableDeclaration","scope":1271,"src":"3289:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:7","nodeType":"VariableDeclaration","scope":1271,"src":"3303:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:7"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[],"src":"3339:0:7"},"scope":1272,"src":"3267:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1273,"src":"226:3116:7","usedErrors":[1199,1202],"usedEvents":[1211,1220,1229]}],"src":"109:3234:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[1354],"IERC165":[5014],"IERC20":[1800]},"id":1355,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1274,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:8"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":1276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1355,"sourceUnit":1384,"src":"133:36:8","symbolAliases":[{"foreign":{"id":1275,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"141:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":1278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1355,"sourceUnit":1359,"src":"170:38:8","symbolAliases":[{"foreign":{"id":1277,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"178:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1280,"name":"IERC20","nameLocations":["590:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"590:6:8"},"id":1281,"nodeType":"InheritanceSpecifier","src":"590:6:8"},{"baseName":{"id":1282,"name":"IERC165","nameLocations":["598:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"598:7:8"},"id":1283,"nodeType":"InheritanceSpecifier","src":"598:7:8"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"210:357:8","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":1354,"linearizedBaseContracts":[1354,5014,1800],"name":"IERC1363","nameLocation":"578:8:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"1148:370:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":1293,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:8","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"to","nameLocation":"1556:2:8","nodeType":"VariableDeclaration","scope":1293,"src":"1548:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"value","nameLocation":"1568:5:8","nodeType":"VariableDeclaration","scope":1293,"src":"1560:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:8"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1293,"src":"1593:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:8"},"scope":1354,"src":"1523:76:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"1605:453:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":1305,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:8","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"to","nameLocation":"2096:2:8","nodeType":"VariableDeclaration","scope":1305,"src":"2088:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"value","nameLocation":"2108:5:8","nodeType":"VariableDeclaration","scope":1305,"src":"2100:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"data","nameLocation":"2130:4:8","nodeType":"VariableDeclaration","scope":1305,"src":"2115:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:8"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"2154:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1302,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:8"},"scope":1354,"src":"2063:97:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"2166:453:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":1317,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:8","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"from","nameLocation":"2661:4:8","nodeType":"VariableDeclaration","scope":1317,"src":"2653:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"to","nameLocation":"2675:2:8","nodeType":"VariableDeclaration","scope":1317,"src":"2667:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"value","nameLocation":"2687:5:8","nodeType":"VariableDeclaration","scope":1317,"src":"2679:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:8"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1317,"src":"2712:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1314,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:8"},"scope":1354,"src":"2624:94:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1318,"nodeType":"StructuredDocumentation","src":"2724:536:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":1331,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:8","nodeType":"FunctionDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"from","nameLocation":"3302:4:8","nodeType":"VariableDeclaration","scope":1331,"src":"3294:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"to","nameLocation":"3316:2:8","nodeType":"VariableDeclaration","scope":1331,"src":"3308:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"value","nameLocation":"3328:5:8","nodeType":"VariableDeclaration","scope":1331,"src":"3320:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"data","nameLocation":"3350:4:8","nodeType":"VariableDeclaration","scope":1331,"src":"3335:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1325,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:8"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1331,"src":"3374:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1328,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:8"},"scope":1354,"src":"3265:115:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"3386:390:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":1341,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:8","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"spender","nameLocation":"3813:7:8","nodeType":"VariableDeclaration","scope":1341,"src":"3805:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"value","nameLocation":"3830:5:8","nodeType":"VariableDeclaration","scope":1341,"src":"3822:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:8"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1341,"src":"3855:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1338,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:8"},"scope":1354,"src":"3781:80:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1342,"nodeType":"StructuredDocumentation","src":"3867:478:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":1353,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:8","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"spender","nameLocation":"4382:7:8","nodeType":"VariableDeclaration","scope":1353,"src":"4374:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"value","nameLocation":"4399:5:8","nodeType":"VariableDeclaration","scope":1353,"src":"4391:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"data","nameLocation":"4421:4:8","nodeType":"VariableDeclaration","scope":1353,"src":"4406:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1347,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:8"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1353,"src":"4445:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1350,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:8"},"scope":1354,"src":"4350:101:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1355,"src":"568:3885:8","usedErrors":[],"usedEvents":[1734,1743]}],"src":"107:4347:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[5014]},"id":1359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1356,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1359,"sourceUnit":5015,"src":"133:59:9","symbolAliases":[{"foreign":{"id":1357,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"141:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[1379]},"id":1380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1360,"literals":["solidity",">=","0.4",".11"],"nodeType":"PragmaDirective","src":"107:25:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"134:101:10","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":1379,"linearizedBaseContracts":[1379],"name":"IERC1967","nameLocation":"246:8:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"261:68:10","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1366,"name":"Upgraded","nameLocation":"340:8:10","nodeType":"EventDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"365:14:10","nodeType":"VariableDeclaration","scope":1366,"src":"349:30:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:32:10"},"src":"334:47:10"},{"anonymous":false,"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"387:67:10","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1373,"name":"AdminChanged","nameLocation":"465:12:10","nodeType":"EventDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"486:13:10","nodeType":"VariableDeclaration","scope":1373,"src":"478:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1371,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"509:8:10","nodeType":"VariableDeclaration","scope":1373,"src":"501:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:41:10"},"src":"459:60:10"},{"anonymous":false,"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"525:59:10","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1378,"name":"BeaconUpgraded","nameLocation":"595:14:10","nodeType":"EventDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"626:6:10","nodeType":"VariableDeclaration","scope":1378,"src":"610:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"609:24:10"},"src":"589:45:10"}],"scope":1380,"src":"236:400:10","usedErrors":[],"usedEvents":[1366,1373,1378]}],"src":"107:530:10"},"id":10},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[1800]},"id":1384,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1381,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":1383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1384,"sourceUnit":1801,"src":"132:49:11","symbolAliases":[{"foreign":{"id":1382,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"140:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:11"},"id":11},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[1408]},"id":1409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1385,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1408,"linearizedBaseContracts":[1408],"name":"IERC5267","nameLocation":"144:8:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"159:84:12","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":1388,"name":"EIP712DomainChanged","nameLocation":"254:19:12","nodeType":"EventDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[],"src":"273:2:12"},"src":"248:28:12"},{"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"282:140:12","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":1407,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:12","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"448:2:12"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"fields","nameLocation":"518:6:12","nodeType":"VariableDeclaration","scope":1407,"src":"511:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1391,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"name","nameLocation":"552:4:12","nodeType":"VariableDeclaration","scope":1407,"src":"538:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1393,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"version","nameLocation":"584:7:12","nodeType":"VariableDeclaration","scope":1407,"src":"570:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1395,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"chainId","nameLocation":"613:7:12","nodeType":"VariableDeclaration","scope":1407,"src":"605:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:12","nodeType":"VariableDeclaration","scope":1407,"src":"634:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"salt","nameLocation":"681:4:12","nodeType":"VariableDeclaration","scope":1407,"src":"673:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"extensions","nameLocation":"716:10:12","nodeType":"VariableDeclaration","scope":1407,"src":"699:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1404,"nodeType":"ArrayTypeName","src":"699:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:12"},"scope":1408,"src":"427:310:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1409,"src":"134:605:12","usedErrors":[],"usedEvents":[1388]}],"src":"107:633:12"},"id":12},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1418]},"id":1419,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1410,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"113:25:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"140:204:13","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1418,"linearizedBaseContracts":[1418],"name":"IERC1822Proxiable","nameLocation":"355:17:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"379:438:13","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1417,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"831:13:13","nodeType":"FunctionDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"844:2:13"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1417,"src":"870:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"870:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"869:9:13"},"scope":1418,"src":"822:57:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1419,"src":"345:536:13","usedErrors":[],"usedEvents":[]}],"src":"113:769:13"},"id":13},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2524],"ERC1967Utils":[1712],"IBeacon":[1722],"IERC1967":[1379],"StorageSlot":[2939]},"id":1713,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1420,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"114:24:14"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1422,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1713,"sourceUnit":1723,"src":"140:46:14","symbolAliases":[{"foreign":{"id":1421,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"148:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":1424,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1713,"sourceUnit":1380,"src":"187:55:14","symbolAliases":[{"foreign":{"id":1423,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"195:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1426,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1713,"sourceUnit":2525,"src":"243:48:14","symbolAliases":[{"foreign":{"id":1425,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"251:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1713,"sourceUnit":2940,"src":"292:56:14","symbolAliases":[{"foreign":{"id":1427,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"300:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"350:145:14","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":1712,"linearizedBaseContracts":[1712],"name":"ERC1967Utils","nameLocation":"504:12:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"523:170:14","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1433,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:14","nodeType":"VariableDeclaration","scope":1712,"src":"763:114:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:14","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"884:69:14","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1438,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:14","nodeType":"ErrorDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:14","nodeType":"VariableDeclaration","scope":1438,"src":"993:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:14"},"src":"958:59:14"},{"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"1023:60:14","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1443,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:14","nodeType":"ErrorDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"admin","nameLocation":"1122:5:14","nodeType":"VariableDeclaration","scope":1443,"src":"1114:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:14"},"src":"1088:41:14"},{"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"1135:61:14","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1448,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:14","nodeType":"ErrorDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:14","nodeType":"VariableDeclaration","scope":1448,"src":"1228:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:14"},"src":"1201:43:14"},{"documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"1250:82:14","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1451,"name":"ERC1967NonPayable","nameLocation":"1343:17:14","nodeType":"ErrorDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"1360:2:14"},"src":"1337:26:14"},{"body":{"id":1463,"nodeType":"Block","src":"1502:77:14","statements":[{"expression":{"expression":{"arguments":[{"id":1459,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"1546:19:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1457,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"1519:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2939_$","typeString":"type(library StorageSlot)"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2850,"src":"1519:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2821_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2821_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"1519:53:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1456,"id":1462,"nodeType":"Return","src":"1512:60:14"}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"1369:67:14","text":" @dev Returns the current implementation address."},"id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:14","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[],"src":"1467:2:14"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1464,"src":"1493:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:14"},"scope":1712,"src":"1441:138:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"1734:218:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1470,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"1748:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:14","memberName":"code","nodeType":"MemberAccess","src":"1748:22:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:14","memberName":"length","nodeType":"MemberAccess","src":"1748:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"1744:119:14","trueBody":{"id":1479,"nodeType":"Block","src":"1784:79:14","statements":[{"errorCall":{"arguments":[{"id":1476,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"1834:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1475,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"1805:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"RevertStatement","src":"1798:54:14"}]}},{"expression":{"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1484,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"1899:19:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1481,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"1872:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2939_$","typeString":"type(library StorageSlot)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2850,"src":"1872:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2821_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2821_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"1872:53:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1487,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"1928:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1489,"nodeType":"ExpressionStatement","src":"1872:73:14"}]},"documentation":{"id":1465,"nodeType":"StructuredDocumentation","src":"1585:81:14","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:14","nodeType":"FunctionDefinition","parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:14","nodeType":"VariableDeclaration","scope":1491,"src":"1699:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1466,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:14"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[],"src":"1734:0:14"},"scope":1712,"src":"1671:281:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1526,"nodeType":"Block","src":"2345:263:14","statements":[{"expression":{"arguments":[{"id":1500,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2374:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1499,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"2355:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"ExpressionStatement","src":"2355:37:14"},{"eventCall":{"arguments":[{"id":1506,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2425:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1503,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"2407:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1379_$","typeString":"type(contract IERC1967)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:14","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"2407:17:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1508,"nodeType":"EmitStatement","src":"2402:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1509,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2458:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:14","memberName":"length","nodeType":"MemberAccess","src":"2458:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1524,"nodeType":"Block","src":"2559:43:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1521,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"2573:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1523,"nodeType":"ExpressionStatement","src":"2573:18:14"}]},"id":1525,"nodeType":"IfStatement","src":"2454:148:14","trueBody":{"id":1520,"nodeType":"Block","src":"2475:78:14","statements":[{"expression":{"arguments":[{"id":1516,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2518:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1517,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2537:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1513,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"2489:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2524_$","typeString":"type(library Address)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:14","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2441,"src":"2489:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1519,"nodeType":"ExpressionStatement","src":"2489:53:14"}]}}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"1958:301:14","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:14","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:14","nodeType":"VariableDeclaration","scope":1527,"src":"2290:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"data","nameLocation":"2330:4:14","nodeType":"VariableDeclaration","scope":1527,"src":"2317:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1495,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:14"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"2345:0:14"},"scope":1712,"src":"2264:344:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"2614:145:14","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1531,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:14","nodeType":"VariableDeclaration","scope":1712,"src":"2829:105:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:14","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1543,"nodeType":"Block","src":"3339:68:14","statements":[{"expression":{"expression":{"arguments":[{"id":1539,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"3383:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1537,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3356:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2939_$","typeString":"type(library StorageSlot)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2850,"src":"3356:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2821_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2821_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"3356:44:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1536,"id":1542,"nodeType":"Return","src":"3349:51:14"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"2941:341:14","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:14","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"3304:2:14"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1544,"src":"3330:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:14"},"scope":1712,"src":"3287:120:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"3535:172:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1550,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"3549:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:14","typeDescriptions":{}}},"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1564,"nodeType":"IfStatement","src":"3545:91:14","trueBody":{"id":1563,"nodeType":"Block","src":"3573:63:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:14","typeDescriptions":{}}},"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1556,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"3594:19:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1562,"nodeType":"RevertStatement","src":"3587:38:14"}]}},{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1568,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"3672:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1565,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3645:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2939_$","typeString":"type(library StorageSlot)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2850,"src":"3645:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2821_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2821_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"3645:44:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1571,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"3692:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1573,"nodeType":"ExpressionStatement","src":"3645:55:14"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"3413:72:14","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:14","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:14","nodeType":"VariableDeclaration","scope":1575,"src":"3509:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:14"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[],"src":"3535:0:14"},"scope":1712,"src":"3490:217:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1593,"nodeType":"Block","src":"3875:94:14","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1584,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3912:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1586,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"3924:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1581,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"3890:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1379_$","typeString":"type(contract IERC1967)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:14","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":1373,"src":"3890:21:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"EmitStatement","src":"3885:48:14"},{"expression":{"arguments":[{"id":1590,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"3953:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1589,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3943:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"3943:19:14"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"3713:109:14","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1594,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:14","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:14","nodeType":"VariableDeclaration","scope":1594,"src":"3848:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:14"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[],"src":"3875:0:14"},"scope":1712,"src":"3827:142:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"3975:201:14","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1598,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:14","nodeType":"VariableDeclaration","scope":1712,"src":"4246:106:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:14","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"4468:69:14","statements":[{"expression":{"expression":{"arguments":[{"id":1606,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"4512:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1604,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"4485:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2939_$","typeString":"type(library StorageSlot)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2850,"src":"4485:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2821_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2821_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"4485:45:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1603,"id":1609,"nodeType":"Return","src":"4478:52:14"}]},"documentation":{"id":1599,"nodeType":"StructuredDocumentation","src":"4359:51:14","text":" @dev Returns the current beacon."},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:14","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[],"src":"4433:2:14"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"4459:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:14"},"scope":1712,"src":"4415:122:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"4667:390:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1617,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4681:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:14","memberName":"code","nodeType":"MemberAccess","src":"4681:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:14","memberName":"length","nodeType":"MemberAccess","src":"4681:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1627,"nodeType":"IfStatement","src":"4677:95:14","trueBody":{"id":1626,"nodeType":"Block","src":"4709:63:14","statements":[{"errorCall":{"arguments":[{"id":1623,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4751:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1622,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"4730:20:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1625,"nodeType":"RevertStatement","src":"4723:38:14"}]}},{"expression":{"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1631,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"4809:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1628,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"4782:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2939_$","typeString":"type(library StorageSlot)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2850,"src":"4782:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2821_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2821_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"4782:45:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1634,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4830:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1636,"nodeType":"ExpressionStatement","src":"4782:57:14"},{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:14","nodeType":"VariableDeclaration","scope":1656,"src":"4850:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1644,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1640,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4889:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1639,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"4881:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1722_$","typeString":"type(contract IBeacon)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1722","typeString":"contract IBeacon"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:14","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1721,"src":"4881:33:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1645,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"4930:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:14","memberName":"code","nodeType":"MemberAccess","src":"4930:25:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:14","memberName":"length","nodeType":"MemberAccess","src":"4930:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1655,"nodeType":"IfStatement","src":"4926:125:14","trueBody":{"id":1654,"nodeType":"Block","src":"4969:82:14","statements":[{"errorCall":{"arguments":[{"id":1651,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"5019:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1650,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"4990:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1653,"nodeType":"RevertStatement","src":"4983:57:14"}]}}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"4543:72:14","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:14","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:14","nodeType":"VariableDeclaration","scope":1657,"src":"4640:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:14"},"returnParameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"4667:0:14"},"scope":1712,"src":"4620:437:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1696,"nodeType":"Block","src":"5661:263:14","statements":[{"expression":{"arguments":[{"id":1666,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"5682:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1665,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5671:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"ExpressionStatement","src":"5671:21:14"},{"eventCall":{"arguments":[{"id":1672,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"5731:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1669,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"5707:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1379_$","typeString":"type(contract IERC1967)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:14","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"5707:23:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1674,"nodeType":"EmitStatement","src":"5702:39:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1675,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5756:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:14","memberName":"length","nodeType":"MemberAccess","src":"5756:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1694,"nodeType":"Block","src":"5875:43:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1691,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"5889:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"5889:18:14"}]},"id":1695,"nodeType":"IfStatement","src":"5752:166:14","trueBody":{"id":1690,"nodeType":"Block","src":"5773:96:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1683,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"5824:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1682,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"5816:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1722_$","typeString":"type(contract IBeacon)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1722","typeString":"contract IBeacon"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:14","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1721,"src":"5816:33:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1687,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5853:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1679,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"5787:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2524_$","typeString":"type(library Address)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:14","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2441,"src":"5787:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1689,"nodeType":"ExpressionStatement","src":"5787:71:14"}]}}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"5063:514:14","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:14","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:14","nodeType":"VariableDeclaration","scope":1697,"src":"5614:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"data","nameLocation":"5646:4:14","nodeType":"VariableDeclaration","scope":1697,"src":"5633:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1661,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:14"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"5661:0:14"},"scope":1712,"src":"5582:342:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"6149:86:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:14","memberName":"value","nodeType":"MemberAccess","src":"6163:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1709,"nodeType":"IfStatement","src":"6159:70:14","trueBody":{"id":1708,"nodeType":"Block","src":"6178:51:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1705,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"6199:17:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"RevertStatement","src":"6192:26:14"}]}}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"5930:178:14","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:14","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[],"src":"6138:2:14"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[],"src":"6149:0:14"},"scope":1712,"src":"6113:122:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1713,"src":"496:5741:14","usedErrors":[1438,1443,1448,1451],"usedEvents":[]}],"src":"114:6124:14"},"id":14},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1722]},"id":1723,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1714,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"108:25:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"135:79:15","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1722,"linearizedBaseContracts":[1722],"name":"IBeacon","nameLocation":"225:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"239:168:15","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1721,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"421:14:15","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"435:2:15"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"461:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"460:9:15"},"scope":1722,"src":"412:58:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1723,"src":"215:257:15","usedErrors":[],"usedEvents":[]}],"src":"108:365:15"},"id":15},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1800]},"id":1801,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1724,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"133:71:16","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1800,"linearizedBaseContracts":[1800],"name":"IERC20","nameLocation":"215:6:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"228:158:16","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1734,"name":"Transfer","nameLocation":"397:8:16","nodeType":"EventDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:16","nodeType":"VariableDeclaration","scope":1734,"src":"406:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:16","nodeType":"VariableDeclaration","scope":1734,"src":"428:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:16","nodeType":"VariableDeclaration","scope":1734,"src":"448:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:16"},"src":"391:72:16"},{"anonymous":false,"documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"469:148:16","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1743,"name":"Approval","nameLocation":"628:8:16","nodeType":"EventDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:16","nodeType":"VariableDeclaration","scope":1743,"src":"637:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1739,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:16","nodeType":"VariableDeclaration","scope":1743,"src":"660:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1738,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1741,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:16","nodeType":"VariableDeclaration","scope":1743,"src":"685:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:16"},"src":"622:78:16"},{"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"706:65:16","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1749,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:16","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[],"src":"796:2:16"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"822:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:16"},"scope":1800,"src":"776:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"837:71:16","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1757,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:16","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"account","nameLocation":"940:7:16","nodeType":"VariableDeclaration","scope":1757,"src":"932:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:16"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1757,"src":"972:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:16"},"scope":1800,"src":"913:68:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"987:213:16","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1767,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:16","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"to","nameLocation":"1231:2:16","nodeType":"VariableDeclaration","scope":1767,"src":"1223:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"value","nameLocation":"1243:5:16","nodeType":"VariableDeclaration","scope":1767,"src":"1235:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:16"},"returnParameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"1268:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1764,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:16"},"scope":1800,"src":"1205:69:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"1280:264:16","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1777,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:16","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"owner","nameLocation":"1576:5:16","nodeType":"VariableDeclaration","scope":1777,"src":"1568:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"spender","nameLocation":"1591:7:16","nodeType":"VariableDeclaration","scope":1777,"src":"1583:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1771,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:16"},"returnParameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1777,"src":"1623:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:16"},"scope":1800,"src":"1549:83:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"1638:667:16","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1787,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:16","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"spender","nameLocation":"2335:7:16","nodeType":"VariableDeclaration","scope":1787,"src":"2327:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"value","nameLocation":"2352:5:16","nodeType":"VariableDeclaration","scope":1787,"src":"2344:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:16"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1787,"src":"2377:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1784,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:16"},"scope":1800,"src":"2310:73:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"2389:297:16","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1799,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:16","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"from","nameLocation":"2721:4:16","nodeType":"VariableDeclaration","scope":1799,"src":"2713:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"to","nameLocation":"2735:2:16","nodeType":"VariableDeclaration","scope":1799,"src":"2727:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1791,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"value","nameLocation":"2747:5:16","nodeType":"VariableDeclaration","scope":1799,"src":"2739:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:16"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"2772:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1796,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:16"},"scope":1800,"src":"2691:87:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1801,"src":"205:2575:16","usedErrors":[],"usedEvents":[1734,1743]}],"src":"106:2675:16"},"id":16},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[1354],"IERC20":[1800],"SafeERC20":[2264]},"id":2265,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1802,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2265,"sourceUnit":1801,"src":"141:37:17","symbolAliases":[{"foreign":{"id":1803,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"149:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2265,"sourceUnit":1355,"src":"179:58:17","symbolAliases":[{"foreign":{"id":1805,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"187:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"239:458:17","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2264,"linearizedBaseContracts":[2264],"name":"SafeERC20","nameLocation":"706:9:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1808,"nodeType":"StructuredDocumentation","src":"722:65:17","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1812,"name":"SafeERC20FailedOperation","nameLocation":"798:24:17","nodeType":"ErrorDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"token","nameLocation":"831:5:17","nodeType":"VariableDeclaration","scope":1812,"src":"823:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:17"},"src":"792:46:17"},{"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"844:71:17","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1821,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:17","nodeType":"ErrorDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"spender","nameLocation":"967:7:17","nodeType":"VariableDeclaration","scope":1821,"src":"959:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:17","nodeType":"VariableDeclaration","scope":1821,"src":"976:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:17","nodeType":"VariableDeclaration","scope":1821,"src":"1002:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:17"},"src":"920:109:17"},{"body":{"id":1844,"nodeType":"Block","src":"1291:88:17","statements":[{"expression":{"arguments":[{"id":1833,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"1321:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1836,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"1343:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1767,"src":"1343:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1838,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"1360:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"1364:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1834,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1832,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"1301:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1843,"nodeType":"ExpressionStatement","src":"1301:71:17"}]},"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"1035:179:17","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:17","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"token","nameLocation":"1248:5:17","nodeType":"VariableDeclaration","scope":1845,"src":"1241:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},"typeName":{"id":1824,"nodeType":"UserDefinedTypeName","pathNode":{"id":1823,"name":"IERC20","nameLocations":["1241:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"1241:6:17"},"referencedDeclaration":1800,"src":"1241:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"to","nameLocation":"1263:2:17","nodeType":"VariableDeclaration","scope":1845,"src":"1255:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1826,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"value","nameLocation":"1275:5:17","nodeType":"VariableDeclaration","scope":1845,"src":"1267:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:17"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[],"src":"1291:0:17"},"scope":2264,"src":"1219:160:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"1708:98:17","statements":[{"expression":{"arguments":[{"id":1859,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"1738:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1862,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"1760:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1799,"src":"1760:18:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1864,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"1781:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1787:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"1791:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1860,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1858,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"1718:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"ExpressionStatement","src":"1718:81:17"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"1385:228:17","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:17","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"token","nameLocation":"1651:5:17","nodeType":"VariableDeclaration","scope":1872,"src":"1644:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},"typeName":{"id":1848,"nodeType":"UserDefinedTypeName","pathNode":{"id":1847,"name":"IERC20","nameLocations":["1644:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"1644:6:17"},"referencedDeclaration":1800,"src":"1644:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"from","nameLocation":"1666:4:17","nodeType":"VariableDeclaration","scope":1872,"src":"1658:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"to","nameLocation":"1680:2:17","nodeType":"VariableDeclaration","scope":1872,"src":"1672:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"value","nameLocation":"1692:5:17","nodeType":"VariableDeclaration","scope":1872,"src":"1684:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:17"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"1708:0:17"},"scope":2264,"src":"1618:188:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1897,"nodeType":"Block","src":"2033:99:17","statements":[{"expression":{"arguments":[{"id":1886,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"2074:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1889,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"2096:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1767,"src":"2096:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1891,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"2113:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2117:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1887,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1885,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"2050:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1884,"id":1896,"nodeType":"Return","src":"2043:82:17"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"1812:126:17","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":1898,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:17","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"token","nameLocation":"1975:5:17","nodeType":"VariableDeclaration","scope":1898,"src":"1968:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},"typeName":{"id":1875,"nodeType":"UserDefinedTypeName","pathNode":{"id":1874,"name":"IERC20","nameLocations":["1968:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"1968:6:17"},"referencedDeclaration":1800,"src":"1968:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"to","nameLocation":"1990:2:17","nodeType":"VariableDeclaration","scope":1898,"src":"1982:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"value","nameLocation":"2002:5:17","nodeType":"VariableDeclaration","scope":1898,"src":"1994:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:17"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1898,"src":"2027:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1882,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:17"},"scope":2264,"src":"1943:189:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"2381:109:17","statements":[{"expression":{"arguments":[{"id":1914,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"2422:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1917,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"2444:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1799,"src":"2444:18:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1919,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"2465:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1920,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"2471:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"2475:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1915,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1913,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"2398:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1912,"id":1925,"nodeType":"Return","src":"2391:92:17"}]},"documentation":{"id":1899,"nodeType":"StructuredDocumentation","src":"2138:130:17","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:17","nodeType":"FunctionDefinition","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"token","nameLocation":"2309:5:17","nodeType":"VariableDeclaration","scope":1927,"src":"2302:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},"typeName":{"id":1901,"nodeType":"UserDefinedTypeName","pathNode":{"id":1900,"name":"IERC20","nameLocations":["2302:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"2302:6:17"},"referencedDeclaration":1800,"src":"2302:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1904,"mutability":"mutable","name":"from","nameLocation":"2324:4:17","nodeType":"VariableDeclaration","scope":1927,"src":"2316:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"to","nameLocation":"2338:2:17","nodeType":"VariableDeclaration","scope":1927,"src":"2330:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1905,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"value","nameLocation":"2350:5:17","nodeType":"VariableDeclaration","scope":1927,"src":"2342:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:17"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"2375:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1910,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:17"},"scope":2264,"src":"2273:217:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1957,"nodeType":"Block","src":"3232:139:17","statements":[{"assignments":[1939],"declarations":[{"constant":false,"id":1939,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:17","nodeType":"VariableDeclaration","scope":1957,"src":"3242:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1948,"initialValue":{"arguments":[{"arguments":[{"id":1944,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2264","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2264","typeString":"library SafeERC20"}],"id":1943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:17","typeDescriptions":{}}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1946,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"3296:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1940,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"3265:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"3265:15:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:17"},{"expression":{"arguments":[{"id":1950,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"3327:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},{"id":1951,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"3334:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"3343:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"3358:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1949,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3314:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"ExpressionStatement","src":"3314:50:17"}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"2496:645:17","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1958,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:17","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"token","nameLocation":"3184:5:17","nodeType":"VariableDeclaration","scope":1958,"src":"3177:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},"typeName":{"id":1930,"nodeType":"UserDefinedTypeName","pathNode":{"id":1929,"name":"IERC20","nameLocations":["3177:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"3177:6:17"},"referencedDeclaration":1800,"src":"3177:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"spender","nameLocation":"3199:7:17","nodeType":"VariableDeclaration","scope":1958,"src":"3191:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1932,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"value","nameLocation":"3216:5:17","nodeType":"VariableDeclaration","scope":1958,"src":"3208:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:17"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"3232:0:17"},"scope":2264,"src":"3146:225:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2000,"nodeType":"Block","src":"4137:370:17","statements":[{"id":1999,"nodeType":"UncheckedBlock","src":"4147:354:17","statements":[{"assignments":[1970],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:17","nodeType":"VariableDeclaration","scope":1999,"src":"4171:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1979,"initialValue":{"arguments":[{"arguments":[{"id":1975,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2264","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2264","typeString":"library SafeERC20"}],"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:17","typeDescriptions":{}}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1977,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"4229:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1971,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"4198:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"4198:15:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1980,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"4255:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1981,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"4274:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1990,"nodeType":"IfStatement","src":"4251:160:17","trueBody":{"id":1989,"nodeType":"Block","src":"4293:118:17","statements":[{"errorCall":{"arguments":[{"id":1984,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"4351:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1985,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"4360:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1986,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"4378:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1983,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"4318:32:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1988,"nodeType":"RevertStatement","src":"4311:85:17"}]}},{"expression":{"arguments":[{"id":1992,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"4437:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},{"id":1993,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"4444:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1994,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"4453:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1995,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"4472:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1991,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"4424:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"ExpressionStatement","src":"4424:66:17"}]}]},"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"3377:657:17","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:17","nodeType":"FunctionDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"token","nameLocation":"4077:5:17","nodeType":"VariableDeclaration","scope":2001,"src":"4070:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},"typeName":{"id":1961,"nodeType":"UserDefinedTypeName","pathNode":{"id":1960,"name":"IERC20","nameLocations":["4070:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"4070:6:17"},"referencedDeclaration":1800,"src":"4070:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"spender","nameLocation":"4092:7:17","nodeType":"VariableDeclaration","scope":2001,"src":"4084:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1963,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1966,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:17","nodeType":"VariableDeclaration","scope":2001,"src":"4101:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:17"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[],"src":"4137:0:17"},"scope":2264,"src":"4039:468:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2047,"nodeType":"Block","src":"5161:303:17","statements":[{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:17","nodeType":"VariableDeclaration","scope":2047,"src":"5171:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2012,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2022,"initialValue":{"arguments":[{"expression":{"id":2016,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"5214:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"5214:13:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2018,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5230:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"5239:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2014,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:17"},{"condition":{"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:17","subExpression":{"arguments":[{"id":2024,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"5286:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},{"id":2025,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"5293:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2023,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5262:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"IfStatement","src":"5257:201:17","trueBody":{"id":2045,"nodeType":"Block","src":"5308:150:17","statements":[{"expression":{"arguments":[{"id":2029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"5342:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2032,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"5364:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"5364:13:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2034,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5380:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":2030,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2028,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"5322:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"ExpressionStatement","src":"5322:71:17"},{"expression":{"arguments":[{"id":2041,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"5427:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},{"id":2042,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"5434:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2040,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"5407:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"ExpressionStatement","src":"5407:40:17"}]}}]},"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"4513:566:17","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:17","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"token","nameLocation":"5113:5:17","nodeType":"VariableDeclaration","scope":2048,"src":"5106:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},"typeName":{"id":2004,"nodeType":"UserDefinedTypeName","pathNode":{"id":2003,"name":"IERC20","nameLocations":["5106:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"5106:6:17"},"referencedDeclaration":1800,"src":"5106:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"spender","nameLocation":"5128:7:17","nodeType":"VariableDeclaration","scope":2048,"src":"5120:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"value","nameLocation":"5145:5:17","nodeType":"VariableDeclaration","scope":2048,"src":"5137:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:17"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[],"src":"5161:0:17"},"scope":2264,"src":"5084:380:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2090,"nodeType":"Block","src":"5911:219:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2061,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"5925:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:17","memberName":"code","nodeType":"MemberAccess","src":"5925:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:17","memberName":"length","nodeType":"MemberAccess","src":"5925:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:17","subExpression":{"arguments":[{"id":2075,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6034:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6038:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2077,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6045:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2073,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6012:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:17","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":1305,"src":"6012:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2088,"nodeType":"IfStatement","src":"6007:117:17","trueBody":{"id":2087,"nodeType":"Block","src":"6052:72:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2083,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6106:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}],"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2081,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:17","typeDescriptions":{}}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2080,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"6073:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"RevertStatement","src":"6066:47:17"}]}},"id":2089,"nodeType":"IfStatement","src":"5921:203:17","trueBody":{"id":2072,"nodeType":"Block","src":"5946:55:17","statements":[{"expression":{"arguments":[{"id":2067,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"5973:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}},{"id":2068,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"5980:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"5984:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2066,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5960:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2071,"nodeType":"ExpressionStatement","src":"5960:30:17"}]}}]},"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"5470:333:17","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2091,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:17","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"token","nameLocation":"5849:5:17","nodeType":"VariableDeclaration","scope":2091,"src":"5840:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"},"typeName":{"id":2051,"nodeType":"UserDefinedTypeName","pathNode":{"id":2050,"name":"IERC1363","nameLocations":["5840:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":1354,"src":"5840:8:17"},"referencedDeclaration":1354,"src":"5840:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"to","nameLocation":"5864:2:17","nodeType":"VariableDeclaration","scope":2091,"src":"5856:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2053,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"value","nameLocation":"5876:5:17","nodeType":"VariableDeclaration","scope":2091,"src":"5868:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"data","nameLocation":"5896:4:17","nodeType":"VariableDeclaration","scope":2091,"src":"5883:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2057,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:17"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[],"src":"5911:0:17"},"scope":2264,"src":"5808:322:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2137,"nodeType":"Block","src":"6649:239:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"6663:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:17","memberName":"code","nodeType":"MemberAccess","src":"6663:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:17","memberName":"length","nodeType":"MemberAccess","src":"6663:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:17","subExpression":{"arguments":[{"id":2121,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6786:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2122,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"6792:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"6796:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2124,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"6803:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2119,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"6760:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:17","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":1331,"src":"6760:25:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2135,"nodeType":"IfStatement","src":"6755:127:17","trueBody":{"id":2134,"nodeType":"Block","src":"6810:72:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2130,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"6864:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:17","typeDescriptions":{}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2127,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"6831:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2133,"nodeType":"RevertStatement","src":"6824:47:17"}]}},"id":2136,"nodeType":"IfStatement","src":"6659:223:17","trueBody":{"id":2118,"nodeType":"Block","src":"6684:65:17","statements":[{"expression":{"arguments":[{"id":2112,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"6715:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}},{"id":2113,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6722:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2114,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"6728:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"6732:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2111,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6698:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"ExpressionStatement","src":"6698:40:17"}]}}]},"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"6136:341:17","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2138,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:17","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"token","nameLocation":"6536:5:17","nodeType":"VariableDeclaration","scope":2138,"src":"6527:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"},"typeName":{"id":2094,"nodeType":"UserDefinedTypeName","pathNode":{"id":2093,"name":"IERC1363","nameLocations":["6527:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":1354,"src":"6527:8:17"},"referencedDeclaration":1354,"src":"6527:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"from","nameLocation":"6559:4:17","nodeType":"VariableDeclaration","scope":2138,"src":"6551:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"to","nameLocation":"6581:2:17","nodeType":"VariableDeclaration","scope":2138,"src":"6573:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"value","nameLocation":"6601:5:17","nodeType":"VariableDeclaration","scope":2138,"src":"6593:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2103,"mutability":"mutable","name":"data","nameLocation":"6629:4:17","nodeType":"VariableDeclaration","scope":2138,"src":"6616:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2102,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:17"},"returnParameters":{"id":2105,"nodeType":"ParameterList","parameters":[],"src":"6649:0:17"},"scope":2264,"src":"6482:406:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2180,"nodeType":"Block","src":"7655:218:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2151,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"7669:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:17","memberName":"code","nodeType":"MemberAccess","src":"7669:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:17","memberName":"length","nodeType":"MemberAccess","src":"7669:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:17","subExpression":{"arguments":[{"id":2165,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"7777:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"7781:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2167,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"7788:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2163,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"7756:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:17","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"7756:20:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2178,"nodeType":"IfStatement","src":"7751:116:17","trueBody":{"id":2177,"nodeType":"Block","src":"7795:72:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2173,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"7849:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}],"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:17","typeDescriptions":{}}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2170,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"7816:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2176,"nodeType":"RevertStatement","src":"7809:47:17"}]}},"id":2179,"nodeType":"IfStatement","src":"7665:202:17","trueBody":{"id":2162,"nodeType":"Block","src":"7690:55:17","statements":[{"expression":{"arguments":[{"id":2157,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"7717:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}},{"id":2158,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"7724:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"7728:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2156,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"7704:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2161,"nodeType":"ExpressionStatement","src":"7704:30:17"}]}}]},"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"6894:654:17","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":2181,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:17","nodeType":"FunctionDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"token","nameLocation":"7593:5:17","nodeType":"VariableDeclaration","scope":2181,"src":"7584:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"},"typeName":{"id":2141,"nodeType":"UserDefinedTypeName","pathNode":{"id":2140,"name":"IERC1363","nameLocations":["7584:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":1354,"src":"7584:8:17"},"referencedDeclaration":1354,"src":"7584:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1354","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2144,"mutability":"mutable","name":"to","nameLocation":"7608:2:17","nodeType":"VariableDeclaration","scope":2181,"src":"7600:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2146,"mutability":"mutable","name":"value","nameLocation":"7620:5:17","nodeType":"VariableDeclaration","scope":2181,"src":"7612:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"data","nameLocation":"7640:4:17","nodeType":"VariableDeclaration","scope":2181,"src":"7627:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2147,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:17"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[],"src":"7655:0:17"},"scope":2264,"src":"7553:320:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2221,"nodeType":"Block","src":"8440:650:17","statements":[{"assignments":[2191],"declarations":[{"constant":false,"id":2191,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:17","nodeType":"VariableDeclaration","scope":2221,"src":"8450:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2192,"nodeType":"VariableDeclarationStatement","src":"8450:18:17"},{"assignments":[2194],"declarations":[{"constant":false,"id":2194,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:17","nodeType":"VariableDeclaration","scope":2221,"src":"8478:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2195,"nodeType":"VariableDeclarationStatement","src":"8478:19:17"},{"AST":{"nativeSrc":"8532:396:17","nodeType":"YulBlock","src":"8532:396:17","statements":[{"nativeSrc":"8546:75:17","nodeType":"YulVariableDeclaration","src":"8546:75:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:17","nodeType":"YulIdentifier","src":"8566:3:17"},"nativeSrc":"8566:5:17","nodeType":"YulFunctionCall","src":"8566:5:17"},{"name":"token","nativeSrc":"8573:5:17","nodeType":"YulIdentifier","src":"8573:5:17"},{"kind":"number","nativeSrc":"8580:1:17","nodeType":"YulLiteral","src":"8580:1:17","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:17","nodeType":"YulIdentifier","src":"8587:4:17"},{"kind":"number","nativeSrc":"8593:4:17","nodeType":"YulLiteral","src":"8593:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:17","nodeType":"YulIdentifier","src":"8583:3:17"},"nativeSrc":"8583:15:17","nodeType":"YulFunctionCall","src":"8583:15:17"},{"arguments":[{"name":"data","nativeSrc":"8606:4:17","nodeType":"YulIdentifier","src":"8606:4:17"}],"functionName":{"name":"mload","nativeSrc":"8600:5:17","nodeType":"YulIdentifier","src":"8600:5:17"},"nativeSrc":"8600:11:17","nodeType":"YulFunctionCall","src":"8600:11:17"},{"kind":"number","nativeSrc":"8613:1:17","nodeType":"YulLiteral","src":"8613:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:17","nodeType":"YulLiteral","src":"8616:4:17","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:17","nodeType":"YulIdentifier","src":"8561:4:17"},"nativeSrc":"8561:60:17","nodeType":"YulFunctionCall","src":"8561:60:17"},"variables":[{"name":"success","nativeSrc":"8550:7:17","nodeType":"YulTypedName","src":"8550:7:17","type":""}]},{"body":{"nativeSrc":"8682:157:17","nodeType":"YulBlock","src":"8682:157:17","statements":[{"nativeSrc":"8700:22:17","nodeType":"YulVariableDeclaration","src":"8700:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:17","nodeType":"YulLiteral","src":"8717:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:17","nodeType":"YulIdentifier","src":"8711:5:17"},"nativeSrc":"8711:11:17","nodeType":"YulFunctionCall","src":"8711:11:17"},"variables":[{"name":"ptr","nativeSrc":"8704:3:17","nodeType":"YulTypedName","src":"8704:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:17","nodeType":"YulIdentifier","src":"8754:3:17"},{"kind":"number","nativeSrc":"8759:1:17","nodeType":"YulLiteral","src":"8759:1:17","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:17","nodeType":"YulIdentifier","src":"8762:14:17"},"nativeSrc":"8762:16:17","nodeType":"YulFunctionCall","src":"8762:16:17"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:17","nodeType":"YulIdentifier","src":"8739:14:17"},"nativeSrc":"8739:40:17","nodeType":"YulFunctionCall","src":"8739:40:17"},"nativeSrc":"8739:40:17","nodeType":"YulExpressionStatement","src":"8739:40:17"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:17","nodeType":"YulIdentifier","src":"8803:3:17"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:17","nodeType":"YulIdentifier","src":"8808:14:17"},"nativeSrc":"8808:16:17","nodeType":"YulFunctionCall","src":"8808:16:17"}],"functionName":{"name":"revert","nativeSrc":"8796:6:17","nodeType":"YulIdentifier","src":"8796:6:17"},"nativeSrc":"8796:29:17","nodeType":"YulFunctionCall","src":"8796:29:17"},"nativeSrc":"8796:29:17","nodeType":"YulExpressionStatement","src":"8796:29:17"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:17","nodeType":"YulIdentifier","src":"8673:7:17"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:17","nodeType":"YulIdentifier","src":"8666:6:17"},"nativeSrc":"8666:15:17","nodeType":"YulFunctionCall","src":"8666:15:17"},"nativeSrc":"8663:176:17","nodeType":"YulIf","src":"8663:176:17"},{"nativeSrc":"8852:30:17","nodeType":"YulAssignment","src":"8852:30:17","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:17","nodeType":"YulIdentifier","src":"8866:14:17"},"nativeSrc":"8866:16:17","nodeType":"YulFunctionCall","src":"8866:16:17"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:17","nodeType":"YulIdentifier","src":"8852:10:17"}]},{"nativeSrc":"8895:23:17","nodeType":"YulAssignment","src":"8895:23:17","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:17","nodeType":"YulLiteral","src":"8916:1:17","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:17","nodeType":"YulIdentifier","src":"8910:5:17"},"nativeSrc":"8910:8:17","nodeType":"YulFunctionCall","src":"8910:8:17"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:17","nodeType":"YulIdentifier","src":"8895:11:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2187,"isOffset":false,"isSlot":false,"src":"8587:4:17","valueSize":1},{"declaration":2187,"isOffset":false,"isSlot":false,"src":"8606:4:17","valueSize":1},{"declaration":2191,"isOffset":false,"isSlot":false,"src":"8852:10:17","valueSize":1},{"declaration":2194,"isOffset":false,"isSlot":false,"src":"8895:11:17","valueSize":1},{"declaration":2185,"isOffset":false,"isSlot":false,"src":"8573:5:17","valueSize":1}],"flags":["memory-safe"],"id":2196,"nodeType":"InlineAssembly","src":"8507:421:17"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2197,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"8942:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"8994:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2202,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"8968:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}],"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:17","typeDescriptions":{}}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:17","memberName":"code","nodeType":"MemberAccess","src":"8960:19:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:17","memberName":"length","nodeType":"MemberAccess","src":"8960:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2220,"nodeType":"IfStatement","src":"8938:146:17","trueBody":{"id":2219,"nodeType":"Block","src":"9012:72:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2215,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9066:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}],"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2213,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:17","typeDescriptions":{}}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2212,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"9033:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2218,"nodeType":"RevertStatement","src":"9026:47:17"}]}}]},"documentation":{"id":2182,"nodeType":"StructuredDocumentation","src":"7879:486:17","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":2222,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:17","nodeType":"FunctionDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"token","nameLocation":"8406:5:17","nodeType":"VariableDeclaration","scope":2222,"src":"8399:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},"typeName":{"id":2184,"nodeType":"UserDefinedTypeName","pathNode":{"id":2183,"name":"IERC20","nameLocations":["8399:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"8399:6:17"},"referencedDeclaration":1800,"src":"8399:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"data","nameLocation":"8426:4:17","nodeType":"VariableDeclaration","scope":2222,"src":"8413:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2186,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:17"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[],"src":"8440:0:17"},"scope":2264,"src":"8370:720:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2262,"nodeType":"Block","src":"9681:391:17","statements":[{"assignments":[2234],"declarations":[{"constant":false,"id":2234,"mutability":"mutable","name":"success","nameLocation":"9696:7:17","nodeType":"VariableDeclaration","scope":2262,"src":"9691:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2233,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2235,"nodeType":"VariableDeclarationStatement","src":"9691:12:17"},{"assignments":[2237],"declarations":[{"constant":false,"id":2237,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:17","nodeType":"VariableDeclaration","scope":2262,"src":"9713:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2238,"nodeType":"VariableDeclarationStatement","src":"9713:18:17"},{"assignments":[2240],"declarations":[{"constant":false,"id":2240,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:17","nodeType":"VariableDeclaration","scope":2262,"src":"9741:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2241,"nodeType":"VariableDeclarationStatement","src":"9741:19:17"},{"AST":{"nativeSrc":"9795:174:17","nodeType":"YulBlock","src":"9795:174:17","statements":[{"nativeSrc":"9809:71:17","nodeType":"YulAssignment","src":"9809:71:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:17","nodeType":"YulIdentifier","src":"9825:3:17"},"nativeSrc":"9825:5:17","nodeType":"YulFunctionCall","src":"9825:5:17"},{"name":"token","nativeSrc":"9832:5:17","nodeType":"YulIdentifier","src":"9832:5:17"},{"kind":"number","nativeSrc":"9839:1:17","nodeType":"YulLiteral","src":"9839:1:17","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:17","nodeType":"YulIdentifier","src":"9846:4:17"},{"kind":"number","nativeSrc":"9852:4:17","nodeType":"YulLiteral","src":"9852:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:17","nodeType":"YulIdentifier","src":"9842:3:17"},"nativeSrc":"9842:15:17","nodeType":"YulFunctionCall","src":"9842:15:17"},{"arguments":[{"name":"data","nativeSrc":"9865:4:17","nodeType":"YulIdentifier","src":"9865:4:17"}],"functionName":{"name":"mload","nativeSrc":"9859:5:17","nodeType":"YulIdentifier","src":"9859:5:17"},"nativeSrc":"9859:11:17","nodeType":"YulFunctionCall","src":"9859:11:17"},{"kind":"number","nativeSrc":"9872:1:17","nodeType":"YulLiteral","src":"9872:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:17","nodeType":"YulLiteral","src":"9875:4:17","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:17","nodeType":"YulIdentifier","src":"9820:4:17"},"nativeSrc":"9820:60:17","nodeType":"YulFunctionCall","src":"9820:60:17"},"variableNames":[{"name":"success","nativeSrc":"9809:7:17","nodeType":"YulIdentifier","src":"9809:7:17"}]},{"nativeSrc":"9893:30:17","nodeType":"YulAssignment","src":"9893:30:17","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:17","nodeType":"YulIdentifier","src":"9907:14:17"},"nativeSrc":"9907:16:17","nodeType":"YulFunctionCall","src":"9907:16:17"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:17","nodeType":"YulIdentifier","src":"9893:10:17"}]},{"nativeSrc":"9936:23:17","nodeType":"YulAssignment","src":"9936:23:17","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:17","nodeType":"YulLiteral","src":"9957:1:17","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:17","nodeType":"YulIdentifier","src":"9951:5:17"},"nativeSrc":"9951:8:17","nodeType":"YulFunctionCall","src":"9951:8:17"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:17","nodeType":"YulIdentifier","src":"9936:11:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2228,"isOffset":false,"isSlot":false,"src":"9846:4:17","valueSize":1},{"declaration":2228,"isOffset":false,"isSlot":false,"src":"9865:4:17","valueSize":1},{"declaration":2237,"isOffset":false,"isSlot":false,"src":"9893:10:17","valueSize":1},{"declaration":2240,"isOffset":false,"isSlot":false,"src":"9936:11:17","valueSize":1},{"declaration":2234,"isOffset":false,"isSlot":false,"src":"9809:7:17","valueSize":1},{"declaration":2226,"isOffset":false,"isSlot":false,"src":"9832:5:17","valueSize":1}],"flags":["memory-safe"],"id":2242,"nodeType":"InlineAssembly","src":"9770:199:17"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2243,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9985:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"9997:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2255,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"10048:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2249,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"10023:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}],"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:17","typeDescriptions":{}}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:17","memberName":"code","nodeType":"MemberAccess","src":"10015:19:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:17","memberName":"length","nodeType":"MemberAccess","src":"10015:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2232,"id":2261,"nodeType":"Return","src":"9978:87:17"}]},"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"9096:491:17","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:17","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"token","nameLocation":"9632:5:17","nodeType":"VariableDeclaration","scope":2263,"src":"9625:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"},"typeName":{"id":2225,"nodeType":"UserDefinedTypeName","pathNode":{"id":2224,"name":"IERC20","nameLocations":["9625:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"9625:6:17"},"referencedDeclaration":1800,"src":"9625:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"data","nameLocation":"9652:4:17","nodeType":"VariableDeclaration","scope":2263,"src":"9639:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2227,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:17"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2263,"src":"9675:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2230,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:17"},"scope":2264,"src":"9592:480:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2265,"src":"698:9376:17","usedErrors":[1812,1821],"usedEvents":[]}],"src":"115:9960:17"},"id":17},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2524],"Errors":[2546]},"id":2525,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2266,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":2268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2525,"sourceUnit":2547,"src":"127:36:18","symbolAliases":[{"foreign":{"id":2267,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"135:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"165:67:18","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2524,"linearizedBaseContracts":[2524],"name":"Address","nameLocation":"241:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"255:75:18","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2274,"name":"AddressEmptyCode","nameLocation":"341:16:18","nodeType":"ErrorDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"target","nameLocation":"366:6:18","nodeType":"VariableDeclaration","scope":2274,"src":"358:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:18"},"src":"335:39:18"},{"body":{"id":2321,"nodeType":"Block","src":"1361:294:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2284,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2524","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2524","typeString":"library Address"}],"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2282,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:18","typeDescriptions":{}}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:18","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2287,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"1399:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2301,"nodeType":"IfStatement","src":"1371:125:18","trueBody":{"id":2300,"nodeType":"Block","src":"1407:89:18","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2294,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2524","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2524","typeString":"library Address"}],"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:18","typeDescriptions":{}}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:18","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2297,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"1478:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2289,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"1428:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2546_$","typeString":"type(library Errors)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:18","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":2534,"src":"1428:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2299,"nodeType":"RevertStatement","src":"1421:64:18"}]}},{"assignments":[2303,2305],"declarations":[{"constant":false,"id":2303,"mutability":"mutable","name":"success","nameLocation":"1512:7:18","nodeType":"VariableDeclaration","scope":2321,"src":"1507:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2302,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:18","nodeType":"VariableDeclaration","scope":2321,"src":"1521:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2304,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2312,"initialValue":{"arguments":[{"hexValue":"","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2306,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"1548:9:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:18","memberName":"call","nodeType":"MemberAccess","src":"1548:14:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2308,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"1570:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:18"},{"condition":{"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:18","subExpression":{"id":2313,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1596:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2320,"nodeType":"IfStatement","src":"1591:58:18","trueBody":{"id":2319,"nodeType":"Block","src":"1605:44:18","statements":[{"expression":{"arguments":[{"id":2316,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1627:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2315,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"1619:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2318,"nodeType":"ExpressionStatement","src":"1619:19:18"}]}}]},"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"380:905:18","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2322,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:18","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:18","nodeType":"VariableDeclaration","scope":2322,"src":"1309:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"amount","nameLocation":"1344:6:18","nodeType":"VariableDeclaration","scope":2322,"src":"1336:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:18"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[],"src":"1361:0:18"},"scope":2524,"src":"1290:365:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2338,"nodeType":"Block","src":"2589:62:18","statements":[{"expression":{"arguments":[{"id":2333,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2628:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2334,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2636:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2332,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"2606:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2331,"id":2337,"nodeType":"Return","src":"2599:45:18"}]},"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"1661:834:18","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:18","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"target","nameLocation":"2530:6:18","nodeType":"VariableDeclaration","scope":2339,"src":"2522:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"data","nameLocation":"2551:4:18","nodeType":"VariableDeclaration","scope":2339,"src":"2538:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2326,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:18"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2339,"src":"2575:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2329,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:18"},"scope":2524,"src":"2500:151:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2388,"nodeType":"Block","src":"3088:294:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2353,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2524","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2524","typeString":"library Address"}],"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2351,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:18","typeDescriptions":{}}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:18","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3126:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2370,"nodeType":"IfStatement","src":"3098:123:18","trueBody":{"id":2369,"nodeType":"Block","src":"3133:88:18","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2363,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2524","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2524","typeString":"library Address"}],"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:18","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:18","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3204:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2358,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"3154:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2546_$","typeString":"type(library Errors)"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:18","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":2534,"src":"3154:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2368,"nodeType":"RevertStatement","src":"3147:63:18"}]}},{"assignments":[2372,2374],"declarations":[{"constant":false,"id":2372,"mutability":"mutable","name":"success","nameLocation":"3236:7:18","nodeType":"VariableDeclaration","scope":2388,"src":"3231:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2371,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:18","nodeType":"VariableDeclaration","scope":2388,"src":"3245:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2373,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2381,"initialValue":{"arguments":[{"id":2379,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"3298:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2375,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"3272:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:18","memberName":"call","nodeType":"MemberAccess","src":"3272:11:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3291:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:18"},{"expression":{"arguments":[{"id":2383,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"3347:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2384,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"3355:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2385,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"3364:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2382,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"3320:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2350,"id":2387,"nodeType":"Return","src":"3313:62:18"}]},"documentation":{"id":2340,"nodeType":"StructuredDocumentation","src":"2657:313:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2389,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:18","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"target","nameLocation":"3014:6:18","nodeType":"VariableDeclaration","scope":2389,"src":"3006:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2341,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"data","nameLocation":"3035:4:18","nodeType":"VariableDeclaration","scope":2389,"src":"3022:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2343,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"value","nameLocation":"3049:5:18","nodeType":"VariableDeclaration","scope":2389,"src":"3041:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:18"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2389,"src":"3074:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2348,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:18"},"scope":2524,"src":"2975:407:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2414,"nodeType":"Block","src":"3621:154:18","statements":[{"assignments":[2400,2402],"declarations":[{"constant":false,"id":2400,"mutability":"mutable","name":"success","nameLocation":"3637:7:18","nodeType":"VariableDeclaration","scope":2414,"src":"3632:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2399,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:18","nodeType":"VariableDeclaration","scope":2414,"src":"3646:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2401,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2407,"initialValue":{"arguments":[{"id":2405,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"3691:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2403,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"3673:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:18","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:18","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:18"},{"expression":{"arguments":[{"id":2409,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"3740:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2410,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"3748:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2411,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"3757:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2408,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"3713:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2398,"id":2413,"nodeType":"Return","src":"3706:62:18"}]},"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"3388:128:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2415,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:18","nodeType":"FunctionDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"target","nameLocation":"3557:6:18","nodeType":"VariableDeclaration","scope":2415,"src":"3549:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2391,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2394,"mutability":"mutable","name":"data","nameLocation":"3578:4:18","nodeType":"VariableDeclaration","scope":2415,"src":"3565:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2393,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:18"},"returnParameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2415,"src":"3607:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2396,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:18"},"scope":2524,"src":"3521:254:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2440,"nodeType":"Block","src":"4013:156:18","statements":[{"assignments":[2426,2428],"declarations":[{"constant":false,"id":2426,"mutability":"mutable","name":"success","nameLocation":"4029:7:18","nodeType":"VariableDeclaration","scope":2440,"src":"4024:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2425,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:18","nodeType":"VariableDeclaration","scope":2440,"src":"4038:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2427,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2433,"initialValue":{"arguments":[{"id":2431,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"4085:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2429,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4065:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:18","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:18","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:18"},{"expression":{"arguments":[{"id":2435,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4134:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2436,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"4142:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2437,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"4151:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2434,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4107:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2424,"id":2439,"nodeType":"Return","src":"4100:62:18"}]},"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"3781:130:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2441,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:18","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"target","nameLocation":"3954:6:18","nodeType":"VariableDeclaration","scope":2441,"src":"3946:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2420,"mutability":"mutable","name":"data","nameLocation":"3975:4:18","nodeType":"VariableDeclaration","scope":2441,"src":"3962:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2419,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:18"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2441,"src":"3999:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2422,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:18"},"scope":2524,"src":"3916:253:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2480,"nodeType":"Block","src":"4595:424:18","statements":[{"condition":{"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:18","subExpression":{"id":2453,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"4610:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2478,"nodeType":"Block","src":"4669:344:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2460,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4857:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:18","memberName":"length","nodeType":"MemberAccess","src":"4857:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2464,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4883:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:18","memberName":"code","nodeType":"MemberAccess","src":"4883:11:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:18","memberName":"length","nodeType":"MemberAccess","src":"4883:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"nodeType":"IfStatement","src":"4853:119:18","trueBody":{"id":2474,"nodeType":"Block","src":"4908:64:18","statements":[{"errorCall":{"arguments":[{"id":2471,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4950:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2470,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"4933:16:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2473,"nodeType":"RevertStatement","src":"4926:31:18"}]}},{"expression":{"id":2476,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4992:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2452,"id":2477,"nodeType":"Return","src":"4985:17:18"}]},"id":2479,"nodeType":"IfStatement","src":"4605:408:18","trueBody":{"id":2459,"nodeType":"Block","src":"4619:44:18","statements":[{"expression":{"arguments":[{"id":2456,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4641:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2455,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"4633:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2458,"nodeType":"ExpressionStatement","src":"4633:19:18"}]}}]},"documentation":{"id":2442,"nodeType":"StructuredDocumentation","src":"4175:257:18","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":2481,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:18","nodeType":"FunctionDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"target","nameLocation":"4490:6:18","nodeType":"VariableDeclaration","scope":2481,"src":"4482:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2446,"mutability":"mutable","name":"success","nameLocation":"4511:7:18","nodeType":"VariableDeclaration","scope":2481,"src":"4506:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2445,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:18","nodeType":"VariableDeclaration","scope":2481,"src":"4528:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2447,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:18"},"returnParameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2481,"src":"4581:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2450,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:18"},"scope":2524,"src":"4437:582:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2502,"nodeType":"Block","src":"5323:122:18","statements":[{"condition":{"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:18","subExpression":{"id":2491,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"5338:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2500,"nodeType":"Block","src":"5397:42:18","statements":[{"expression":{"id":2498,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5418:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2490,"id":2499,"nodeType":"Return","src":"5411:17:18"}]},"id":2501,"nodeType":"IfStatement","src":"5333:106:18","trueBody":{"id":2497,"nodeType":"Block","src":"5347:44:18","statements":[{"expression":{"arguments":[{"id":2494,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5369:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2493,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"5361:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2496,"nodeType":"ExpressionStatement","src":"5361:19:18"}]}}]},"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"5025:191:18","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":2503,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:18","nodeType":"FunctionDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"success","nameLocation":"5252:7:18","nodeType":"VariableDeclaration","scope":2503,"src":"5247:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2483,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:18","nodeType":"VariableDeclaration","scope":2503,"src":"5261:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2485,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:18"},"returnParameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2503,"src":"5309:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2488,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:18"},"scope":2524,"src":"5221:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2522,"nodeType":"Block","src":"5614:379:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2509,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"5690:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:18","memberName":"length","nodeType":"MemberAccess","src":"5690:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2520,"nodeType":"Block","src":"5936:51:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2515,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5957:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2546_$","typeString":"type(library Errors)"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:10:18","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":2537,"src":"5957:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5957:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2519,"nodeType":"RevertStatement","src":"5950:26:18"}]},"id":2521,"nodeType":"IfStatement","src":"5686:301:18","trueBody":{"id":2514,"nodeType":"Block","src":"5713:217:18","statements":[{"AST":{"nativeSrc":"5840:80:18","nodeType":"YulBlock","src":"5840:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returndata","nativeSrc":"5869:10:18","nodeType":"YulIdentifier","src":"5869:10:18"},{"kind":"number","nativeSrc":"5881:4:18","nodeType":"YulLiteral","src":"5881:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5865:3:18","nodeType":"YulIdentifier","src":"5865:3:18"},"nativeSrc":"5865:21:18","nodeType":"YulFunctionCall","src":"5865:21:18"},{"arguments":[{"name":"returndata","nativeSrc":"5894:10:18","nodeType":"YulIdentifier","src":"5894:10:18"}],"functionName":{"name":"mload","nativeSrc":"5888:5:18","nodeType":"YulIdentifier","src":"5888:5:18"},"nativeSrc":"5888:17:18","nodeType":"YulFunctionCall","src":"5888:17:18"}],"functionName":{"name":"revert","nativeSrc":"5858:6:18","nodeType":"YulIdentifier","src":"5858:6:18"},"nativeSrc":"5858:48:18","nodeType":"YulFunctionCall","src":"5858:48:18"},"nativeSrc":"5858:48:18","nodeType":"YulExpressionStatement","src":"5858:48:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2506,"isOffset":false,"isSlot":false,"src":"5869:10:18","valueSize":1},{"declaration":2506,"isOffset":false,"isSlot":false,"src":"5894:10:18","valueSize":1}],"flags":["memory-safe"],"id":2513,"nodeType":"InlineAssembly","src":"5815:105:18"}]}}]},"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"5451:103:18","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":2523,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:18","nodeType":"FunctionDefinition","parameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:18","nodeType":"VariableDeclaration","scope":2523,"src":"5576:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2505,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:18"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[],"src":"5614:0:18"},"scope":2524,"src":"5559:434:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2525,"src":"233:5762:18","usedErrors":[2274],"usedEvents":[]}],"src":"101:5895:18"},"id":18},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[2546]},"id":2547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2526,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":2527,"nodeType":"StructuredDocumentation","src":"126:284:19","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":2546,"linearizedBaseContracts":[2546],"name":"Errors","nameLocation":"419:6:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"432:94:19","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":2534,"name":"InsufficientBalance","nameLocation":"537:19:19","nodeType":"ErrorDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"balance","nameLocation":"565:7:19","nodeType":"VariableDeclaration","scope":2534,"src":"557:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"needed","nameLocation":"582:6:19","nodeType":"VariableDeclaration","scope":2534,"src":"574:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:19"},"src":"531:59:19"},{"documentation":{"id":2535,"nodeType":"StructuredDocumentation","src":"596:89:19","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":2537,"name":"FailedCall","nameLocation":"696:10:19","nodeType":"ErrorDefinition","parameters":{"id":2536,"nodeType":"ParameterList","parameters":[],"src":"706:2:19"},"src":"690:19:19"},{"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"715:46:19","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":2540,"name":"FailedDeployment","nameLocation":"772:16:19","nodeType":"ErrorDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[],"src":"788:2:19"},"src":"766:25:19"},{"documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"797:58:19","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":2545,"name":"MissingPrecompile","nameLocation":"866:17:19","nodeType":"ErrorDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2545,"src":"884:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:19"},"src":"860:33:19"}],"scope":2547,"src":"411:484:19","usedErrors":[2534,2537,2540,2545],"usedEvents":[]}],"src":"100:796:19"},"id":19},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2598]},"id":2599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2548,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"125:489:20","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2598,"linearizedBaseContracts":[2598],"name":"Panic","nameLocation":"665:5:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2550,"nodeType":"StructuredDocumentation","src":"677:36:20","text":"@dev generic / unspecified error"},"id":2553,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:20","nodeType":"VariableDeclaration","scope":2598,"src":"718:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"764:37:20","text":"@dev used by the assert() builtin"},"id":2557,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:20","nodeType":"VariableDeclaration","scope":2598,"src":"806:39:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"851:41:20","text":"@dev arithmetic underflow or overflow"},"id":2561,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:20","nodeType":"VariableDeclaration","scope":2598,"src":"897:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:20","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"950:35:20","text":"@dev division or modulo by zero"},"id":2565,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:20","nodeType":"VariableDeclaration","scope":2598,"src":"990:49:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"1045:30:20","text":"@dev enum conversion error"},"id":2569,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:20","nodeType":"VariableDeclaration","scope":2598,"src":"1080:54:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:20","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"1140:36:20","text":"@dev invalid encoding in storage"},"id":2573,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:20","nodeType":"VariableDeclaration","scope":2598,"src":"1181:55:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:20","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"1242:24:20","text":"@dev empty array pop"},"id":2577,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:20","nodeType":"VariableDeclaration","scope":2598,"src":"1271:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:20","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2578,"nodeType":"StructuredDocumentation","src":"1325:35:20","text":"@dev array out of bounds access"},"id":2581,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:20","nodeType":"VariableDeclaration","scope":2598,"src":"1365:52:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:20","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2582,"nodeType":"StructuredDocumentation","src":"1423:65:20","text":"@dev resource error (too large allocation or too large array)"},"id":2585,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:20","nodeType":"VariableDeclaration","scope":2598,"src":"1493:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:20","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"1546:42:20","text":"@dev calling invalid internal function"},"id":2589,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:20","nodeType":"VariableDeclaration","scope":2598,"src":"1593:58:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:20","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"1819:151:20","statements":[{"AST":{"nativeSrc":"1854:110:20","nodeType":"YulBlock","src":"1854:110:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:20","nodeType":"YulLiteral","src":"1875:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:20","nodeType":"YulLiteral","src":"1881:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:20","nodeType":"YulIdentifier","src":"1868:6:20"},"nativeSrc":"1868:24:20","nodeType":"YulFunctionCall","src":"1868:24:20"},"nativeSrc":"1868:24:20","nodeType":"YulExpressionStatement","src":"1868:24:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:20","nodeType":"YulLiteral","src":"1912:4:20","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:20","nodeType":"YulIdentifier","src":"1918:4:20"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:20","nodeType":"YulIdentifier","src":"1905:6:20"},"nativeSrc":"1905:18:20","nodeType":"YulFunctionCall","src":"1905:18:20"},"nativeSrc":"1905:18:20","nodeType":"YulExpressionStatement","src":"1905:18:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:20","nodeType":"YulLiteral","src":"1943:4:20","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:20","nodeType":"YulLiteral","src":"1949:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:20","nodeType":"YulIdentifier","src":"1936:6:20"},"nativeSrc":"1936:18:20","nodeType":"YulFunctionCall","src":"1936:18:20"},"nativeSrc":"1936:18:20","nodeType":"YulExpressionStatement","src":"1936:18:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":2592,"isOffset":false,"isSlot":false,"src":"1918:4:20","valueSize":1}],"flags":["memory-safe"],"id":2595,"nodeType":"InlineAssembly","src":"1829:135:20"}]},"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"1658:113:20","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:20","nodeType":"FunctionDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"code","nameLocation":"1799:4:20","nodeType":"VariableDeclaration","scope":2597,"src":"1791:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:20"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[],"src":"1819:0:20"},"scope":2598,"src":"1776:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2599,"src":"657:1315:20","usedErrors":[],"usedEvents":[]}],"src":"99:1874:20"},"id":20},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2604],"ShortStrings":[2815],"StorageSlot":[2939]},"id":2816,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2600,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2602,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2816,"sourceUnit":2940,"src":"132:46:21","symbolAliases":[{"foreign":{"id":2601,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"140:11:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2604,"name":"ShortString","nameLocation":"353:11:21","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:21","underlyingType":{"id":2603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"378:876:21","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2815,"linearizedBaseContracts":[2815],"name":"ShortStrings","nameLocation":"1263:12:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2608,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:21","nodeType":"VariableDeclaration","scope":2815,"src":"1345:111:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2612,"name":"StringTooLong","nameLocation":"1469:13:21","nodeType":"ErrorDefinition","parameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"str","nameLocation":"1490:3:21","nodeType":"VariableDeclaration","scope":2612,"src":"1483:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2609,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:21"},"src":"1463:32:21"},{"errorSelector":"b3512b0c","id":2614,"name":"InvalidShortString","nameLocation":"1506:18:21","nodeType":"ErrorDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[],"src":"1524:2:21"},"src":"1500:27:21"},{"body":{"id":2657,"nodeType":"Block","src":"1786:208:21","statements":[{"assignments":[2624],"declarations":[{"constant":false,"id":2624,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:21","nodeType":"VariableDeclaration","scope":2657,"src":"1796:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2623,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2629,"initialValue":{"arguments":[{"id":2627,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1822:3:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2625,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:21","typeDescriptions":{}}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2630,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"1840:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:21","memberName":"length","nodeType":"MemberAccess","src":"1840:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:21","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2639,"nodeType":"IfStatement","src":"1836:72:21","trueBody":{"id":2638,"nodeType":"Block","src":"1858:50:21","statements":[{"errorCall":{"arguments":[{"id":2635,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1893:3:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2634,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"1879:13:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2637,"nodeType":"RevertStatement","src":"1872:25:21"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2648,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"1965:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:21","typeDescriptions":{}}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:21","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2651,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"1974:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:21","memberName":"length","nodeType":"MemberAccess","src":"1974:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:21","typeDescriptions":{}}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2640,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"1924:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2604_$","typeString":"type(ShortString)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:21","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:21","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2604_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"functionReturnParameters":2622,"id":2656,"nodeType":"Return","src":"1917:70:21"}]},"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"1533:170:21","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2658,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:21","nodeType":"FunctionDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"str","nameLocation":"1745:3:21","nodeType":"VariableDeclaration","scope":2658,"src":"1731:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2616,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:21"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2658,"src":"1773:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"},"typeName":{"id":2620,"nodeType":"UserDefinedTypeName","pathNode":{"id":2619,"name":"ShortString","nameLocations":["1773:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2604,"src":"1773:11:21"},"referencedDeclaration":2604,"src":"1773:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:21"},"scope":2815,"src":"1708:286:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2683,"nodeType":"Block","src":"2152:304:21","statements":[{"assignments":[2668],"declarations":[{"constant":false,"id":2668,"mutability":"mutable","name":"len","nameLocation":"2170:3:21","nodeType":"VariableDeclaration","scope":2683,"src":"2162:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2672,"initialValue":{"arguments":[{"id":2670,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"2187:4:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}],"id":2669,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"2176:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2604_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:21"},{"assignments":[2674],"declarations":[{"constant":false,"id":2674,"mutability":"mutable","name":"str","nameLocation":"2294:3:21","nodeType":"VariableDeclaration","scope":2683,"src":"2280:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2673,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2679,"initialValue":{"arguments":[{"hexValue":"3332","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2675,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:21"},{"AST":{"nativeSrc":"2349:81:21","nodeType":"YulBlock","src":"2349:81:21","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:21","nodeType":"YulIdentifier","src":"2370:3:21"},{"name":"len","nativeSrc":"2375:3:21","nodeType":"YulIdentifier","src":"2375:3:21"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:21","nodeType":"YulIdentifier","src":"2363:6:21"},"nativeSrc":"2363:16:21","nodeType":"YulFunctionCall","src":"2363:16:21"},"nativeSrc":"2363:16:21","nodeType":"YulExpressionStatement","src":"2363:16:21"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:21","nodeType":"YulIdentifier","src":"2403:3:21"},{"kind":"number","nativeSrc":"2408:4:21","nodeType":"YulLiteral","src":"2408:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:21","nodeType":"YulIdentifier","src":"2399:3:21"},"nativeSrc":"2399:14:21","nodeType":"YulFunctionCall","src":"2399:14:21"},{"name":"sstr","nativeSrc":"2415:4:21","nodeType":"YulIdentifier","src":"2415:4:21"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:21","nodeType":"YulIdentifier","src":"2392:6:21"},"nativeSrc":"2392:28:21","nodeType":"YulFunctionCall","src":"2392:28:21"},"nativeSrc":"2392:28:21","nodeType":"YulExpressionStatement","src":"2392:28:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":2668,"isOffset":false,"isSlot":false,"src":"2375:3:21","valueSize":1},{"declaration":2662,"isOffset":false,"isSlot":false,"src":"2415:4:21","valueSize":1},{"declaration":2674,"isOffset":false,"isSlot":false,"src":"2370:3:21","valueSize":1},{"declaration":2674,"isOffset":false,"isSlot":false,"src":"2403:3:21","valueSize":1}],"flags":["memory-safe"],"id":2680,"nodeType":"InlineAssembly","src":"2324:106:21"},{"expression":{"id":2681,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"2446:3:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2666,"id":2682,"nodeType":"Return","src":"2439:10:21"}]},"documentation":{"id":2659,"nodeType":"StructuredDocumentation","src":"2000:73:21","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2684,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:21","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:21","nodeType":"VariableDeclaration","scope":2684,"src":"2096:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"},"typeName":{"id":2661,"nodeType":"UserDefinedTypeName","pathNode":{"id":2660,"name":"ShortString","nameLocations":["2096:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2604,"src":"2096:11:21"},"referencedDeclaration":2604,"src":"2096:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:21"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2684,"src":"2137:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2664,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:21"},"scope":2815,"src":"2078:378:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2715,"nodeType":"Block","src":"2598:175:21","statements":[{"assignments":[2694],"declarations":[{"constant":false,"id":2694,"mutability":"mutable","name":"result","nameLocation":"2616:6:21","nodeType":"VariableDeclaration","scope":2715,"src":"2608:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2704,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2699,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"2652:4:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}],"expression":{"id":2697,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"2633:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2604_$","typeString":"type(ShortString)"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:21","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:21","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2604_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:21","typeDescriptions":{}}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"2679:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:21","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2712,"nodeType":"IfStatement","src":"2675:69:21","trueBody":{"id":2711,"nodeType":"Block","src":"2692:52:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2708,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"2713:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2710,"nodeType":"RevertStatement","src":"2706:27:21"}]}},{"expression":{"id":2713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"2760:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2692,"id":2714,"nodeType":"Return","src":"2753:13:21"}]},"documentation":{"id":2685,"nodeType":"StructuredDocumentation","src":"2462:61:21","text":" @dev Return the length of a `ShortString`."},"id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:21","nodeType":"FunctionDefinition","parameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:21","nodeType":"VariableDeclaration","scope":2716,"src":"2548:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"},"typeName":{"id":2687,"nodeType":"UserDefinedTypeName","pathNode":{"id":2686,"name":"ShortString","nameLocations":["2548:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2604,"src":"2548:11:21"},"referencedDeclaration":2604,"src":"2548:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:21"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"2589:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:21"},"scope":2815,"src":"2528:245:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2755,"nodeType":"Block","src":"2996:231:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"3016:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2727,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:21","typeDescriptions":{}}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:21","memberName":"length","nodeType":"MemberAccess","src":"3010:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2753,"nodeType":"Block","src":"3094:127:21","statements":[{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2742,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3134:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2739,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3108:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2939_$","typeString":"type(library StorageSlot)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:21","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2916,"src":"3108:25:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2836_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2836_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:21","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2835,"src":"3108:38:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"3149:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2747,"nodeType":"ExpressionStatement","src":"3108:46:21"},{"expression":{"arguments":[{"id":2750,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"3192:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2748,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"3175:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2604_$","typeString":"type(ShortString)"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:21","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:21","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2604_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"functionReturnParameters":2726,"id":2752,"nodeType":"Return","src":"3168:42:21"}]},"id":2754,"nodeType":"IfStatement","src":"3006:215:21","trueBody":{"id":2738,"nodeType":"Block","src":"3036:52:21","statements":[{"expression":{"arguments":[{"id":2735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"3071:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2734,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"3057:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2604_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"functionReturnParameters":2726,"id":2737,"nodeType":"Return","src":"3050:27:21"}]}}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"2779:103:21","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2756,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:21","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"value","nameLocation":"2936:5:21","nodeType":"VariableDeclaration","scope":2756,"src":"2922:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2718,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"store","nameLocation":"2958:5:21","nodeType":"VariableDeclaration","scope":2756,"src":"2943:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2720,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:21"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2756,"src":"2983:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"},"typeName":{"id":2724,"nodeType":"UserDefinedTypeName","pathNode":{"id":2723,"name":"ShortString","nameLocations":["2983:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2604,"src":"2983:11:21"},"referencedDeclaration":2604,"src":"2983:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:21"},"scope":2815,"src":"2887:340:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2782,"nodeType":"Block","src":"3477:158:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"3510:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}],"expression":{"id":2767,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"3491:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2604_$","typeString":"type(ShortString)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:21","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:21","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2604_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2771,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"3520:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2780,"nodeType":"Block","src":"3592:37:21","statements":[{"expression":{"id":2778,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"3613:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2766,"id":2779,"nodeType":"Return","src":"3606:12:21"}]},"id":2781,"nodeType":"IfStatement","src":"3487:142:21","trueBody":{"id":2777,"nodeType":"Block","src":"3539:47:21","statements":[{"expression":{"arguments":[{"id":2774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"3569:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}],"id":2773,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"3560:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2604_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2766,"id":2776,"nodeType":"Return","src":"3553:22:21"}]}}]},"documentation":{"id":2757,"nodeType":"StructuredDocumentation","src":"3233:130:21","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":2783,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:21","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"value","nameLocation":"3410:5:21","nodeType":"VariableDeclaration","scope":2783,"src":"3398:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"},"typeName":{"id":2759,"nodeType":"UserDefinedTypeName","pathNode":{"id":2758,"name":"ShortString","nameLocations":["3398:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2604,"src":"3398:11:21"},"referencedDeclaration":2604,"src":"3398:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"store","nameLocation":"3432:5:21","nodeType":"VariableDeclaration","scope":2783,"src":"3417:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2761,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:21"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2783,"src":"3462:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2764,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:21"},"scope":2815,"src":"3368:267:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2813,"nodeType":"Block","src":"4125:174:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"4158:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}],"expression":{"id":2794,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"4139:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2604_$","typeString":"type(ShortString)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:21","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:21","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2604_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2798,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"4168:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2811,"nodeType":"Block","src":"4242:51:21","statements":[{"expression":{"expression":{"arguments":[{"id":2807,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"4269:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2805,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:21","typeDescriptions":{}}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:21","memberName":"length","nodeType":"MemberAccess","src":"4263:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2793,"id":2810,"nodeType":"Return","src":"4256:26:21"}]},"id":2812,"nodeType":"IfStatement","src":"4135:158:21","trueBody":{"id":2804,"nodeType":"Block","src":"4187:49:21","statements":[{"expression":{"arguments":[{"id":2801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"4219:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}],"id":2800,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"4208:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2604_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2793,"id":2803,"nodeType":"Return","src":"4201:24:21"}]}}]},"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"3641:374:21","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2814,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:21","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"value","nameLocation":"4064:5:21","nodeType":"VariableDeclaration","scope":2814,"src":"4052:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"},"typeName":{"id":2786,"nodeType":"UserDefinedTypeName","pathNode":{"id":2785,"name":"ShortString","nameLocations":["4052:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2604,"src":"4052:11:21"},"referencedDeclaration":2604,"src":"4052:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"store","nameLocation":"4086:5:21","nodeType":"VariableDeclaration","scope":2814,"src":"4071:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2788,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:21"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2814,"src":"4116:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:21"},"scope":2815,"src":"4020:279:21","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2816,"src":"1255:3046:21","usedErrors":[2612,2614],"usedEvents":[]}],"src":"106:4196:21"},"id":21},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2939]},"id":2940,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2817,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"219:1187:22","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2939,"linearizedBaseContracts":[2939],"name":"StorageSlot","nameLocation":"1415:11:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2821,"members":[{"constant":false,"id":2820,"mutability":"mutable","name":"value","nameLocation":"1470:5:22","nodeType":"VariableDeclaration","scope":2821,"src":"1462:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2819,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:22","nodeType":"StructDefinition","scope":2939,"src":"1433:49:22","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2824,"members":[{"constant":false,"id":2823,"mutability":"mutable","name":"value","nameLocation":"1522:5:22","nodeType":"VariableDeclaration","scope":2824,"src":"1517:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2822,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:22","nodeType":"StructDefinition","scope":2939,"src":"1488:46:22","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2827,"members":[{"constant":false,"id":2826,"mutability":"mutable","name":"value","nameLocation":"1577:5:22","nodeType":"VariableDeclaration","scope":2827,"src":"1569:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:22","nodeType":"StructDefinition","scope":2939,"src":"1540:49:22","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2830,"members":[{"constant":false,"id":2829,"mutability":"mutable","name":"value","nameLocation":"1632:5:22","nodeType":"VariableDeclaration","scope":2830,"src":"1624:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:22","nodeType":"StructDefinition","scope":2939,"src":"1595:49:22","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2833,"members":[{"constant":false,"id":2832,"mutability":"mutable","name":"value","nameLocation":"1685:5:22","nodeType":"VariableDeclaration","scope":2833,"src":"1678:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2831,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:22","nodeType":"StructDefinition","scope":2939,"src":"1650:47:22","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2836,"members":[{"constant":false,"id":2835,"mutability":"mutable","name":"value","nameLocation":"1738:5:22","nodeType":"VariableDeclaration","scope":2836,"src":"1731:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2834,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:22","nodeType":"StructDefinition","scope":2939,"src":"1703:47:22","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2839,"members":[{"constant":false,"id":2838,"mutability":"mutable","name":"value","nameLocation":"1789:5:22","nodeType":"VariableDeclaration","scope":2839,"src":"1783:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2837,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:22","nodeType":"StructDefinition","scope":2939,"src":"1756:45:22","visibility":"public"},{"body":{"id":2849,"nodeType":"Block","src":"1983:79:22","statements":[{"AST":{"nativeSrc":"2018:38:22","nodeType":"YulBlock","src":"2018:38:22","statements":[{"nativeSrc":"2032:14:22","nodeType":"YulAssignment","src":"2032:14:22","value":{"name":"slot","nativeSrc":"2042:4:22","nodeType":"YulIdentifier","src":"2042:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:22","nodeType":"YulIdentifier","src":"2032:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2846,"isOffset":false,"isSlot":true,"src":"2032:6:22","suffix":"slot","valueSize":1},{"declaration":2842,"isOffset":false,"isSlot":false,"src":"2042:4:22","valueSize":1}],"flags":["memory-safe"],"id":2848,"nodeType":"InlineAssembly","src":"1993:63:22"}]},"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"1807:87:22","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2850,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:22","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"slot","nameLocation":"1931:4:22","nodeType":"VariableDeclaration","scope":2850,"src":"1923:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:22"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"r","nameLocation":"1980:1:22","nodeType":"VariableDeclaration","scope":2850,"src":"1960:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2821_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2845,"nodeType":"UserDefinedTypeName","pathNode":{"id":2844,"name":"AddressSlot","nameLocations":["1960:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2821,"src":"1960:11:22"},"referencedDeclaration":2821,"src":"1960:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2821_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:22"},"scope":2939,"src":"1899:163:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2860,"nodeType":"Block","src":"2243:79:22","statements":[{"AST":{"nativeSrc":"2278:38:22","nodeType":"YulBlock","src":"2278:38:22","statements":[{"nativeSrc":"2292:14:22","nodeType":"YulAssignment","src":"2292:14:22","value":{"name":"slot","nativeSrc":"2302:4:22","nodeType":"YulIdentifier","src":"2302:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:22","nodeType":"YulIdentifier","src":"2292:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2857,"isOffset":false,"isSlot":true,"src":"2292:6:22","suffix":"slot","valueSize":1},{"declaration":2853,"isOffset":false,"isSlot":false,"src":"2302:4:22","valueSize":1}],"flags":["memory-safe"],"id":2859,"nodeType":"InlineAssembly","src":"2253:63:22"}]},"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"2068:86:22","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2861,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:22","nodeType":"FunctionDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"slot","nameLocation":"2191:4:22","nodeType":"VariableDeclaration","scope":2861,"src":"2183:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:22"},"returnParameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"r","nameLocation":"2240:1:22","nodeType":"VariableDeclaration","scope":2861,"src":"2220:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2824_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2856,"nodeType":"UserDefinedTypeName","pathNode":{"id":2855,"name":"BooleanSlot","nameLocations":["2220:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2824,"src":"2220:11:22"},"referencedDeclaration":2824,"src":"2220:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2824_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:22"},"scope":2939,"src":"2159:163:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2871,"nodeType":"Block","src":"2503:79:22","statements":[{"AST":{"nativeSrc":"2538:38:22","nodeType":"YulBlock","src":"2538:38:22","statements":[{"nativeSrc":"2552:14:22","nodeType":"YulAssignment","src":"2552:14:22","value":{"name":"slot","nativeSrc":"2562:4:22","nodeType":"YulIdentifier","src":"2562:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:22","nodeType":"YulIdentifier","src":"2552:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2868,"isOffset":false,"isSlot":true,"src":"2552:6:22","suffix":"slot","valueSize":1},{"declaration":2864,"isOffset":false,"isSlot":false,"src":"2562:4:22","valueSize":1}],"flags":["memory-safe"],"id":2870,"nodeType":"InlineAssembly","src":"2513:63:22"}]},"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"2328:86:22","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:22","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"slot","nameLocation":"2451:4:22","nodeType":"VariableDeclaration","scope":2872,"src":"2443:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:22"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"r","nameLocation":"2500:1:22","nodeType":"VariableDeclaration","scope":2872,"src":"2480:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2827_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2867,"nodeType":"UserDefinedTypeName","pathNode":{"id":2866,"name":"Bytes32Slot","nameLocations":["2480:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2827,"src":"2480:11:22"},"referencedDeclaration":2827,"src":"2480:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2827_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:22"},"scope":2939,"src":"2419:163:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2882,"nodeType":"Block","src":"2763:79:22","statements":[{"AST":{"nativeSrc":"2798:38:22","nodeType":"YulBlock","src":"2798:38:22","statements":[{"nativeSrc":"2812:14:22","nodeType":"YulAssignment","src":"2812:14:22","value":{"name":"slot","nativeSrc":"2822:4:22","nodeType":"YulIdentifier","src":"2822:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:22","nodeType":"YulIdentifier","src":"2812:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2879,"isOffset":false,"isSlot":true,"src":"2812:6:22","suffix":"slot","valueSize":1},{"declaration":2875,"isOffset":false,"isSlot":false,"src":"2822:4:22","valueSize":1}],"flags":["memory-safe"],"id":2881,"nodeType":"InlineAssembly","src":"2773:63:22"}]},"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"2588:86:22","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2883,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:22","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"slot","nameLocation":"2711:4:22","nodeType":"VariableDeclaration","scope":2883,"src":"2703:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:22"},"returnParameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"r","nameLocation":"2760:1:22","nodeType":"VariableDeclaration","scope":2883,"src":"2740:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2830_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2878,"nodeType":"UserDefinedTypeName","pathNode":{"id":2877,"name":"Uint256Slot","nameLocations":["2740:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2830,"src":"2740:11:22"},"referencedDeclaration":2830,"src":"2740:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2830_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:22"},"scope":2939,"src":"2679:163:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2893,"nodeType":"Block","src":"3020:79:22","statements":[{"AST":{"nativeSrc":"3055:38:22","nodeType":"YulBlock","src":"3055:38:22","statements":[{"nativeSrc":"3069:14:22","nodeType":"YulAssignment","src":"3069:14:22","value":{"name":"slot","nativeSrc":"3079:4:22","nodeType":"YulIdentifier","src":"3079:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:22","nodeType":"YulIdentifier","src":"3069:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2890,"isOffset":false,"isSlot":true,"src":"3069:6:22","suffix":"slot","valueSize":1},{"declaration":2886,"isOffset":false,"isSlot":false,"src":"3079:4:22","valueSize":1}],"flags":["memory-safe"],"id":2892,"nodeType":"InlineAssembly","src":"3030:63:22"}]},"documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"2848:85:22","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2894,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:22","nodeType":"FunctionDefinition","parameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"slot","nameLocation":"2969:4:22","nodeType":"VariableDeclaration","scope":2894,"src":"2961:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:22"},"returnParameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"r","nameLocation":"3017:1:22","nodeType":"VariableDeclaration","scope":2894,"src":"2998:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2833_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2889,"nodeType":"UserDefinedTypeName","pathNode":{"id":2888,"name":"Int256Slot","nameLocations":["2998:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":2833,"src":"2998:10:22"},"referencedDeclaration":2833,"src":"2998:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2833_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:22"},"scope":2939,"src":"2938:161:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2904,"nodeType":"Block","src":"3277:79:22","statements":[{"AST":{"nativeSrc":"3312:38:22","nodeType":"YulBlock","src":"3312:38:22","statements":[{"nativeSrc":"3326:14:22","nodeType":"YulAssignment","src":"3326:14:22","value":{"name":"slot","nativeSrc":"3336:4:22","nodeType":"YulIdentifier","src":"3336:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:22","nodeType":"YulIdentifier","src":"3326:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2901,"isOffset":false,"isSlot":true,"src":"3326:6:22","suffix":"slot","valueSize":1},{"declaration":2897,"isOffset":false,"isSlot":false,"src":"3336:4:22","valueSize":1}],"flags":["memory-safe"],"id":2903,"nodeType":"InlineAssembly","src":"3287:63:22"}]},"documentation":{"id":2895,"nodeType":"StructuredDocumentation","src":"3105:85:22","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2905,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:22","nodeType":"FunctionDefinition","parameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"slot","nameLocation":"3226:4:22","nodeType":"VariableDeclaration","scope":2905,"src":"3218:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:22"},"returnParameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"r","nameLocation":"3274:1:22","nodeType":"VariableDeclaration","scope":2905,"src":"3255:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2836_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2900,"nodeType":"UserDefinedTypeName","pathNode":{"id":2899,"name":"StringSlot","nameLocations":["3255:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":2836,"src":"3255:10:22"},"referencedDeclaration":2836,"src":"3255:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2836_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:22"},"scope":2939,"src":"3195:161:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2915,"nodeType":"Block","src":"3558:85:22","statements":[{"AST":{"nativeSrc":"3593:44:22","nodeType":"YulBlock","src":"3593:44:22","statements":[{"nativeSrc":"3607:20:22","nodeType":"YulAssignment","src":"3607:20:22","value":{"name":"store.slot","nativeSrc":"3617:10:22","nodeType":"YulIdentifier","src":"3617:10:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:22","nodeType":"YulIdentifier","src":"3607:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2912,"isOffset":false,"isSlot":true,"src":"3607:6:22","suffix":"slot","valueSize":1},{"declaration":2908,"isOffset":false,"isSlot":true,"src":"3617:10:22","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2914,"nodeType":"InlineAssembly","src":"3568:69:22"}]},"documentation":{"id":2906,"nodeType":"StructuredDocumentation","src":"3362:101:22","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2916,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:22","nodeType":"FunctionDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"store","nameLocation":"3506:5:22","nodeType":"VariableDeclaration","scope":2916,"src":"3491:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2907,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:22"},"returnParameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"r","nameLocation":"3555:1:22","nodeType":"VariableDeclaration","scope":2916,"src":"3536:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2836_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2911,"nodeType":"UserDefinedTypeName","pathNode":{"id":2910,"name":"StringSlot","nameLocations":["3536:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":2836,"src":"3536:10:22"},"referencedDeclaration":2836,"src":"3536:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2836_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:22"},"scope":2939,"src":"3468:175:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2926,"nodeType":"Block","src":"3818:79:22","statements":[{"AST":{"nativeSrc":"3853:38:22","nodeType":"YulBlock","src":"3853:38:22","statements":[{"nativeSrc":"3867:14:22","nodeType":"YulAssignment","src":"3867:14:22","value":{"name":"slot","nativeSrc":"3877:4:22","nodeType":"YulIdentifier","src":"3877:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:22","nodeType":"YulIdentifier","src":"3867:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2923,"isOffset":false,"isSlot":true,"src":"3867:6:22","suffix":"slot","valueSize":1},{"declaration":2919,"isOffset":false,"isSlot":false,"src":"3877:4:22","valueSize":1}],"flags":["memory-safe"],"id":2925,"nodeType":"InlineAssembly","src":"3828:63:22"}]},"documentation":{"id":2917,"nodeType":"StructuredDocumentation","src":"3649:84:22","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2927,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:22","nodeType":"FunctionDefinition","parameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"slot","nameLocation":"3768:4:22","nodeType":"VariableDeclaration","scope":2927,"src":"3760:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:22"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"r","nameLocation":"3815:1:22","nodeType":"VariableDeclaration","scope":2927,"src":"3797:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2839_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2922,"nodeType":"UserDefinedTypeName","pathNode":{"id":2921,"name":"BytesSlot","nameLocations":["3797:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":2839,"src":"3797:9:22"},"referencedDeclaration":2839,"src":"3797:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2839_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:22"},"scope":2939,"src":"3738:159:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2937,"nodeType":"Block","src":"4094:85:22","statements":[{"AST":{"nativeSrc":"4129:44:22","nodeType":"YulBlock","src":"4129:44:22","statements":[{"nativeSrc":"4143:20:22","nodeType":"YulAssignment","src":"4143:20:22","value":{"name":"store.slot","nativeSrc":"4153:10:22","nodeType":"YulIdentifier","src":"4153:10:22"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:22","nodeType":"YulIdentifier","src":"4143:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2934,"isOffset":false,"isSlot":true,"src":"4143:6:22","suffix":"slot","valueSize":1},{"declaration":2930,"isOffset":false,"isSlot":true,"src":"4153:10:22","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2936,"nodeType":"InlineAssembly","src":"4104:69:22"}]},"documentation":{"id":2928,"nodeType":"StructuredDocumentation","src":"3903:99:22","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2938,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:22","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"store","nameLocation":"4043:5:22","nodeType":"VariableDeclaration","scope":2938,"src":"4029:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2929,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:22"},"returnParameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"r","nameLocation":"4091:1:22","nodeType":"VariableDeclaration","scope":2938,"src":"4073:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2839_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2933,"nodeType":"UserDefinedTypeName","pathNode":{"id":2932,"name":"BytesSlot","nameLocations":["4073:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":2839,"src":"4073:9:22"},"referencedDeclaration":2839,"src":"4073:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2839_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:22"},"scope":2939,"src":"4007:172:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2940,"src":"1407:2774:22","usedErrors":[],"usedEvents":[]}],"src":"193:3989:22"},"id":22},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6635],"SafeCast":[8400],"SignedMath":[8544],"Strings":[4341]},"id":4342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2941,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2943,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4342,"sourceUnit":6636,"src":"127:37:23","symbolAliases":[{"foreign":{"id":2942,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"135:4:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4342,"sourceUnit":8401,"src":"165:45:23","symbolAliases":[{"foreign":{"id":2944,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"173:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4342,"sourceUnit":8545,"src":"211:49:23","symbolAliases":[{"foreign":{"id":2946,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8544,"src":"219:10:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2948,"nodeType":"StructuredDocumentation","src":"262:34:23","text":" @dev String operations."},"fullyImplemented":true,"id":4341,"linearizedBaseContracts":[4341],"name":"Strings","nameLocation":"305:7:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2950,"libraryName":{"id":2949,"name":"SafeCast","nameLocations":["325:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":8400,"src":"325:8:23"},"nodeType":"UsingForDirective","src":"319:21:23"},{"constant":true,"id":2953,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:23","nodeType":"VariableDeclaration","scope":4341,"src":"346:56:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2951,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:23","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2956,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:23","nodeType":"VariableDeclaration","scope":4341,"src":"408:42:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2954,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:23","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2992,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:23","nodeType":"VariableDeclaration","scope":4341,"src":"456:302:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:23","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:23","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:23","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:23","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:23","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:23","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:23","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:23","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:23","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:23","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:23","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:23","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:23","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:23","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:23","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:23","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:23","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:23","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:23","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:23","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:23","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2993,"nodeType":"StructuredDocumentation","src":"778:81:23","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2999,"name":"StringsInsufficientHexLength","nameLocation":"870:28:23","nodeType":"ErrorDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"value","nameLocation":"907:5:23","nodeType":"VariableDeclaration","scope":2999,"src":"899:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"length","nameLocation":"922:6:23","nodeType":"VariableDeclaration","scope":2999,"src":"914:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:23"},"src":"864:66:23"},{"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"936:108:23","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":3002,"name":"StringsInvalidChar","nameLocation":"1055:18:23","nodeType":"ErrorDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[],"src":"1073:2:23"},"src":"1049:27:23"},{"documentation":{"id":3003,"nodeType":"StructuredDocumentation","src":"1082:84:23","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":3005,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:23","nodeType":"ErrorDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[],"src":"1204:2:23"},"src":"1171:36:23"},{"body":{"id":3052,"nodeType":"Block","src":"1379:563:23","statements":[{"id":3051,"nodeType":"UncheckedBlock","src":"1389:547:23","statements":[{"assignments":[3014],"declarations":[{"constant":false,"id":3014,"mutability":"mutable","name":"length","nameLocation":"1421:6:23","nodeType":"VariableDeclaration","scope":3051,"src":"1413:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3021,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"1441:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3015,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"1430:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6635_$","typeString":"type(library Math)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:23","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6467,"src":"1430:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:23"},{"assignments":[3023],"declarations":[{"constant":false,"id":3023,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:23","nodeType":"VariableDeclaration","scope":3051,"src":"1465:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3022,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3028,"initialValue":{"arguments":[{"id":3026,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"1499:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3024,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:23"},{"assignments":[3030],"declarations":[{"constant":false,"id":3030,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:23","nodeType":"VariableDeclaration","scope":3051,"src":"1520:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3031,"nodeType":"VariableDeclarationStatement","src":"1520:11:23"},{"AST":{"nativeSrc":"1570:69:23","nodeType":"YulBlock","src":"1570:69:23","statements":[{"nativeSrc":"1588:37:23","nodeType":"YulAssignment","src":"1588:37:23","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:23","nodeType":"YulIdentifier","src":"1603:6:23"},{"kind":"number","nativeSrc":"1611:4:23","nodeType":"YulLiteral","src":"1611:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:23","nodeType":"YulIdentifier","src":"1599:3:23"},"nativeSrc":"1599:17:23","nodeType":"YulFunctionCall","src":"1599:17:23"},{"name":"length","nativeSrc":"1618:6:23","nodeType":"YulIdentifier","src":"1618:6:23"}],"functionName":{"name":"add","nativeSrc":"1595:3:23","nodeType":"YulIdentifier","src":"1595:3:23"},"nativeSrc":"1595:30:23","nodeType":"YulFunctionCall","src":"1595:30:23"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:23","nodeType":"YulIdentifier","src":"1588:3:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3023,"isOffset":false,"isSlot":false,"src":"1603:6:23","valueSize":1},{"declaration":3014,"isOffset":false,"isSlot":false,"src":"1618:6:23","valueSize":1},{"declaration":3030,"isOffset":false,"isSlot":false,"src":"1588:3:23","valueSize":1}],"flags":["memory-safe"],"id":3032,"nodeType":"InlineAssembly","src":"1545:94:23"},{"body":{"id":3047,"nodeType":"Block","src":"1665:234:23","statements":[{"expression":{"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:23","subExpression":{"id":3034,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"1683:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3036,"nodeType":"ExpressionStatement","src":"1683:5:23"},{"AST":{"nativeSrc":"1731:86:23","nodeType":"YulBlock","src":"1731:86:23","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:23","nodeType":"YulIdentifier","src":"1761:3:23"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:23","nodeType":"YulIdentifier","src":"1775:5:23"},{"kind":"number","nativeSrc":"1782:2:23","nodeType":"YulLiteral","src":"1782:2:23","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:23","nodeType":"YulIdentifier","src":"1771:3:23"},"nativeSrc":"1771:14:23","nodeType":"YulFunctionCall","src":"1771:14:23"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:23","nodeType":"YulIdentifier","src":"1787:10:23"}],"functionName":{"name":"byte","nativeSrc":"1766:4:23","nodeType":"YulIdentifier","src":"1766:4:23"},"nativeSrc":"1766:32:23","nodeType":"YulFunctionCall","src":"1766:32:23"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:23","nodeType":"YulIdentifier","src":"1753:7:23"},"nativeSrc":"1753:46:23","nodeType":"YulFunctionCall","src":"1753:46:23"},"nativeSrc":"1753:46:23","nodeType":"YulExpressionStatement","src":"1753:46:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":2953,"isOffset":false,"isSlot":false,"src":"1787:10:23","valueSize":1},{"declaration":3030,"isOffset":false,"isSlot":false,"src":"1761:3:23","valueSize":1},{"declaration":3008,"isOffset":false,"isSlot":false,"src":"1775:5:23","valueSize":1}],"flags":["memory-safe"],"id":3037,"nodeType":"InlineAssembly","src":"1706:111:23"},{"expression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"1834:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3041,"nodeType":"ExpressionStatement","src":"1834:11:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"1867:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3046,"nodeType":"IfStatement","src":"1863:21:23","trueBody":{"id":3045,"nodeType":"Break","src":"1879:5:23"}}]},"condition":{"hexValue":"74727565","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3048,"nodeType":"WhileStatement","src":"1652:247:23"},{"expression":{"id":3049,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"1919:6:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3012,"id":3050,"nodeType":"Return","src":"1912:13:23"}]}]},"documentation":{"id":3006,"nodeType":"StructuredDocumentation","src":"1213:90:23","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3053,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:23","nodeType":"FunctionDefinition","parameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"value","nameLocation":"1334:5:23","nodeType":"VariableDeclaration","scope":3053,"src":"1326:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:23"},"returnParameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3053,"src":"1364:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3010,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:23"},"scope":4341,"src":"1308:634:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3078,"nodeType":"Block","src":"2118:92:23","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"2149:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:23","trueExpression":{"hexValue":"2d","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"2195:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3071,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8544,"src":"2180:10:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8544_$","typeString":"type(library SignedMath)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:23","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8543,"src":"2180:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3070,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"2171:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3061,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:23","typeDescriptions":{}}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:23","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:23","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3060,"id":3077,"nodeType":"Return","src":"2128:75:23"}]},"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"1948:89:23","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3079,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:23","nodeType":"FunctionDefinition","parameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"value","nameLocation":"2073:5:23","nodeType":"VariableDeclaration","scope":3079,"src":"2066:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3055,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:23"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3079,"src":"2103:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3058,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:23"},"scope":4341,"src":"2042:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3098,"nodeType":"Block","src":"2389:100:23","statements":[{"id":3097,"nodeType":"UncheckedBlock","src":"2399:84:23","statements":[{"expression":{"arguments":[{"id":3088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"2442:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"2461:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3089,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"2449:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6635_$","typeString":"type(library Math)"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:23","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6578,"src":"2449:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3087,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3099,3182,3202],"referencedDeclaration":3182,"src":"2430:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3086,"id":3096,"nodeType":"Return","src":"2423:49:23"}]}]},"documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"2216:94:23","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:23","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"value","nameLocation":"2344:5:23","nodeType":"VariableDeclaration","scope":3099,"src":"2336:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:23"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3099,"src":"2374:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3084,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:23"},"scope":4341,"src":"2315:174:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"2702:435:23","statements":[{"assignments":[3110],"declarations":[{"constant":false,"id":3110,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:23","nodeType":"VariableDeclaration","scope":3181,"src":"2712:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3112,"initialValue":{"id":3111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"2733:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:23"},{"assignments":[3114],"declarations":[{"constant":false,"id":3114,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:23","nodeType":"VariableDeclaration","scope":3181,"src":"2748:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3113,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3123,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3118,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"2784:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3115,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:23"},{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3124,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"2805:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3126,"indexExpression":{"hexValue":"30","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3129,"nodeType":"ExpressionStatement","src":"2805:15:23"},{"expression":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3130,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"2830:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3132,"indexExpression":{"hexValue":"31","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3135,"nodeType":"ExpressionStatement","src":"2830:15:23"},{"body":{"id":3164,"nodeType":"Block","src":"2900:95:23","statements":[{"expression":{"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3150,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"2914:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3152,"indexExpression":{"id":3151,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"2921:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3153,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"2926:10:23","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3157,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2937:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3159,"nodeType":"ExpressionStatement","src":"2914:40:23"},{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3160,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2968:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3163,"nodeType":"ExpressionStatement","src":"2968:16:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"2888:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3165,"initializationExpression":{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"i","nameLocation":"2868:1:23","nodeType":"VariableDeclaration","scope":3165,"src":"2860:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3143,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3139,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"2876:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:23"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:23","subExpression":{"id":3147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"2897:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3149,"nodeType":"ExpressionStatement","src":"2895:3:23"},"nodeType":"ForStatement","src":"2855:140:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3008:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3175,"nodeType":"IfStatement","src":"3004:96:23","trueBody":{"id":3174,"nodeType":"Block","src":"3025:75:23","statements":[{"errorCall":{"arguments":[{"id":3170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"3075:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3171,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"3082:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3169,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"3046:28:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3173,"nodeType":"RevertStatement","src":"3039:50:23"}]}},{"expression":{"arguments":[{"id":3178,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"3123:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3176,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:23","typeDescriptions":{}}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3108,"id":3180,"nodeType":"Return","src":"3109:21:23"}]},"documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"2495:112:23","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:23","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"value","nameLocation":"2641:5:23","nodeType":"VariableDeclaration","scope":3182,"src":"2633:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"length","nameLocation":"2656:6:23","nodeType":"VariableDeclaration","scope":3182,"src":"2648:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:23"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3182,"src":"2687:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3106,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:23"},"scope":4341,"src":"2612:525:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3201,"nodeType":"Block","src":"3369:75:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3195,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"3414:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3193,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:23","typeDescriptions":{}}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:23","typeDescriptions":{}}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3198,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"3422:14:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3190,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3099,3182,3202],"referencedDeclaration":3182,"src":"3386:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3189,"id":3200,"nodeType":"Return","src":"3379:58:23"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"3143:148:23","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3202,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:23","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"addr","nameLocation":"3325:4:23","nodeType":"VariableDeclaration","scope":3202,"src":"3317:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3184,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:23"},"returnParameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3202,"src":"3354:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3187,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:23"},"scope":4341,"src":"3296:148:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3266,"nodeType":"Block","src":"3701:642:23","statements":[{"assignments":[3211],"declarations":[{"constant":false,"id":3211,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:23","nodeType":"VariableDeclaration","scope":3266,"src":"3711:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3210,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3218,"initialValue":{"arguments":[{"arguments":[{"id":3215,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"3751:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3214,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3099,3182,3202],"referencedDeclaration":3202,"src":"3739:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3212,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:23","typeDescriptions":{}}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:23"},{"assignments":[3220],"declarations":[{"constant":false,"id":3220,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:23","nodeType":"VariableDeclaration","scope":3266,"src":"3842:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3221,"nodeType":"VariableDeclarationStatement","src":"3842:17:23"},{"AST":{"nativeSrc":"3894:78:23","nodeType":"YulBlock","src":"3894:78:23","statements":[{"nativeSrc":"3908:54:23","nodeType":"YulAssignment","src":"3908:54:23","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:23","nodeType":"YulLiteral","src":"3925:2:23","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:23","nodeType":"YulIdentifier","src":"3943:6:23"},{"kind":"number","nativeSrc":"3951:4:23","nodeType":"YulLiteral","src":"3951:4:23","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:23","nodeType":"YulIdentifier","src":"3939:3:23"},"nativeSrc":"3939:17:23","nodeType":"YulFunctionCall","src":"3939:17:23"},{"kind":"number","nativeSrc":"3958:2:23","nodeType":"YulLiteral","src":"3958:2:23","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:23","nodeType":"YulIdentifier","src":"3929:9:23"},"nativeSrc":"3929:32:23","nodeType":"YulFunctionCall","src":"3929:32:23"}],"functionName":{"name":"shr","nativeSrc":"3921:3:23","nodeType":"YulIdentifier","src":"3921:3:23"},"nativeSrc":"3921:41:23","nodeType":"YulFunctionCall","src":"3921:41:23"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:23","nodeType":"YulIdentifier","src":"3908:9:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3211,"isOffset":false,"isSlot":false,"src":"3943:6:23","valueSize":1},{"declaration":3220,"isOffset":false,"isSlot":false,"src":"3908:9:23","valueSize":1}],"flags":["memory-safe"],"id":3222,"nodeType":"InlineAssembly","src":"3869:103:23"},{"body":{"id":3259,"nodeType":"Block","src":"4015:291:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"4121:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3240,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"4150:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3242,"indexExpression":{"id":3241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"4157:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3238,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:23","typeDescriptions":{}}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3254,"nodeType":"IfStatement","src":"4117:150:23","trueBody":{"id":3253,"nodeType":"Block","src":"4167:100:23","statements":[{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3247,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"4235:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3249,"indexExpression":{"id":3248,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"4242:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3252,"nodeType":"ExpressionStatement","src":"4235:17:23"}]}},{"expression":{"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3255,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"4280:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3258,"nodeType":"ExpressionStatement","src":"4280:15:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"4003:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3260,"initializationExpression":{"assignments":[3224],"declarations":[{"constant":false,"id":3224,"mutability":"mutable","name":"i","nameLocation":"3995:1:23","nodeType":"VariableDeclaration","scope":3260,"src":"3987:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3226,"initialValue":{"hexValue":"3431","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:23","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:23"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:23","subExpression":{"id":3230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"4012:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3232,"nodeType":"ExpressionStatement","src":"4010:3:23"},"nodeType":"ForStatement","src":"3982:324:23"},{"expression":{"arguments":[{"id":3263,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"4329:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3261,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:23","typeDescriptions":{}}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3209,"id":3265,"nodeType":"Return","src":"4315:21:23"}]},"documentation":{"id":3203,"nodeType":"StructuredDocumentation","src":"3450:165:23","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3267,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:23","nodeType":"FunctionDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"addr","nameLocation":"3657:4:23","nodeType":"VariableDeclaration","scope":3267,"src":"3649:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:23"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3267,"src":"3686:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3207,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:23"},"scope":4341,"src":"3620:723:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3303,"nodeType":"Block","src":"4498:104:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"4521:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3277,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:23","typeDescriptions":{}}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:23","memberName":"length","nodeType":"MemberAccess","src":"4515:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3284,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"4540:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3282,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:23","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:23","memberName":"length","nodeType":"MemberAccess","src":"4534:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3291,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"4569:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3289,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:23","typeDescriptions":{}}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3288,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3297,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"4592:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3295,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:23","typeDescriptions":{}}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3294,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3276,"id":3302,"nodeType":"Return","src":"4508:87:23"}]},"documentation":{"id":3268,"nodeType":"StructuredDocumentation","src":"4349:66:23","text":" @dev Returns true if the two strings are equal."},"id":3304,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:23","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"a","nameLocation":"4449:1:23","nodeType":"VariableDeclaration","scope":3304,"src":"4435:15:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3269,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"b","nameLocation":"4466:1:23","nodeType":"VariableDeclaration","scope":3304,"src":"4452:15:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3271,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:23"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3304,"src":"4492:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3274,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:23"},"scope":4341,"src":"4420:182:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3322,"nodeType":"Block","src":"4899:64:23","statements":[{"expression":{"arguments":[{"id":3313,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"4926:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3317,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"4942:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3315,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:23","typeDescriptions":{}}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:23","memberName":"length","nodeType":"MemberAccess","src":"4936:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3312,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3323,3354],"referencedDeclaration":3354,"src":"4916:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3311,"id":3321,"nodeType":"Return","src":"4909:47:23"}]},"documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"4608:214:23","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3323,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:23","nodeType":"FunctionDefinition","parameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"input","nameLocation":"4860:5:23","nodeType":"VariableDeclaration","scope":3323,"src":"4846:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3306,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:23"},"returnParameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3323,"src":"4890:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:23"},"scope":4341,"src":"4827:136:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3353,"nodeType":"Block","src":"5368:153:23","statements":[{"assignments":[3336,3338],"declarations":[{"constant":false,"id":3336,"mutability":"mutable","name":"success","nameLocation":"5384:7:23","nodeType":"VariableDeclaration","scope":3353,"src":"5379:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3335,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3338,"mutability":"mutable","name":"value","nameLocation":"5401:5:23","nodeType":"VariableDeclaration","scope":3353,"src":"5393:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3344,"initialValue":{"arguments":[{"id":3340,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"5423:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3341,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"5430:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3342,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"5437:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3339,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3375,3412],"referencedDeclaration":3412,"src":"5410:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:23"},{"condition":{"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:23","subExpression":{"id":3345,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"5456:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3350,"nodeType":"IfStatement","src":"5451:41:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3347,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"5472:18:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3349,"nodeType":"RevertStatement","src":"5465:27:23"}},{"expression":{"id":3351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"5509:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3334,"id":3352,"nodeType":"Return","src":"5502:12:23"}]},"documentation":{"id":3324,"nodeType":"StructuredDocumentation","src":"4969:294:23","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3354,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:23","nodeType":"FunctionDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"input","nameLocation":"5301:5:23","nodeType":"VariableDeclaration","scope":3354,"src":"5287:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3325,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3328,"mutability":"mutable","name":"begin","nameLocation":"5316:5:23","nodeType":"VariableDeclaration","scope":3354,"src":"5308:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3330,"mutability":"mutable","name":"end","nameLocation":"5331:3:23","nodeType":"VariableDeclaration","scope":3354,"src":"5323:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:23"},"returnParameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3354,"src":"5359:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:23"},"scope":4341,"src":"5268:253:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3374,"nodeType":"Block","src":"5842:83:23","statements":[{"expression":{"arguments":[{"id":3365,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"5888:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3369,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"5904:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3367,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:23","typeDescriptions":{}}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:23","memberName":"length","nodeType":"MemberAccess","src":"5898:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3364,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"5859:28:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3363,"id":3373,"nodeType":"Return","src":"5852:66:23"}]},"documentation":{"id":3355,"nodeType":"StructuredDocumentation","src":"5527:215:23","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3375,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:23","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"input","nameLocation":"5783:5:23","nodeType":"VariableDeclaration","scope":3375,"src":"5769:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3356,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:23"},"returnParameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"success","nameLocation":"5818:7:23","nodeType":"VariableDeclaration","scope":3375,"src":"5813:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3359,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3362,"mutability":"mutable","name":"value","nameLocation":"5835:5:23","nodeType":"VariableDeclaration","scope":3375,"src":"5827:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:23"},"scope":4341,"src":"5747:178:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3411,"nodeType":"Block","src":"6327:144:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"6341:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3392,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"6353:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3390,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:23","typeDescriptions":{}}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:23","memberName":"length","nodeType":"MemberAccess","src":"6347:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3396,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"6370:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3397,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"6378:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3404,"nodeType":"IfStatement","src":"6337:63:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3388,"id":3403,"nodeType":"Return","src":"6383:17:23"}},{"expression":{"arguments":[{"id":3406,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"6446:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3407,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"6453:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3408,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"6460:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3405,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"6417:28:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3388,"id":3410,"nodeType":"Return","src":"6410:54:23"}]},"documentation":{"id":3376,"nodeType":"StructuredDocumentation","src":"5931:238:23","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3412,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:23","nodeType":"FunctionDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"input","nameLocation":"6219:5:23","nodeType":"VariableDeclaration","scope":3412,"src":"6205:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3377,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3380,"mutability":"mutable","name":"begin","nameLocation":"6242:5:23","nodeType":"VariableDeclaration","scope":3412,"src":"6234:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"end","nameLocation":"6265:3:23","nodeType":"VariableDeclaration","scope":3412,"src":"6257:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:23"},"returnParameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"success","nameLocation":"6303:7:23","nodeType":"VariableDeclaration","scope":3412,"src":"6298:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3384,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"value","nameLocation":"6320:5:23","nodeType":"VariableDeclaration","scope":3412,"src":"6312:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:23"},"scope":4341,"src":"6174:297:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3481,"nodeType":"Block","src":"6874:347:23","statements":[{"assignments":[3427],"declarations":[{"constant":false,"id":3427,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:23","nodeType":"VariableDeclaration","scope":3481,"src":"6884:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3426,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3432,"initialValue":{"arguments":[{"id":3430,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"6912:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3428,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:23","typeDescriptions":{}}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:23"},{"assignments":[3434],"declarations":[{"constant":false,"id":3434,"mutability":"mutable","name":"result","nameLocation":"6937:6:23","nodeType":"VariableDeclaration","scope":3481,"src":"6929:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3436,"initialValue":{"hexValue":"30","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:23"},{"body":{"id":3475,"nodeType":"Block","src":"6995:189:23","statements":[{"assignments":[3448],"declarations":[{"constant":false,"id":3448,"mutability":"mutable","name":"chr","nameLocation":"7015:3:23","nodeType":"VariableDeclaration","scope":3475,"src":"7009:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3447,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3458,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3453,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7064:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3454,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"7072:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3452,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"7041:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3450,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:23","typeDescriptions":{}}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3449,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"7021:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"7094:3:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:23","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3466,"nodeType":"IfStatement","src":"7090:30:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3425,"id":3465,"nodeType":"Return","src":"7103:17:23"}},{"expression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"7134:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3470,"nodeType":"ExpressionStatement","src":"7134:12:23"},{"expression":{"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"7160:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3472,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"7170:3:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3474,"nodeType":"ExpressionStatement","src":"7160:13:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"6981:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3442,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"6985:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3476,"initializationExpression":{"assignments":[3438],"declarations":[{"constant":false,"id":3438,"mutability":"mutable","name":"i","nameLocation":"6970:1:23","nodeType":"VariableDeclaration","scope":3476,"src":"6962:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3440,"initialValue":{"id":3439,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"6974:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:23","subExpression":{"id":3444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"6992:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3446,"nodeType":"ExpressionStatement","src":"6990:3:23"},"nodeType":"ForStatement","src":"6957:227:23"},{"expression":{"components":[{"hexValue":"74727565","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"7207:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3425,"id":3480,"nodeType":"Return","src":"7193:21:23"}]},"documentation":{"id":3413,"nodeType":"StructuredDocumentation","src":"6477:224:23","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3482,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:23","nodeType":"FunctionDefinition","parameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"input","nameLocation":"6767:5:23","nodeType":"VariableDeclaration","scope":3482,"src":"6753:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3414,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3417,"mutability":"mutable","name":"begin","nameLocation":"6790:5:23","nodeType":"VariableDeclaration","scope":3482,"src":"6782:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3419,"mutability":"mutable","name":"end","nameLocation":"6813:3:23","nodeType":"VariableDeclaration","scope":3482,"src":"6805:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3418,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:23"},"returnParameters":{"id":3425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"success","nameLocation":"6850:7:23","nodeType":"VariableDeclaration","scope":3482,"src":"6845:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3421,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"value","nameLocation":"6867:5:23","nodeType":"VariableDeclaration","scope":3482,"src":"6859:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3423,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:23"},"scope":4341,"src":"6706:515:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3500,"nodeType":"Block","src":"7518:63:23","statements":[{"expression":{"arguments":[{"id":3491,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"7544:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3495,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"7560:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3493,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:23","typeDescriptions":{}}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:23","memberName":"length","nodeType":"MemberAccess","src":"7554:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3490,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3501,3532],"referencedDeclaration":3532,"src":"7535:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3489,"id":3499,"nodeType":"Return","src":"7528:46:23"}]},"documentation":{"id":3483,"nodeType":"StructuredDocumentation","src":"7227:216:23","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3501,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:23","nodeType":"FunctionDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"input","nameLocation":"7480:5:23","nodeType":"VariableDeclaration","scope":3501,"src":"7466:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3484,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:23"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3501,"src":"7510:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3487,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:23"},"scope":4341,"src":"7448:133:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3531,"nodeType":"Block","src":"7986:151:23","statements":[{"assignments":[3514,3516],"declarations":[{"constant":false,"id":3514,"mutability":"mutable","name":"success","nameLocation":"8002:7:23","nodeType":"VariableDeclaration","scope":3531,"src":"7997:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3513,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"value","nameLocation":"8018:5:23","nodeType":"VariableDeclaration","scope":3531,"src":"8011:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3515,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3522,"initialValue":{"arguments":[{"id":3518,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"8039:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3519,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"8046:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3520,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"8053:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3517,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3553,3595],"referencedDeclaration":3595,"src":"8027:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:23"},{"condition":{"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:23","subExpression":{"id":3523,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"8072:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3528,"nodeType":"IfStatement","src":"8067:41:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3525,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"8088:18:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3527,"nodeType":"RevertStatement","src":"8081:27:23"}},{"expression":{"id":3529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"8125:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3512,"id":3530,"nodeType":"Return","src":"8118:12:23"}]},"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"7587:296:23","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3532,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:23","nodeType":"FunctionDefinition","parameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"input","nameLocation":"7920:5:23","nodeType":"VariableDeclaration","scope":3532,"src":"7906:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3503,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3506,"mutability":"mutable","name":"begin","nameLocation":"7935:5:23","nodeType":"VariableDeclaration","scope":3532,"src":"7927:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3508,"mutability":"mutable","name":"end","nameLocation":"7950:3:23","nodeType":"VariableDeclaration","scope":3532,"src":"7942:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:23"},"returnParameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3532,"src":"7978:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3510,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:23"},"scope":4341,"src":"7888:249:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3552,"nodeType":"Block","src":"8528:82:23","statements":[{"expression":{"arguments":[{"id":3543,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"8573:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3547,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"8589:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3545,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:23","typeDescriptions":{}}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:23","memberName":"length","nodeType":"MemberAccess","src":"8583:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3542,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"8545:27:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3541,"id":3551,"nodeType":"Return","src":"8538:65:23"}]},"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"8143:287:23","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3553,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:23","nodeType":"FunctionDefinition","parameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"input","nameLocation":"8470:5:23","nodeType":"VariableDeclaration","scope":3553,"src":"8456:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3534,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:23"},"returnParameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"success","nameLocation":"8505:7:23","nodeType":"VariableDeclaration","scope":3553,"src":"8500:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3537,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"value","nameLocation":"8521:5:23","nodeType":"VariableDeclaration","scope":3553,"src":"8514:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3539,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:23"},"scope":4341,"src":"8435:175:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3558,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:23","nodeType":"VariableDeclaration","scope":4341,"src":"8616:50:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3594,"nodeType":"Block","src":"9132:143:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3572,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"9146:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3575,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"9158:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3573,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:23","typeDescriptions":{}}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:23","memberName":"length","nodeType":"MemberAccess","src":"9152:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3579,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"9175:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3580,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"9183:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3587,"nodeType":"IfStatement","src":"9142:63:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3571,"id":3586,"nodeType":"Return","src":"9188:17:23"}},{"expression":{"arguments":[{"id":3589,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"9250:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3590,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"9257:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3591,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"9264:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3588,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"9222:27:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3571,"id":3593,"nodeType":"Return","src":"9215:53:23"}]},"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"8673:303:23","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:23","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"input","nameLocation":"9025:5:23","nodeType":"VariableDeclaration","scope":3595,"src":"9011:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3560,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"begin","nameLocation":"9048:5:23","nodeType":"VariableDeclaration","scope":3595,"src":"9040:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"end","nameLocation":"9071:3:23","nodeType":"VariableDeclaration","scope":3595,"src":"9063:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:23"},"returnParameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"success","nameLocation":"9109:7:23","nodeType":"VariableDeclaration","scope":3595,"src":"9104:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3567,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"value","nameLocation":"9125:5:23","nodeType":"VariableDeclaration","scope":3595,"src":"9118:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3569,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:23"},"scope":4341,"src":"8981:294:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3715,"nodeType":"Block","src":"9675:812:23","statements":[{"assignments":[3610],"declarations":[{"constant":false,"id":3610,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:23","nodeType":"VariableDeclaration","scope":3715,"src":"9685:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3609,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3615,"initialValue":{"arguments":[{"id":3613,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"9713:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3611,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:23","typeDescriptions":{}}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:23"},{"assignments":[3617],"declarations":[{"constant":false,"id":3617,"mutability":"mutable","name":"sign","nameLocation":"9783:4:23","nodeType":"VariableDeclaration","scope":3715,"src":"9776:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3616,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3633,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3618,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"9790:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3619,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"9799:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3628,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"9847:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3629,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"9855:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3627,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"9824:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3625,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:23","typeDescriptions":{}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:23","trueExpression":{"arguments":[{"hexValue":"30","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3621,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:23","typeDescriptions":{}}},"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:23"},{"assignments":[3635],"declarations":[{"constant":false,"id":3635,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:23","nodeType":"VariableDeclaration","scope":3715,"src":"9943:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3634,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3642,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"9963:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3637,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:23","typeDescriptions":{}}},"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:23"},{"assignments":[3644],"declarations":[{"constant":false,"id":3644,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:23","nodeType":"VariableDeclaration","scope":3715,"src":"9992:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3643,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3651,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"10012:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3646,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:23","typeDescriptions":{}}},"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:23"},{"assignments":[3653],"declarations":[{"constant":false,"id":3653,"mutability":"mutable","name":"offset","nameLocation":"10049:6:23","nodeType":"VariableDeclaration","scope":3715,"src":"10041:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3660,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"10059:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3655,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"10075:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"10058:37:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:23"},{"assignments":[3662,3664],"declarations":[{"constant":false,"id":3662,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:23","nodeType":"VariableDeclaration","scope":3715,"src":"10109:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3661,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3664,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:23","nodeType":"VariableDeclaration","scope":3715,"src":"10126:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3672,"initialValue":{"arguments":[{"id":3666,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"10159:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"10166:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3668,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"10174:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3670,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"10182:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3665,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3375,3412],"referencedDeclaration":3412,"src":"10146:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"10201:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"10215:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3675,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"10226:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3693,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"10343:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3694,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"10357:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3696,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"10373:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3697,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"10385:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3608,"id":3712,"nodeType":"Return","src":"10463:17:23"},"id":3713,"nodeType":"IfStatement","src":"10339:141:23","trueBody":{"id":3708,"nodeType":"Block","src":"10401:56:23","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3702,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3701,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:23","memberName":"min","nodeType":"MemberAccess","src":"10429:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3608,"id":3707,"nodeType":"Return","src":"10415:31:23"}]}},"id":3714,"nodeType":"IfStatement","src":"10197:283:23","trueBody":{"id":3692,"nodeType":"Block","src":"10242:91:23","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3679,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"10270:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3687,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"10312:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3685,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:23","typeDescriptions":{}}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:23","trueExpression":{"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:23","subExpression":{"arguments":[{"id":3682,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"10293:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3680,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:23","typeDescriptions":{}}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3608,"id":3691,"nodeType":"Return","src":"10256:66:23"}]}}]},"documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"9281:223:23","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3716,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:23","nodeType":"FunctionDefinition","parameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"input","nameLocation":"9569:5:23","nodeType":"VariableDeclaration","scope":3716,"src":"9555:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3597,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3600,"mutability":"mutable","name":"begin","nameLocation":"9592:5:23","nodeType":"VariableDeclaration","scope":3716,"src":"9584:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3602,"mutability":"mutable","name":"end","nameLocation":"9615:3:23","nodeType":"VariableDeclaration","scope":3716,"src":"9607:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:23"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"success","nameLocation":"9652:7:23","nodeType":"VariableDeclaration","scope":3716,"src":"9647:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3604,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3607,"mutability":"mutable","name":"value","nameLocation":"9668:5:23","nodeType":"VariableDeclaration","scope":3716,"src":"9661:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3606,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:23"},"scope":4341,"src":"9509:978:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3734,"nodeType":"Block","src":"10832:67:23","statements":[{"expression":{"arguments":[{"id":3725,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"10862:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3729,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"10878:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3727,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:23","typeDescriptions":{}}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:23","memberName":"length","nodeType":"MemberAccess","src":"10872:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3724,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3735,3766],"referencedDeclaration":3766,"src":"10849:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3723,"id":3733,"nodeType":"Return","src":"10842:50:23"}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"10493:259:23","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3735,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:23","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"input","nameLocation":"10793:5:23","nodeType":"VariableDeclaration","scope":3735,"src":"10779:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3718,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:23"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3735,"src":"10823:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:23"},"scope":4341,"src":"10757:142:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3765,"nodeType":"Block","src":"11320:156:23","statements":[{"assignments":[3748,3750],"declarations":[{"constant":false,"id":3748,"mutability":"mutable","name":"success","nameLocation":"11336:7:23","nodeType":"VariableDeclaration","scope":3765,"src":"11331:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3747,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3750,"mutability":"mutable","name":"value","nameLocation":"11353:5:23","nodeType":"VariableDeclaration","scope":3765,"src":"11345:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3756,"initialValue":{"arguments":[{"id":3752,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"11378:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3753,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"11385:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3754,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"11392:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3751,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3787,3824],"referencedDeclaration":3824,"src":"11362:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:23"},{"condition":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:23","subExpression":{"id":3757,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"11411:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3762,"nodeType":"IfStatement","src":"11406:41:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3759,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"11427:18:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3761,"nodeType":"RevertStatement","src":"11420:27:23"}},{"expression":{"id":3763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"11464:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3746,"id":3764,"nodeType":"Return","src":"11457:12:23"}]},"documentation":{"id":3736,"nodeType":"StructuredDocumentation","src":"10905:307:23","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3766,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:23","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"input","nameLocation":"11253:5:23","nodeType":"VariableDeclaration","scope":3766,"src":"11239:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3737,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"begin","nameLocation":"11268:5:23","nodeType":"VariableDeclaration","scope":3766,"src":"11260:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"end","nameLocation":"11283:3:23","nodeType":"VariableDeclaration","scope":3766,"src":"11275:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:23"},"returnParameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3766,"src":"11311:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:23"},"scope":4341,"src":"11217:259:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3786,"nodeType":"Block","src":"11803:86:23","statements":[{"expression":{"arguments":[{"id":3777,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"11852:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3781,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"11868:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3779,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:23","typeDescriptions":{}}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:23","memberName":"length","nodeType":"MemberAccess","src":"11862:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3776,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"11820:31:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3775,"id":3785,"nodeType":"Return","src":"11813:69:23"}]},"documentation":{"id":3767,"nodeType":"StructuredDocumentation","src":"11482:218:23","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3787,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:23","nodeType":"FunctionDefinition","parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"input","nameLocation":"11744:5:23","nodeType":"VariableDeclaration","scope":3787,"src":"11730:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3768,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:23"},"returnParameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"success","nameLocation":"11779:7:23","nodeType":"VariableDeclaration","scope":3787,"src":"11774:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3771,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"value","nameLocation":"11796:5:23","nodeType":"VariableDeclaration","scope":3787,"src":"11788:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:23"},"scope":4341,"src":"11705:184:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3823,"nodeType":"Block","src":"12297:147:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3801,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"12311:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3804,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"12323:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3802,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:23","typeDescriptions":{}}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:23","memberName":"length","nodeType":"MemberAccess","src":"12317:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3808,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"12340:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3809,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"12348:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3816,"nodeType":"IfStatement","src":"12307:63:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3800,"id":3815,"nodeType":"Return","src":"12353:17:23"}},{"expression":{"arguments":[{"id":3818,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"12419:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3819,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"12426:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3820,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"12433:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3817,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"12387:31:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3800,"id":3822,"nodeType":"Return","src":"12380:57:23"}]},"documentation":{"id":3788,"nodeType":"StructuredDocumentation","src":"11895:241:23","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3824,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:23","nodeType":"FunctionDefinition","parameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"input","nameLocation":"12189:5:23","nodeType":"VariableDeclaration","scope":3824,"src":"12175:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3789,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"begin","nameLocation":"12212:5:23","nodeType":"VariableDeclaration","scope":3824,"src":"12204:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"end","nameLocation":"12235:3:23","nodeType":"VariableDeclaration","scope":3824,"src":"12227:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:23"},"returnParameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"success","nameLocation":"12273:7:23","nodeType":"VariableDeclaration","scope":3824,"src":"12268:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3796,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"value","nameLocation":"12290:5:23","nodeType":"VariableDeclaration","scope":3824,"src":"12282:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:23"},"scope":4341,"src":"12141:303:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3926,"nodeType":"Block","src":"12853:881:23","statements":[{"assignments":[3839],"declarations":[{"constant":false,"id":3839,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:23","nodeType":"VariableDeclaration","scope":3926,"src":"12863:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3838,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3844,"initialValue":{"arguments":[{"id":3842,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"12891:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3840,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:23","typeDescriptions":{}}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:23"},{"assignments":[3846],"declarations":[{"constant":false,"id":3846,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:23","nodeType":"VariableDeclaration","scope":3926,"src":"12945:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3845,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3866,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"12963:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3848,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"12969:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3856,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"13013:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3857,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"13021:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3855,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"12990:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3853,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:23","typeDescriptions":{}}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3860,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:23","typeDescriptions":{}}},"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:23"},{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"offset","nameLocation":"13133:6:23","nodeType":"VariableDeclaration","scope":3926,"src":"13125:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3874,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3869,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"13142:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"13142:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:23"},{"assignments":[3876],"declarations":[{"constant":false,"id":3876,"mutability":"mutable","name":"result","nameLocation":"13183:6:23","nodeType":"VariableDeclaration","scope":3926,"src":"13175:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3878,"initialValue":{"hexValue":"30","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:23"},{"body":{"id":3920,"nodeType":"Block","src":"13250:447:23","statements":[{"assignments":[3892],"declarations":[{"constant":false,"id":3892,"mutability":"mutable","name":"chr","nameLocation":"13270:3:23","nodeType":"VariableDeclaration","scope":3920,"src":"13264:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3891,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3902,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3897,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"13319:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"13327:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3896,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"13296:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3894,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:23","typeDescriptions":{}}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3893,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"13276:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3903,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"13349:3:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3910,"nodeType":"IfStatement","src":"13345:31:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3837,"id":3909,"nodeType":"Return","src":"13359:17:23"}},{"expression":{"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"13390:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3914,"nodeType":"ExpressionStatement","src":"13390:12:23"},{"id":3919,"nodeType":"UncheckedBlock","src":"13416:271:23","statements":[{"expression":{"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"13659:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3916,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"13669:3:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3918,"nodeType":"ExpressionStatement","src":"13659:13:23"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"13236:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3886,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"13240:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3921,"initializationExpression":{"assignments":[3880],"declarations":[{"constant":false,"id":3880,"mutability":"mutable","name":"i","nameLocation":"13216:1:23","nodeType":"VariableDeclaration","scope":3921,"src":"13208:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3884,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3881,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"13220:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3882,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"13228:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:23","subExpression":{"id":3888,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"13247:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3890,"nodeType":"ExpressionStatement","src":"13245:3:23"},"nodeType":"ForStatement","src":"13203:494:23"},{"expression":{"components":[{"hexValue":"74727565","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"13720:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3837,"id":3925,"nodeType":"Return","src":"13706:21:23"}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"12450:227:23","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3927,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:23","nodeType":"FunctionDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"input","nameLocation":"12746:5:23","nodeType":"VariableDeclaration","scope":3927,"src":"12732:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3826,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"begin","nameLocation":"12769:5:23","nodeType":"VariableDeclaration","scope":3927,"src":"12761:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"end","nameLocation":"12792:3:23","nodeType":"VariableDeclaration","scope":3927,"src":"12784:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:23"},"returnParameters":{"id":3837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"success","nameLocation":"12829:7:23","nodeType":"VariableDeclaration","scope":3927,"src":"12824:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3833,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"value","nameLocation":"12846:5:23","nodeType":"VariableDeclaration","scope":3927,"src":"12838:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:23"},"scope":4341,"src":"12682:1052:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3945,"nodeType":"Block","src":"14032:67:23","statements":[{"expression":{"arguments":[{"id":3936,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"14062:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3940,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"14078:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3938,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:23","typeDescriptions":{}}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:23","memberName":"length","nodeType":"MemberAccess","src":"14072:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3935,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3946,3977],"referencedDeclaration":3977,"src":"14049:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3934,"id":3944,"nodeType":"Return","src":"14042:50:23"}]},"documentation":{"id":3928,"nodeType":"StructuredDocumentation","src":"13740:212:23","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3946,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:23","nodeType":"FunctionDefinition","parameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"input","nameLocation":"13993:5:23","nodeType":"VariableDeclaration","scope":3946,"src":"13979:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3929,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:23"},"returnParameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3946,"src":"14023:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3932,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:23"},"scope":4341,"src":"13957:142:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3976,"nodeType":"Block","src":"14472:165:23","statements":[{"assignments":[3959,3961],"declarations":[{"constant":false,"id":3959,"mutability":"mutable","name":"success","nameLocation":"14488:7:23","nodeType":"VariableDeclaration","scope":3976,"src":"14483:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3958,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3961,"mutability":"mutable","name":"value","nameLocation":"14505:5:23","nodeType":"VariableDeclaration","scope":3976,"src":"14497:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3960,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3967,"initialValue":{"arguments":[{"id":3963,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"14530:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3964,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"14537:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3965,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"14544:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3962,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3998,4102],"referencedDeclaration":4102,"src":"14514:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:23"},{"condition":{"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:23","subExpression":{"id":3968,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"14563:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3973,"nodeType":"IfStatement","src":"14558:50:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3970,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"14579:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3972,"nodeType":"RevertStatement","src":"14572:36:23"}},{"expression":{"id":3974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"14625:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3957,"id":3975,"nodeType":"Return","src":"14618:12:23"}]},"documentation":{"id":3947,"nodeType":"StructuredDocumentation","src":"14105:259:23","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3977,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:23","nodeType":"FunctionDefinition","parameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3949,"mutability":"mutable","name":"input","nameLocation":"14405:5:23","nodeType":"VariableDeclaration","scope":3977,"src":"14391:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3948,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"begin","nameLocation":"14420:5:23","nodeType":"VariableDeclaration","scope":3977,"src":"14412:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"end","nameLocation":"14435:3:23","nodeType":"VariableDeclaration","scope":3977,"src":"14427:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:23"},"returnParameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3977,"src":"14463:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3955,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:23"},"scope":4341,"src":"14369:268:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3997,"nodeType":"Block","src":"14944:70:23","statements":[{"expression":{"arguments":[{"id":3988,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"14977:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3992,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"14993:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3990,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:23","typeDescriptions":{}}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:23","memberName":"length","nodeType":"MemberAccess","src":"14987:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3987,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3998,4102],"referencedDeclaration":4102,"src":"14961:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3986,"id":3996,"nodeType":"Return","src":"14954:53:23"}]},"documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"14643:198:23","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3998,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:23","nodeType":"FunctionDefinition","parameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"input","nameLocation":"14885:5:23","nodeType":"VariableDeclaration","scope":3998,"src":"14871:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3979,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:23"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"success","nameLocation":"14920:7:23","nodeType":"VariableDeclaration","scope":3998,"src":"14915:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3982,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"value","nameLocation":"14937:5:23","nodeType":"VariableDeclaration","scope":3998,"src":"14929:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3984,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:23"},"scope":4341,"src":"14846:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4101,"nodeType":"Block","src":"15407:733:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4012,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15421:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4015,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"15433:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4013,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:23","typeDescriptions":{}}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:23","memberName":"length","nodeType":"MemberAccess","src":"15427:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"15450:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4020,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15458:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4030,"nodeType":"IfStatement","src":"15417:72:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4024,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:23","typeDescriptions":{}}},"id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4011,"id":4029,"nodeType":"Return","src":"15463:26:23"}},{"assignments":[4032],"declarations":[{"constant":false,"id":4032,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:23","nodeType":"VariableDeclaration","scope":4101,"src":"15500:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4031,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4055,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15518:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"15524:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4044,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"15574:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4042,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:23","typeDescriptions":{}}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4046,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"15582:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4041,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"15545:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4039,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:23","typeDescriptions":{}}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4049,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:23","typeDescriptions":{}}},"id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:23"},{"assignments":[4057],"declarations":[{"constant":false,"id":4057,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:23","nodeType":"VariableDeclaration","scope":4101,"src":"15686:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4065,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4059,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"15716:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"15716:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4066,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15803:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4067,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"15809:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4069,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"15818:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4099,"nodeType":"Block","src":"16083:51:23","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4093,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:23","typeDescriptions":{}}},"id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4011,"id":4098,"nodeType":"Return","src":"16097:26:23"}]},"id":4100,"nodeType":"IfStatement","src":"15799:335:23","trueBody":{"id":4091,"nodeType":"Block","src":"15834:243:23","statements":[{"assignments":[4072,4074],"declarations":[{"constant":false,"id":4072,"mutability":"mutable","name":"s","nameLocation":"15955:1:23","nodeType":"VariableDeclaration","scope":4091,"src":"15950:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4071,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4074,"mutability":"mutable","name":"v","nameLocation":"15966:1:23","nodeType":"VariableDeclaration","scope":4091,"src":"15958:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4073,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4080,"initialValue":{"arguments":[{"id":4076,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"16003:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4077,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"16010:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4078,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"16017:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4075,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"15971:31:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:23"},{"expression":{"components":[{"id":4081,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"16043:1:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4086,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"16062:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4084,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:23","typeDescriptions":{}}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4082,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:23","typeDescriptions":{}}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4011,"id":4090,"nodeType":"Return","src":"16035:31:23"}]}}]},"documentation":{"id":3999,"nodeType":"StructuredDocumentation","src":"15020:226:23","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":4102,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:23","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4001,"mutability":"mutable","name":"input","nameLocation":"15299:5:23","nodeType":"VariableDeclaration","scope":4102,"src":"15285:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4000,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"begin","nameLocation":"15322:5:23","nodeType":"VariableDeclaration","scope":4102,"src":"15314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"end","nameLocation":"15345:3:23","nodeType":"VariableDeclaration","scope":4102,"src":"15337:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:23"},"returnParameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"success","nameLocation":"15383:7:23","nodeType":"VariableDeclaration","scope":4102,"src":"15378:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4007,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4010,"mutability":"mutable","name":"value","nameLocation":"15400:5:23","nodeType":"VariableDeclaration","scope":4102,"src":"15392:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4009,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:23"},"scope":4341,"src":"15251:889:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4161,"nodeType":"Block","src":"16209:461:23","statements":[{"assignments":[4110],"declarations":[{"constant":false,"id":4110,"mutability":"mutable","name":"value","nameLocation":"16225:5:23","nodeType":"VariableDeclaration","scope":4161,"src":"16219:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4109,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4115,"initialValue":{"arguments":[{"id":4113,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"16239:3:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4111,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:23","typeDescriptions":{}}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:23"},{"id":4158,"nodeType":"UncheckedBlock","src":"16403:238:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"16431:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:23","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"16445:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:23","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"16491:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"16505:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:23","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"16552:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"16566:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:23","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4150,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4149,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:23","memberName":"max","nodeType":"MemberAccess","src":"16615:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4108,"id":4154,"nodeType":"Return","src":"16608:22:23"},"id":4155,"nodeType":"IfStatement","src":"16548:82:23","trueBody":{"expression":{"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"16578:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:23","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4148,"nodeType":"ExpressionStatement","src":"16578:11:23"}},"id":4156,"nodeType":"IfStatement","src":"16487:143:23","trueBody":{"expression":{"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"16518:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:23","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4137,"nodeType":"ExpressionStatement","src":"16518:11:23"}},"id":4157,"nodeType":"IfStatement","src":"16427:203:23","trueBody":{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"16457:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4126,"nodeType":"ExpressionStatement","src":"16457:11:23"}}]},{"expression":{"id":4159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"16658:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4108,"id":4160,"nodeType":"Return","src":"16651:12:23"}]},"id":4162,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:23","nodeType":"FunctionDefinition","parameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"chr","nameLocation":"16175:3:23","nodeType":"VariableDeclaration","scope":4162,"src":"16168:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4103,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:23"},"returnParameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4162,"src":"16202:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4106,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:23"},"scope":4341,"src":"16146:524:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4327,"nodeType":"Block","src":"17336:1331:23","statements":[{"assignments":[4171],"declarations":[{"constant":false,"id":4171,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:23","nodeType":"VariableDeclaration","scope":4327,"src":"17346:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4170,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4176,"initialValue":{"arguments":[{"id":4174,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"17374:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4172,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:23","typeDescriptions":{}}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:23"},{"assignments":[4178],"declarations":[{"constant":false,"id":4178,"mutability":"mutable","name":"output","nameLocation":"17403:6:23","nodeType":"VariableDeclaration","scope":4327,"src":"17390:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4177,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4186,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4182,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"17426:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:23","memberName":"length","nodeType":"MemberAccess","src":"17426:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4179,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:23"},{"assignments":[4188],"declarations":[{"constant":false,"id":4188,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:23","nodeType":"VariableDeclaration","scope":4327,"src":"17473:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4190,"initialValue":{"hexValue":"30","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:23"},{"body":{"id":4319,"nodeType":"Block","src":"17548:854:23","statements":[{"assignments":[4202],"declarations":[{"constant":false,"id":4202,"mutability":"mutable","name":"char","nameLocation":"17569:4:23","nodeType":"VariableDeclaration","scope":4319,"src":"17562:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4201,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4210,"initialValue":{"arguments":[{"arguments":[{"id":4206,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"17606:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"17614:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4205,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"17583:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4203,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:23","typeDescriptions":{}}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:23"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4211,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"17637:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":4215,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"17672:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4213,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:23","typeDescriptions":{}}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4317,"nodeType":"Block","src":"18330:62:23","statements":[{"expression":{"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4310,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"18348:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4313,"indexExpression":{"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:23","subExpression":{"id":4311,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"18355:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4314,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"18373:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4316,"nodeType":"ExpressionStatement","src":"18348:29:23"}]},"id":4318,"nodeType":"IfStatement","src":"17631:761:23","trueBody":{"id":4309,"nodeType":"Block","src":"17687:637:23","statements":[{"expression":{"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4224,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"17705:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4227,"indexExpression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:23","subExpression":{"id":4225,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"17712:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4230,"nodeType":"ExpressionStatement","src":"17705:29:23"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4231,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"17756:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"17825:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:23","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"17894:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"17963:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:23","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"18032:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:23","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"18101:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:23","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4291,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"18171:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:23","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4302,"nodeType":"IfStatement","src":"18167:143:23","trueBody":{"id":4301,"nodeType":"Block","src":"18185:125:23","statements":[{"expression":{"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4294,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"18263:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4297,"indexExpression":{"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:23","subExpression":{"id":4295,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"18270:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4300,"nodeType":"ExpressionStatement","src":"18263:28:23"}]}},"id":4303,"nodeType":"IfStatement","src":"18097:213:23","trueBody":{"expression":{"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4284,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"18115:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4287,"indexExpression":{"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:23","subExpression":{"id":4285,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"18122:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4290,"nodeType":"ExpressionStatement","src":"18115:29:23"}},"id":4304,"nodeType":"IfStatement","src":"18028:282:23","trueBody":{"expression":{"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4274,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"18046:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4277,"indexExpression":{"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:23","subExpression":{"id":4275,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"18053:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4280,"nodeType":"ExpressionStatement","src":"18046:28:23"}},"id":4305,"nodeType":"IfStatement","src":"17959:351:23","trueBody":{"expression":{"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4264,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"17977:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4267,"indexExpression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:23","subExpression":{"id":4265,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"17984:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4270,"nodeType":"ExpressionStatement","src":"17977:28:23"}},"id":4306,"nodeType":"IfStatement","src":"17890:420:23","trueBody":{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4254,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"17908:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4257,"indexExpression":{"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:23","subExpression":{"id":4255,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"17915:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4260,"nodeType":"ExpressionStatement","src":"17908:28:23"}},"id":4307,"nodeType":"IfStatement","src":"17821:489:23","trueBody":{"expression":{"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4244,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"17839:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4247,"indexExpression":{"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:23","subExpression":{"id":4245,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"17846:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4250,"nodeType":"ExpressionStatement","src":"17839:28:23"}},"id":4308,"nodeType":"IfStatement","src":"17752:558:23","trueBody":{"expression":{"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4234,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"17770:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4237,"indexExpression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:23","subExpression":{"id":4235,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"17777:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4240,"nodeType":"ExpressionStatement","src":"17770:28:23"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"17524:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4195,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"17528:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:23","memberName":"length","nodeType":"MemberAccess","src":"17528:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4320,"initializationExpression":{"assignments":[4192],"declarations":[{"constant":false,"id":4192,"mutability":"mutable","name":"i","nameLocation":"17521:1:23","nodeType":"VariableDeclaration","scope":4320,"src":"17513:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4193,"nodeType":"VariableDeclarationStatement","src":"17513:9:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:23","subExpression":{"id":4198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"17545:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4200,"nodeType":"ExpressionStatement","src":"17543:3:23"},"nodeType":"ForStatement","src":"17508:894:23"},{"AST":{"nativeSrc":"18500:129:23","nodeType":"YulBlock","src":"18500:129:23","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:23","nodeType":"YulIdentifier","src":"18521:6:23"},{"name":"outputLength","nativeSrc":"18529:12:23","nodeType":"YulIdentifier","src":"18529:12:23"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:23","nodeType":"YulIdentifier","src":"18514:6:23"},"nativeSrc":"18514:28:23","nodeType":"YulFunctionCall","src":"18514:28:23"},"nativeSrc":"18514:28:23","nodeType":"YulExpressionStatement","src":"18514:28:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:23","nodeType":"YulLiteral","src":"18562:4:23","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:23","nodeType":"YulIdentifier","src":"18572:6:23"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:23","nodeType":"YulLiteral","src":"18584:1:23","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:23","nodeType":"YulLiteral","src":"18591:1:23","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:23","nodeType":"YulIdentifier","src":"18598:12:23"},{"kind":"number","nativeSrc":"18612:2:23","nodeType":"YulLiteral","src":"18612:2:23","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:23","nodeType":"YulIdentifier","src":"18594:3:23"},"nativeSrc":"18594:21:23","nodeType":"YulFunctionCall","src":"18594:21:23"}],"functionName":{"name":"shr","nativeSrc":"18587:3:23","nodeType":"YulIdentifier","src":"18587:3:23"},"nativeSrc":"18587:29:23","nodeType":"YulFunctionCall","src":"18587:29:23"}],"functionName":{"name":"shl","nativeSrc":"18580:3:23","nodeType":"YulIdentifier","src":"18580:3:23"},"nativeSrc":"18580:37:23","nodeType":"YulFunctionCall","src":"18580:37:23"}],"functionName":{"name":"add","nativeSrc":"18568:3:23","nodeType":"YulIdentifier","src":"18568:3:23"},"nativeSrc":"18568:50:23","nodeType":"YulFunctionCall","src":"18568:50:23"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:23","nodeType":"YulIdentifier","src":"18555:6:23"},"nativeSrc":"18555:64:23","nodeType":"YulFunctionCall","src":"18555:64:23"},"nativeSrc":"18555:64:23","nodeType":"YulExpressionStatement","src":"18555:64:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":4178,"isOffset":false,"isSlot":false,"src":"18521:6:23","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"18572:6:23","valueSize":1},{"declaration":4188,"isOffset":false,"isSlot":false,"src":"18529:12:23","valueSize":1},{"declaration":4188,"isOffset":false,"isSlot":false,"src":"18598:12:23","valueSize":1}],"flags":["memory-safe"],"id":4321,"nodeType":"InlineAssembly","src":"18475:154:23"},{"expression":{"arguments":[{"id":4324,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"18653:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4322,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:23","typeDescriptions":{}}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4169,"id":4326,"nodeType":"Return","src":"18639:21:23"}]},"documentation":{"id":4163,"nodeType":"StructuredDocumentation","src":"16676:576:23","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":4328,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:23","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"input","nameLocation":"17291:5:23","nodeType":"VariableDeclaration","scope":4328,"src":"17277:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4164,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:23"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4328,"src":"17321:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4167,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:23"},"scope":4341,"src":"17257:1410:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4339,"nodeType":"Block","src":"19052:225:23","statements":[{"AST":{"nativeSrc":"19201:70:23","nodeType":"YulBlock","src":"19201:70:23","statements":[{"nativeSrc":"19215:46:23","nodeType":"YulAssignment","src":"19215:46:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:23","nodeType":"YulIdentifier","src":"19238:6:23"},{"kind":"number","nativeSrc":"19246:4:23","nodeType":"YulLiteral","src":"19246:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:23","nodeType":"YulIdentifier","src":"19234:3:23"},"nativeSrc":"19234:17:23","nodeType":"YulFunctionCall","src":"19234:17:23"},{"name":"offset","nativeSrc":"19253:6:23","nodeType":"YulIdentifier","src":"19253:6:23"}],"functionName":{"name":"add","nativeSrc":"19230:3:23","nodeType":"YulIdentifier","src":"19230:3:23"},"nativeSrc":"19230:30:23","nodeType":"YulFunctionCall","src":"19230:30:23"}],"functionName":{"name":"mload","nativeSrc":"19224:5:23","nodeType":"YulIdentifier","src":"19224:5:23"},"nativeSrc":"19224:37:23","nodeType":"YulFunctionCall","src":"19224:37:23"},"variableNames":[{"name":"value","nativeSrc":"19215:5:23","nodeType":"YulIdentifier","src":"19215:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4331,"isOffset":false,"isSlot":false,"src":"19238:6:23","valueSize":1},{"declaration":4333,"isOffset":false,"isSlot":false,"src":"19253:6:23","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"19215:5:23","valueSize":1}],"flags":["memory-safe"],"id":4338,"nodeType":"InlineAssembly","src":"19176:95:23"}]},"documentation":{"id":4329,"nodeType":"StructuredDocumentation","src":"18673:268:23","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4340,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:23","nodeType":"FunctionDefinition","parameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:23","nodeType":"VariableDeclaration","scope":4340,"src":"18978:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4330,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"offset","nameLocation":"19007:6:23","nodeType":"VariableDeclaration","scope":4340,"src":"18999:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:23"},"returnParameters":{"id":4337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4336,"mutability":"mutable","name":"value","nameLocation":"19045:5:23","nodeType":"VariableDeclaration","scope":4340,"src":"19037:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:23"},"scope":4341,"src":"18946:331:23","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4342,"src":"297:18982:23","usedErrors":[2999,3002,3005],"usedEvents":[]}],"src":"101:19179:23"},"id":23},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4689]},"id":4690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4343,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4344,"nodeType":"StructuredDocumentation","src":"138:205:24","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4689,"linearizedBaseContracts":[4689],"name":"ECDSA","nameLocation":"352:5:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4349,"members":[{"id":4345,"name":"NoError","nameLocation":"392:7:24","nodeType":"EnumValue","src":"392:7:24"},{"id":4346,"name":"InvalidSignature","nameLocation":"409:16:24","nodeType":"EnumValue","src":"409:16:24"},{"id":4347,"name":"InvalidSignatureLength","nameLocation":"435:22:24","nodeType":"EnumValue","src":"435:22:24"},{"id":4348,"name":"InvalidSignatureS","nameLocation":"467:17:24","nodeType":"EnumValue","src":"467:17:24"}],"name":"RecoverError","nameLocation":"369:12:24","nodeType":"EnumDefinition","src":"364:126:24"},{"documentation":{"id":4350,"nodeType":"StructuredDocumentation","src":"496:63:24","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":4352,"name":"ECDSAInvalidSignature","nameLocation":"570:21:24","nodeType":"ErrorDefinition","parameters":{"id":4351,"nodeType":"ParameterList","parameters":[],"src":"591:2:24"},"src":"564:30:24"},{"documentation":{"id":4353,"nodeType":"StructuredDocumentation","src":"600:60:24","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":4357,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:24","nodeType":"ErrorDefinition","parameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"length","nameLocation":"707:6:24","nodeType":"VariableDeclaration","scope":4357,"src":"699:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4354,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:24"},"src":"665:50:24"},{"documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"721:85:24","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":4362,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:24","nodeType":"ErrorDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"s","nameLocation":"848:1:24","nodeType":"VariableDeclaration","scope":4362,"src":"840:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:24"},"src":"811:40:24"},{"body":{"id":4414,"nodeType":"Block","src":"2285:622:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4377,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2299:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:24","memberName":"length","nodeType":"MemberAccess","src":"2299:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:24","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4412,"nodeType":"Block","src":"2793:108:24","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4399,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:24","typeDescriptions":{}}},"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4403,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"2827:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4349_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:24","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4347,"src":"2827:35:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":4407,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2872:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:24","memberName":"length","nodeType":"MemberAccess","src":"2872:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:24","typeDescriptions":{}}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4376,"id":4411,"nodeType":"Return","src":"2807:83:24"}]},"id":4413,"nodeType":"IfStatement","src":"2295:606:24","trueBody":{"id":4398,"nodeType":"Block","src":"2323:464:24","statements":[{"assignments":[4382],"declarations":[{"constant":false,"id":4382,"mutability":"mutable","name":"r","nameLocation":"2345:1:24","nodeType":"VariableDeclaration","scope":4398,"src":"2337:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4383,"nodeType":"VariableDeclarationStatement","src":"2337:9:24"},{"assignments":[4385],"declarations":[{"constant":false,"id":4385,"mutability":"mutable","name":"s","nameLocation":"2368:1:24","nodeType":"VariableDeclaration","scope":4398,"src":"2360:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4386,"nodeType":"VariableDeclarationStatement","src":"2360:9:24"},{"assignments":[4388],"declarations":[{"constant":false,"id":4388,"mutability":"mutable","name":"v","nameLocation":"2389:1:24","nodeType":"VariableDeclaration","scope":4398,"src":"2383:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4387,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4389,"nodeType":"VariableDeclarationStatement","src":"2383:7:24"},{"AST":{"nativeSrc":"2560:171:24","nodeType":"YulBlock","src":"2560:171:24","statements":[{"nativeSrc":"2578:32:24","nodeType":"YulAssignment","src":"2578:32:24","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:24","nodeType":"YulIdentifier","src":"2593:9:24"},{"kind":"number","nativeSrc":"2604:4:24","nodeType":"YulLiteral","src":"2604:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:24","nodeType":"YulIdentifier","src":"2589:3:24"},"nativeSrc":"2589:20:24","nodeType":"YulFunctionCall","src":"2589:20:24"}],"functionName":{"name":"mload","nativeSrc":"2583:5:24","nodeType":"YulIdentifier","src":"2583:5:24"},"nativeSrc":"2583:27:24","nodeType":"YulFunctionCall","src":"2583:27:24"},"variableNames":[{"name":"r","nativeSrc":"2578:1:24","nodeType":"YulIdentifier","src":"2578:1:24"}]},{"nativeSrc":"2627:32:24","nodeType":"YulAssignment","src":"2627:32:24","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:24","nodeType":"YulIdentifier","src":"2642:9:24"},{"kind":"number","nativeSrc":"2653:4:24","nodeType":"YulLiteral","src":"2653:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:24","nodeType":"YulIdentifier","src":"2638:3:24"},"nativeSrc":"2638:20:24","nodeType":"YulFunctionCall","src":"2638:20:24"}],"functionName":{"name":"mload","nativeSrc":"2632:5:24","nodeType":"YulIdentifier","src":"2632:5:24"},"nativeSrc":"2632:27:24","nodeType":"YulFunctionCall","src":"2632:27:24"},"variableNames":[{"name":"s","nativeSrc":"2627:1:24","nodeType":"YulIdentifier","src":"2627:1:24"}]},{"nativeSrc":"2676:41:24","nodeType":"YulAssignment","src":"2676:41:24","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:24","nodeType":"YulLiteral","src":"2686:1:24","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:24","nodeType":"YulIdentifier","src":"2699:9:24"},{"kind":"number","nativeSrc":"2710:4:24","nodeType":"YulLiteral","src":"2710:4:24","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:24","nodeType":"YulIdentifier","src":"2695:3:24"},"nativeSrc":"2695:20:24","nodeType":"YulFunctionCall","src":"2695:20:24"}],"functionName":{"name":"mload","nativeSrc":"2689:5:24","nodeType":"YulIdentifier","src":"2689:5:24"},"nativeSrc":"2689:27:24","nodeType":"YulFunctionCall","src":"2689:27:24"}],"functionName":{"name":"byte","nativeSrc":"2681:4:24","nodeType":"YulIdentifier","src":"2681:4:24"},"nativeSrc":"2681:36:24","nodeType":"YulFunctionCall","src":"2681:36:24"},"variableNames":[{"name":"v","nativeSrc":"2676:1:24","nodeType":"YulIdentifier","src":"2676:1:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4382,"isOffset":false,"isSlot":false,"src":"2578:1:24","valueSize":1},{"declaration":4385,"isOffset":false,"isSlot":false,"src":"2627:1:24","valueSize":1},{"declaration":4367,"isOffset":false,"isSlot":false,"src":"2593:9:24","valueSize":1},{"declaration":4367,"isOffset":false,"isSlot":false,"src":"2642:9:24","valueSize":1},{"declaration":4367,"isOffset":false,"isSlot":false,"src":"2699:9:24","valueSize":1},{"declaration":4388,"isOffset":false,"isSlot":false,"src":"2676:1:24","valueSize":1}],"flags":["memory-safe"],"id":4390,"nodeType":"InlineAssembly","src":"2535:196:24"},{"expression":{"arguments":[{"id":4392,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"2762:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4393,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"2768:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4394,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"2771:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4395,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"2774:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4391,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4415,4495,4603],"referencedDeclaration":4603,"src":"2751:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4376,"id":4397,"nodeType":"Return","src":"2744:32:24"}]}}]},"documentation":{"id":4363,"nodeType":"StructuredDocumentation","src":"857:1267:24","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":4415,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:24","nodeType":"FunctionDefinition","parameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"hash","nameLocation":"2166:4:24","nodeType":"VariableDeclaration","scope":4415,"src":"2158:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4367,"mutability":"mutable","name":"signature","nameLocation":"2193:9:24","nodeType":"VariableDeclaration","scope":4415,"src":"2180:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4366,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:24"},"returnParameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:24","nodeType":"VariableDeclaration","scope":4415,"src":"2232:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4369,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4373,"mutability":"mutable","name":"err","nameLocation":"2264:3:24","nodeType":"VariableDeclaration","scope":4415,"src":"2251:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4372,"nodeType":"UserDefinedTypeName","pathNode":{"id":4371,"name":"RecoverError","nameLocations":["2251:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":4349,"src":"2251:12:24"},"referencedDeclaration":4349,"src":"2251:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4375,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:24","nodeType":"VariableDeclaration","scope":4415,"src":"2269:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:24"},"scope":4689,"src":"2129:778:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4444,"nodeType":"Block","src":"3801:168:24","statements":[{"assignments":[4426,4429,4431],"declarations":[{"constant":false,"id":4426,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:24","nodeType":"VariableDeclaration","scope":4444,"src":"3812:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4425,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4429,"mutability":"mutable","name":"error","nameLocation":"3844:5:24","nodeType":"VariableDeclaration","scope":4444,"src":"3831:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4428,"nodeType":"UserDefinedTypeName","pathNode":{"id":4427,"name":"RecoverError","nameLocations":["3831:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":4349,"src":"3831:12:24"},"referencedDeclaration":4349,"src":"3831:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4431,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:24","nodeType":"VariableDeclaration","scope":4444,"src":"3851:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4436,"initialValue":{"arguments":[{"id":4433,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"3882:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4434,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"3888:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4432,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4415,4495,4603],"referencedDeclaration":4415,"src":"3871:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:24"},{"expression":{"arguments":[{"id":4438,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"3920:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},{"id":4439,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"3927:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4437,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"3908:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4349_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4441,"nodeType":"ExpressionStatement","src":"3908:28:24"},{"expression":{"id":4442,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"3953:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4424,"id":4443,"nodeType":"Return","src":"3946:16:24"}]},"documentation":{"id":4416,"nodeType":"StructuredDocumentation","src":"2913:796:24","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":4445,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:24","nodeType":"FunctionDefinition","parameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"hash","nameLocation":"3739:4:24","nodeType":"VariableDeclaration","scope":4445,"src":"3731:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4420,"mutability":"mutable","name":"signature","nameLocation":"3758:9:24","nodeType":"VariableDeclaration","scope":4445,"src":"3745:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4419,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:24"},"returnParameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4445,"src":"3792:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4422,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:24"},"scope":4689,"src":"3714:255:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4494,"nodeType":"Block","src":"4348:342:24","statements":[{"id":4493,"nodeType":"UncheckedBlock","src":"4358:326:24","statements":[{"assignments":[4463],"declarations":[{"constant":false,"id":4463,"mutability":"mutable","name":"s","nameLocation":"4390:1:24","nodeType":"VariableDeclaration","scope":4493,"src":"4382:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4470,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4464,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"4394:2:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:24","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:24","typeDescriptions":{}}},"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:24"},{"assignments":[4472],"declarations":[{"constant":false,"id":4472,"mutability":"mutable","name":"v","nameLocation":"4591:1:24","nodeType":"VariableDeclaration","scope":4493,"src":"4585:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4471,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4485,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4477,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"4610:2:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:24","typeDescriptions":{}}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:24","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4473,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:24","typeDescriptions":{}}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:24"},{"expression":{"arguments":[{"id":4487,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"4659:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4488,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"4665:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4489,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"4668:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4490,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"4671:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4486,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4415,4495,4603],"referencedDeclaration":4603,"src":"4648:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4461,"id":4492,"nodeType":"Return","src":"4641:32:24"}]}]},"documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"3975:205:24","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":4495,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:24","nodeType":"FunctionDefinition","parameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"hash","nameLocation":"4222:4:24","nodeType":"VariableDeclaration","scope":4495,"src":"4214:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4450,"mutability":"mutable","name":"r","nameLocation":"4244:1:24","nodeType":"VariableDeclaration","scope":4495,"src":"4236:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4452,"mutability":"mutable","name":"vs","nameLocation":"4263:2:24","nodeType":"VariableDeclaration","scope":4495,"src":"4255:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:24"},"returnParameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:24","nodeType":"VariableDeclaration","scope":4495,"src":"4295:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4454,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4458,"mutability":"mutable","name":"err","nameLocation":"4327:3:24","nodeType":"VariableDeclaration","scope":4495,"src":"4314:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4457,"nodeType":"UserDefinedTypeName","pathNode":{"id":4456,"name":"RecoverError","nameLocations":["4314:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":4349,"src":"4314:12:24"},"referencedDeclaration":4349,"src":"4314:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4460,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:24","nodeType":"VariableDeclaration","scope":4495,"src":"4332:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:24"},"scope":4689,"src":"4185:505:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4527,"nodeType":"Block","src":"4903:164:24","statements":[{"assignments":[4508,4511,4513],"declarations":[{"constant":false,"id":4508,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:24","nodeType":"VariableDeclaration","scope":4527,"src":"4914:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4507,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4511,"mutability":"mutable","name":"error","nameLocation":"4946:5:24","nodeType":"VariableDeclaration","scope":4527,"src":"4933:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4510,"nodeType":"UserDefinedTypeName","pathNode":{"id":4509,"name":"RecoverError","nameLocations":["4933:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":4349,"src":"4933:12:24"},"referencedDeclaration":4349,"src":"4933:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4513,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:24","nodeType":"VariableDeclaration","scope":4527,"src":"4953:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4519,"initialValue":{"arguments":[{"id":4515,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"4984:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4516,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"4990:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4517,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"4993:2:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4514,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4415,4495,4603],"referencedDeclaration":4495,"src":"4973:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:24"},{"expression":{"arguments":[{"id":4521,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"5018:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},{"id":4522,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"5025:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4520,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"5006:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4349_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4524,"nodeType":"ExpressionStatement","src":"5006:28:24"},{"expression":{"id":4525,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"5051:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4506,"id":4526,"nodeType":"Return","src":"5044:16:24"}]},"documentation":{"id":4496,"nodeType":"StructuredDocumentation","src":"4696:116:24","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":4528,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:24","nodeType":"FunctionDefinition","parameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"hash","nameLocation":"4842:4:24","nodeType":"VariableDeclaration","scope":4528,"src":"4834:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"r","nameLocation":"4856:1:24","nodeType":"VariableDeclaration","scope":4528,"src":"4848:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4502,"mutability":"mutable","name":"vs","nameLocation":"4867:2:24","nodeType":"VariableDeclaration","scope":4528,"src":"4859:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:24"},"returnParameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4528,"src":"4894:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4504,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:24"},"scope":4689,"src":"4817:250:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4602,"nodeType":"Block","src":"5382:1372:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4549,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"6278:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:24","typeDescriptions":{}}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:24","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4563,"nodeType":"IfStatement","src":"6266:164:24","trueBody":{"id":4562,"nodeType":"Block","src":"6351:79:24","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4553,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:24","typeDescriptions":{}}},"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4557,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"6385:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4349_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:24","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4348,"src":"6385:30:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},{"id":4559,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"6417:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4546,"id":4561,"nodeType":"Return","src":"6365:54:24"}]}},{"assignments":[4565],"declarations":[{"constant":false,"id":4565,"mutability":"mutable","name":"signer","nameLocation":"6532:6:24","nodeType":"VariableDeclaration","scope":4602,"src":"6524:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4564,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4572,"initialValue":{"arguments":[{"id":4567,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"6551:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4568,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"6557:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4569,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"6560:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4570,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"6563:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4566,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:24","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"6579:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4574,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:24","typeDescriptions":{}}},"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4592,"nodeType":"IfStatement","src":"6575:113:24","trueBody":{"id":4591,"nodeType":"Block","src":"6601:87:24","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4579,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:24","typeDescriptions":{}}},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4583,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"6635:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4349_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:24","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4346,"src":"6635:29:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:24","typeDescriptions":{}}},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4546,"id":4590,"nodeType":"Return","src":"6615:62:24"}]}},{"expression":{"components":[{"id":4593,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"6706:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4594,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"6714:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4349_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:24","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4345,"src":"6714:20:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:24","typeDescriptions":{}}},"id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4546,"id":4601,"nodeType":"Return","src":"6698:49:24"}]},"documentation":{"id":4529,"nodeType":"StructuredDocumentation","src":"5073:125:24","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4603,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:24","nodeType":"FunctionDefinition","parameters":{"id":4538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"hash","nameLocation":"5240:4:24","nodeType":"VariableDeclaration","scope":4603,"src":"5232:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"v","nameLocation":"5260:1:24","nodeType":"VariableDeclaration","scope":4603,"src":"5254:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4532,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"r","nameLocation":"5279:1:24","nodeType":"VariableDeclaration","scope":4603,"src":"5271:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"s","nameLocation":"5298:1:24","nodeType":"VariableDeclaration","scope":4603,"src":"5290:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:24"},"returnParameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:24","nodeType":"VariableDeclaration","scope":4603,"src":"5329:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4539,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4543,"mutability":"mutable","name":"err","nameLocation":"5361:3:24","nodeType":"VariableDeclaration","scope":4603,"src":"5348:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4542,"nodeType":"UserDefinedTypeName","pathNode":{"id":4541,"name":"RecoverError","nameLocations":["5348:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":4349,"src":"5348:12:24"},"referencedDeclaration":4349,"src":"5348:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4545,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:24","nodeType":"VariableDeclaration","scope":4603,"src":"5366:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:24"},"scope":4689,"src":"5203:1551:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4638,"nodeType":"Block","src":"6981:166:24","statements":[{"assignments":[4618,4621,4623],"declarations":[{"constant":false,"id":4618,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:24","nodeType":"VariableDeclaration","scope":4638,"src":"6992:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4617,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4621,"mutability":"mutable","name":"error","nameLocation":"7024:5:24","nodeType":"VariableDeclaration","scope":4638,"src":"7011:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4620,"nodeType":"UserDefinedTypeName","pathNode":{"id":4619,"name":"RecoverError","nameLocations":["7011:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":4349,"src":"7011:12:24"},"referencedDeclaration":4349,"src":"7011:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4623,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:24","nodeType":"VariableDeclaration","scope":4638,"src":"7031:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4630,"initialValue":{"arguments":[{"id":4625,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"7062:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4626,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"7068:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4627,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"7071:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4628,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"7074:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4624,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4415,4495,4603],"referencedDeclaration":4603,"src":"7051:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4349_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:24"},{"expression":{"arguments":[{"id":4632,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"7098:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},{"id":4633,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"7105:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4631,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"7086:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4349_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4635,"nodeType":"ExpressionStatement","src":"7086:28:24"},{"expression":{"id":4636,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"7131:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4616,"id":4637,"nodeType":"Return","src":"7124:16:24"}]},"documentation":{"id":4604,"nodeType":"StructuredDocumentation","src":"6760:122:24","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4639,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:24","nodeType":"FunctionDefinition","parameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"hash","nameLocation":"6912:4:24","nodeType":"VariableDeclaration","scope":4639,"src":"6904:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"v","nameLocation":"6924:1:24","nodeType":"VariableDeclaration","scope":4639,"src":"6918:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4607,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"r","nameLocation":"6935:1:24","nodeType":"VariableDeclaration","scope":4639,"src":"6927:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"s","nameLocation":"6946:1:24","nodeType":"VariableDeclaration","scope":4639,"src":"6938:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:24"},"returnParameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4639,"src":"6972:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4614,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:24"},"scope":4689,"src":"6887:260:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4687,"nodeType":"Block","src":"7352:460:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"7366:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4649,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"7375:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4349_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:24","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4345,"src":"7375:20:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4654,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"7462:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4655,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"7471:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4349_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:24","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4346,"src":"7471:29:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4662,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"7567:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4663,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"7576:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4349_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:24","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4347,"src":"7576:35:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4674,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"7701:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4675,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"7710:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4349_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:24","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4348,"src":"7710:30:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4683,"nodeType":"IfStatement","src":"7697:109:24","trueBody":{"id":4682,"nodeType":"Block","src":"7742:64:24","statements":[{"errorCall":{"arguments":[{"id":4679,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"7786:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4678,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"7763:22:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4681,"nodeType":"RevertStatement","src":"7756:39:24"}]}},"id":4684,"nodeType":"IfStatement","src":"7563:243:24","trueBody":{"id":4673,"nodeType":"Block","src":"7613:78:24","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4669,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"7670:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4667,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:24","typeDescriptions":{}}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4666,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"7634:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4672,"nodeType":"RevertStatement","src":"7627:53:24"}]}},"id":4685,"nodeType":"IfStatement","src":"7458:348:24","trueBody":{"id":4661,"nodeType":"Block","src":"7502:55:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4658,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"7523:21:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4660,"nodeType":"RevertStatement","src":"7516:30:24"}]}},"id":4686,"nodeType":"IfStatement","src":"7362:444:24","trueBody":{"id":4653,"nodeType":"Block","src":"7397:55:24","statements":[{"functionReturnParameters":4647,"id":4652,"nodeType":"Return","src":"7411:7:24"}]}}]},"documentation":{"id":4640,"nodeType":"StructuredDocumentation","src":"7153:122:24","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4688,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:24","nodeType":"FunctionDefinition","parameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4643,"mutability":"mutable","name":"error","nameLocation":"7314:5:24","nodeType":"VariableDeclaration","scope":4688,"src":"7301:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4642,"nodeType":"UserDefinedTypeName","pathNode":{"id":4641,"name":"RecoverError","nameLocations":["7301:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":4349,"src":"7301:12:24"},"referencedDeclaration":4349,"src":"7301:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4349","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:24","nodeType":"VariableDeclaration","scope":4688,"src":"7321:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:24"},"returnParameters":{"id":4647,"nodeType":"ParameterList","parameters":[],"src":"7352:0:24"},"scope":4689,"src":"7280:532:24","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4690,"src":"344:7470:24","usedErrors":[4352,4357,4362],"usedEvents":[]}],"src":"112:7703:24"},"id":24},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4916],"IERC5267":[1408],"MessageHashUtils":[5002],"ShortString":[2604],"ShortStrings":[2815]},"id":4917,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4691,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":4693,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4917,"sourceUnit":5003,"src":"139:56:25","symbolAliases":[{"foreign":{"id":4692,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"147:16:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":4696,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4917,"sourceUnit":2816,"src":"196:62:25","symbolAliases":[{"foreign":{"id":4694,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"204:12:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4695,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"218:11:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":4698,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4917,"sourceUnit":1409,"src":"259:55:25","symbolAliases":[{"foreign":{"id":4697,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"267:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4700,"name":"IERC5267","nameLocations":["1988:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":1408,"src":"1988:8:25"},"id":4701,"nodeType":"InheritanceSpecifier","src":"1988:8:25"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4699,"nodeType":"StructuredDocumentation","src":"316:1643:25","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4916,"linearizedBaseContracts":[4916,1408],"name":"EIP712","nameLocation":"1978:6:25","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4703,"libraryName":{"id":4702,"name":"ShortStrings","nameLocations":["2009:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":2815,"src":"2009:12:25"},"nodeType":"UsingForDirective","src":"2003:25:25"},{"constant":true,"id":4708,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:25","nodeType":"VariableDeclaration","scope":4916,"src":"2034:140:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4705,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4710,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:25","nodeType":"VariableDeclaration","scope":4916,"src":"2373:48:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4712,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:25","nodeType":"VariableDeclaration","scope":4916,"src":"2427:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4714,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:25","nodeType":"VariableDeclaration","scope":4916,"src":"2473:37:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4713,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4716,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:25","nodeType":"VariableDeclaration","scope":4916,"src":"2517:37:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4718,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:25","nodeType":"VariableDeclaration","scope":4916,"src":"2560:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4721,"mutability":"immutable","name":"_name","nameLocation":"2637:5:25","nodeType":"VariableDeclaration","scope":4916,"src":"2607:35:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"},"typeName":{"id":4720,"nodeType":"UserDefinedTypeName","pathNode":{"id":4719,"name":"ShortString","nameLocations":["2607:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":2604,"src":"2607:11:25"},"referencedDeclaration":2604,"src":"2607:11:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4724,"mutability":"immutable","name":"_version","nameLocation":"2678:8:25","nodeType":"VariableDeclaration","scope":4916,"src":"2648:38:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"},"typeName":{"id":4723,"nodeType":"UserDefinedTypeName","pathNode":{"id":4722,"name":"ShortString","nameLocations":["2648:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":2604,"src":"2648:11:25"},"referencedDeclaration":2604,"src":"2648:11:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4726,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:25","nodeType":"VariableDeclaration","scope":4916,"src":"2742:28:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4725,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4728,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:25","nodeType":"VariableDeclaration","scope":4916,"src":"2826:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4727,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4785,"nodeType":"Block","src":"3483:376:25","statements":[{"expression":{"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4736,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"3493:5:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4739,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"3532:13:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4737,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"3501:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:25","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"3501:30:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2604_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"src":"3493:53:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"id":4742,"nodeType":"ExpressionStatement","src":"3493:53:25"},{"expression":{"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4743,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"3556:8:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4746,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"3601:16:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4744,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"3567:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:25","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"3567:33:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2604_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"src":"3556:62:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"id":4749,"nodeType":"ExpressionStatement","src":"3556:62:25"},{"expression":{"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4750,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"3628:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4754,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"3658:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4752,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:25","typeDescriptions":{}}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4751,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4758,"nodeType":"ExpressionStatement","src":"3628:36:25"},{"expression":{"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4759,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"3674:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4763,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"3707:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4761,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:25","typeDescriptions":{}}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4760,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4767,"nodeType":"ExpressionStatement","src":"3674:42:25"},{"expression":{"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4768,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"3727:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4769,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4772,"nodeType":"ExpressionStatement","src":"3727:30:25"},{"expression":{"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4773,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"3767:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4774,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"3792:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4777,"nodeType":"ExpressionStatement","src":"3767:48:25"},{"expression":{"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4778,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"3825:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4916","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4916","typeString":"contract EIP712"}],"id":4780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4779,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:25","typeDescriptions":{}}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4784,"nodeType":"ExpressionStatement","src":"3825:27:25"}]},"documentation":{"id":4729,"nodeType":"StructuredDocumentation","src":"2864:559:25","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4786,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"name","nameLocation":"3454:4:25","nodeType":"VariableDeclaration","scope":4786,"src":"3440:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4730,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4733,"mutability":"mutable","name":"version","nameLocation":"3474:7:25","nodeType":"VariableDeclaration","scope":4786,"src":"3460:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4732,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:25"},"returnParameters":{"id":4735,"nodeType":"ParameterList","parameters":[],"src":"3483:0:25"},"scope":4916,"src":"3428:431:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4811,"nodeType":"Block","src":"4007:200:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4794,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4916","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4916","typeString":"contract EIP712"}],"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4792,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:25","typeDescriptions":{}}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4796,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"4038:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4798,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4800,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"4070:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4809,"nodeType":"Block","src":"4146:55:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4806,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"4167:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4791,"id":4808,"nodeType":"Return","src":"4160:30:25"}]},"id":4810,"nodeType":"IfStatement","src":"4017:184:25","trueBody":{"id":4805,"nodeType":"Block","src":"4086:54:25","statements":[{"expression":{"id":4803,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"4107:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4791,"id":4804,"nodeType":"Return","src":"4100:29:25"}]}}]},"documentation":{"id":4787,"nodeType":"StructuredDocumentation","src":"3865:75:25","text":" @dev Returns the domain separator for the current chain."},"id":4812,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:25","nodeType":"FunctionDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[],"src":"3972:2:25"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4812,"src":"3998:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:25"},"scope":4916,"src":"3945:262:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4832,"nodeType":"Block","src":"4277:115:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":4820,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"4315:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4821,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"4326:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4822,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"4339:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4823,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4827,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4916","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4916","typeString":"contract EIP712"}],"id":4826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4825,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:25","typeDescriptions":{}}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4818,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:25","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:25","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4817,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4816,"id":4831,"nodeType":"Return","src":"4287:98:25"}]},"id":4833,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:25","nodeType":"FunctionDefinition","parameters":{"id":4813,"nodeType":"ParameterList","parameters":[],"src":"4243:2:25"},"returnParameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4833,"src":"4268:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:25"},"scope":4916,"src":"4213:179:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4848,"nodeType":"Block","src":"5103:90:25","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4843,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"5153:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4845,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"5175:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4841,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"5120:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$5002_$","typeString":"type(library MessageHashUtils)"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:25","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":5001,"src":"5120:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4840,"id":4847,"nodeType":"Return","src":"5113:73:25"}]},"documentation":{"id":4834,"nodeType":"StructuredDocumentation","src":"4398:614:25","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4849,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:25","nodeType":"FunctionDefinition","parameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:25","nodeType":"VariableDeclaration","scope":4849,"src":"5043:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:25"},"returnParameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4849,"src":"5094:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:25"},"scope":4916,"src":"5017:176:25","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1407],"body":{"id":4890,"nodeType":"Block","src":"5556:229:25","statements":[{"expression":{"components":[{"hexValue":"0f","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4869,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"5617:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4871,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"5644:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4873,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4877,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4916","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4916","typeString":"contract EIP712"}],"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4875,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:25","typeDescriptions":{}}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:25","typeDescriptions":{}}},"id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4883,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4884,"nodeType":"ArrayTypeName","src":"5756:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4867,"id":4889,"nodeType":"Return","src":"5566:212:25"}]},"documentation":{"id":4850,"nodeType":"StructuredDocumentation","src":"5199:24:25","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":4891,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:25","nodeType":"FunctionDefinition","parameters":{"id":4851,"nodeType":"ParameterList","parameters":[],"src":"5249:2:25"},"returnParameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"fields","nameLocation":"5333:6:25","nodeType":"VariableDeclaration","scope":4891,"src":"5326:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4852,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4855,"mutability":"mutable","name":"name","nameLocation":"5367:4:25","nodeType":"VariableDeclaration","scope":4891,"src":"5353:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4854,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4857,"mutability":"mutable","name":"version","nameLocation":"5399:7:25","nodeType":"VariableDeclaration","scope":4891,"src":"5385:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4856,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4859,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:25","nodeType":"VariableDeclaration","scope":4891,"src":"5420:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4858,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4861,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:25","nodeType":"VariableDeclaration","scope":4891,"src":"5449:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4860,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4863,"mutability":"mutable","name":"salt","nameLocation":"5496:4:25","nodeType":"VariableDeclaration","scope":4891,"src":"5488:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4866,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:25","nodeType":"VariableDeclaration","scope":4891,"src":"5514:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4865,"nodeType":"ArrayTypeName","src":"5514:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:25"},"scope":4916,"src":"5228:557:25","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4902,"nodeType":"Block","src":"6166:65:25","statements":[{"expression":{"arguments":[{"id":4899,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"6210:13:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4897,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"6183:5:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:25","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2783,"src":"6183:26:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2604_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2604_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4896,"id":4901,"nodeType":"Return","src":"6176:48:25"}]},"documentation":{"id":4892,"nodeType":"StructuredDocumentation","src":"5791:256:25","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4903,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:25","nodeType":"FunctionDefinition","parameters":{"id":4893,"nodeType":"ParameterList","parameters":[],"src":"6125:2:25"},"returnParameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4903,"src":"6151:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4894,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:25"},"scope":4916,"src":"6105:126:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4914,"nodeType":"Block","src":"6621:71:25","statements":[{"expression":{"arguments":[{"id":4911,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"6668:16:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4909,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"6638:8:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2604","typeString":"ShortString"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:25","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2783,"src":"6638:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2604_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2604_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4908,"id":4913,"nodeType":"Return","src":"6631:54:25"}]},"documentation":{"id":4904,"nodeType":"StructuredDocumentation","src":"6237:262:25","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4915,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:25","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[],"src":"6580:2:25"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4915,"src":"6606:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4906,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:25"},"scope":4916,"src":"6557:135:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4917,"src":"1960:4734:25","usedErrors":[2612,2614],"usedEvents":[1388]}],"src":"113:6582:25"},"id":25},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[5002],"Strings":[4341]},"id":5003,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4918,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5003,"sourceUnit":4342,"src":"149:39:26","symbolAliases":[{"foreign":{"id":4919,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"157:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4921,"nodeType":"StructuredDocumentation","src":"190:330:26","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":5002,"linearizedBaseContracts":[5002],"name":"MessageHashUtils","nameLocation":"529:16:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":4930,"nodeType":"Block","src":"1339:341:26","statements":[{"AST":{"nativeSrc":"1374:300:26","nodeType":"YulBlock","src":"1374:300:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:26","nodeType":"YulLiteral","src":"1395:4:26","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:26","nodeType":"YulLiteral","src":"1401:34:26","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:26","nodeType":"YulIdentifier","src":"1388:6:26"},"nativeSrc":"1388:48:26","nodeType":"YulFunctionCall","src":"1388:48:26"},"nativeSrc":"1388:48:26","nodeType":"YulExpressionStatement","src":"1388:48:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:26","nodeType":"YulLiteral","src":"1497:4:26","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:26","nodeType":"YulIdentifier","src":"1503:11:26"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:26","nodeType":"YulIdentifier","src":"1490:6:26"},"nativeSrc":"1490:25:26","nodeType":"YulFunctionCall","src":"1490:25:26"},"nativeSrc":"1490:25:26","nodeType":"YulExpressionStatement","src":"1490:25:26"},{"nativeSrc":"1569:31:26","nodeType":"YulAssignment","src":"1569:31:26","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:26","nodeType":"YulLiteral","src":"1589:4:26","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:26","nodeType":"YulLiteral","src":"1595:4:26","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:26","nodeType":"YulIdentifier","src":"1579:9:26"},"nativeSrc":"1579:21:26","nodeType":"YulFunctionCall","src":"1579:21:26"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:26","nodeType":"YulIdentifier","src":"1569:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4927,"isOffset":false,"isSlot":false,"src":"1569:6:26","valueSize":1},{"declaration":4924,"isOffset":false,"isSlot":false,"src":"1503:11:26","valueSize":1}],"flags":["memory-safe"],"id":4929,"nodeType":"InlineAssembly","src":"1349:325:26"}]},"documentation":{"id":4922,"nodeType":"StructuredDocumentation","src":"552:690:26","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4931,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:26","nodeType":"FunctionDefinition","parameters":{"id":4925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:26","nodeType":"VariableDeclaration","scope":4931,"src":"1279:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:26"},"returnParameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"mutability":"mutable","name":"digest","nameLocation":"1331:6:26","nodeType":"VariableDeclaration","scope":4931,"src":"1323:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:26"},"scope":5002,"src":"1247:433:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4956,"nodeType":"Block","src":"2257:143:26","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4948,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"2366:7:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:26","memberName":"length","nodeType":"MemberAccess","src":"2366:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4946,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"2349:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4341_$","typeString":"type(library Strings)"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:26","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3053,"src":"2349:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4944,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:26","typeDescriptions":{}}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4952,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"2384:7:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4940,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:26","typeDescriptions":{}}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:26","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:26","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4939,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4938,"id":4955,"nodeType":"Return","src":"2267:126:26"}]},"documentation":{"id":4932,"nodeType":"StructuredDocumentation","src":"1686:480:26","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4957,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:26","nodeType":"FunctionDefinition","parameters":{"id":4935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"message","nameLocation":"2216:7:26","nodeType":"VariableDeclaration","scope":4957,"src":"2203:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4933,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:26"},"returnParameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4957,"src":"2248:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:26"},"scope":5002,"src":"2171:229:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4976,"nodeType":"Block","src":"2854:80:26","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4971,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"2910:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4972,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"2921:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4968,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4967,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4966,"id":4975,"nodeType":"Return","src":"2864:63:26"}]},"documentation":{"id":4958,"nodeType":"StructuredDocumentation","src":"2406:332:26","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4977,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:26","nodeType":"FunctionDefinition","parameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4960,"mutability":"mutable","name":"validator","nameLocation":"2792:9:26","nodeType":"VariableDeclaration","scope":4977,"src":"2784:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4959,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4962,"mutability":"mutable","name":"data","nameLocation":"2816:4:26","nodeType":"VariableDeclaration","scope":4977,"src":"2803:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4961,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:26"},"returnParameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4977,"src":"2845:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:26"},"scope":5002,"src":"2743:191:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4988,"nodeType":"Block","src":"3216:216:26","statements":[{"AST":{"nativeSrc":"3251:175:26","nodeType":"YulBlock","src":"3251:175:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:26","nodeType":"YulLiteral","src":"3272:4:26","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:26","nodeType":"YulLiteral","src":"3278:10:26","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:26","nodeType":"YulIdentifier","src":"3265:6:26"},"nativeSrc":"3265:24:26","nodeType":"YulFunctionCall","src":"3265:24:26"},"nativeSrc":"3265:24:26","nodeType":"YulExpressionStatement","src":"3265:24:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:26","nodeType":"YulLiteral","src":"3309:4:26","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:26","nodeType":"YulLiteral","src":"3319:2:26","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:26","nodeType":"YulIdentifier","src":"3323:9:26"}],"functionName":{"name":"shl","nativeSrc":"3315:3:26","nodeType":"YulIdentifier","src":"3315:3:26"},"nativeSrc":"3315:18:26","nodeType":"YulFunctionCall","src":"3315:18:26"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:26","nodeType":"YulIdentifier","src":"3302:6:26"},"nativeSrc":"3302:32:26","nodeType":"YulFunctionCall","src":"3302:32:26"},"nativeSrc":"3302:32:26","nodeType":"YulExpressionStatement","src":"3302:32:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:26","nodeType":"YulLiteral","src":"3354:4:26","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:26","nodeType":"YulIdentifier","src":"3360:11:26"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:26","nodeType":"YulIdentifier","src":"3347:6:26"},"nativeSrc":"3347:25:26","nodeType":"YulFunctionCall","src":"3347:25:26"},"nativeSrc":"3347:25:26","nodeType":"YulExpressionStatement","src":"3347:25:26"},{"nativeSrc":"3385:31:26","nodeType":"YulAssignment","src":"3385:31:26","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:26","nodeType":"YulLiteral","src":"3405:4:26","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:26","nodeType":"YulLiteral","src":"3411:4:26","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:26","nodeType":"YulIdentifier","src":"3395:9:26"},"nativeSrc":"3395:21:26","nodeType":"YulFunctionCall","src":"3395:21:26"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:26","nodeType":"YulIdentifier","src":"3385:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4985,"isOffset":false,"isSlot":false,"src":"3385:6:26","valueSize":1},{"declaration":4982,"isOffset":false,"isSlot":false,"src":"3360:11:26","valueSize":1},{"declaration":4980,"isOffset":false,"isSlot":false,"src":"3323:9:26","valueSize":1}],"flags":["memory-safe"],"id":4987,"nodeType":"InlineAssembly","src":"3226:200:26"}]},"documentation":{"id":4978,"nodeType":"StructuredDocumentation","src":"2940:129:26","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4989,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:26","nodeType":"FunctionDefinition","parameters":{"id":4983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"validator","nameLocation":"3132:9:26","nodeType":"VariableDeclaration","scope":4989,"src":"3124:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4979,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4982,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:26","nodeType":"VariableDeclaration","scope":4989,"src":"3151:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:26"},"returnParameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"digest","nameLocation":"3208:6:26","nodeType":"VariableDeclaration","scope":4989,"src":"3200:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:26"},"scope":5002,"src":"3074:358:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5000,"nodeType":"Block","src":"3983:265:26","statements":[{"AST":{"nativeSrc":"4018:224:26","nodeType":"YulBlock","src":"4018:224:26","statements":[{"nativeSrc":"4032:22:26","nodeType":"YulVariableDeclaration","src":"4032:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:26","nodeType":"YulLiteral","src":"4049:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:26","nodeType":"YulIdentifier","src":"4043:5:26"},"nativeSrc":"4043:11:26","nodeType":"YulFunctionCall","src":"4043:11:26"},"variables":[{"name":"ptr","nativeSrc":"4036:3:26","nodeType":"YulTypedName","src":"4036:3:26","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:26","nodeType":"YulIdentifier","src":"4074:3:26"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:26","nodeType":"YulLiteral","src":"4079:10:26","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:26","nodeType":"YulIdentifier","src":"4067:6:26"},"nativeSrc":"4067:23:26","nodeType":"YulFunctionCall","src":"4067:23:26"},"nativeSrc":"4067:23:26","nodeType":"YulExpressionStatement","src":"4067:23:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:26","nodeType":"YulIdentifier","src":"4114:3:26"},{"kind":"number","nativeSrc":"4119:4:26","nodeType":"YulLiteral","src":"4119:4:26","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:26","nodeType":"YulIdentifier","src":"4110:3:26"},"nativeSrc":"4110:14:26","nodeType":"YulFunctionCall","src":"4110:14:26"},{"name":"domainSeparator","nativeSrc":"4126:15:26","nodeType":"YulIdentifier","src":"4126:15:26"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:26","nodeType":"YulIdentifier","src":"4103:6:26"},"nativeSrc":"4103:39:26","nodeType":"YulFunctionCall","src":"4103:39:26"},"nativeSrc":"4103:39:26","nodeType":"YulExpressionStatement","src":"4103:39:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:26","nodeType":"YulIdentifier","src":"4166:3:26"},{"kind":"number","nativeSrc":"4171:4:26","nodeType":"YulLiteral","src":"4171:4:26","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:26","nodeType":"YulIdentifier","src":"4162:3:26"},"nativeSrc":"4162:14:26","nodeType":"YulFunctionCall","src":"4162:14:26"},{"name":"structHash","nativeSrc":"4178:10:26","nodeType":"YulIdentifier","src":"4178:10:26"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:26","nodeType":"YulIdentifier","src":"4155:6:26"},"nativeSrc":"4155:34:26","nodeType":"YulFunctionCall","src":"4155:34:26"},"nativeSrc":"4155:34:26","nodeType":"YulExpressionStatement","src":"4155:34:26"},{"nativeSrc":"4202:30:26","nodeType":"YulAssignment","src":"4202:30:26","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:26","nodeType":"YulIdentifier","src":"4222:3:26"},{"kind":"number","nativeSrc":"4227:4:26","nodeType":"YulLiteral","src":"4227:4:26","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:26","nodeType":"YulIdentifier","src":"4212:9:26"},"nativeSrc":"4212:20:26","nodeType":"YulFunctionCall","src":"4212:20:26"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:26","nodeType":"YulIdentifier","src":"4202:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4997,"isOffset":false,"isSlot":false,"src":"4202:6:26","valueSize":1},{"declaration":4992,"isOffset":false,"isSlot":false,"src":"4126:15:26","valueSize":1},{"declaration":4994,"isOffset":false,"isSlot":false,"src":"4178:10:26","valueSize":1}],"flags":["memory-safe"],"id":4999,"nodeType":"InlineAssembly","src":"3993:249:26"}]},"documentation":{"id":4990,"nodeType":"StructuredDocumentation","src":"3438:431:26","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":5001,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:26","nodeType":"FunctionDefinition","parameters":{"id":4995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:26","nodeType":"VariableDeclaration","scope":5001,"src":"3899:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4994,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:26","nodeType":"VariableDeclaration","scope":5001,"src":"3924:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:26"},"returnParameters":{"id":4998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4997,"mutability":"mutable","name":"digest","nameLocation":"3975:6:26","nodeType":"VariableDeclaration","scope":5001,"src":"3967:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:26"},"scope":5002,"src":"3874:374:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5003,"src":"521:3729:26","usedErrors":[],"usedEvents":[]}],"src":"123:4128:26"},"id":26},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5014]},"id":5015,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5004,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5005,"nodeType":"StructuredDocumentation","src":"142:280:27","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5014,"linearizedBaseContracts":[5014],"name":"IERC165","nameLocation":"433:7:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5006,"nodeType":"StructuredDocumentation","src":"447:340:27","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5013,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:27","nodeType":"FunctionDefinition","parameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:27","nodeType":"VariableDeclaration","scope":5013,"src":"819:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5007,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:27"},"returnParameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5013,"src":"862:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5010,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:27"},"scope":5014,"src":"792:76:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5015,"src":"423:447:27","usedErrors":[],"usedEvents":[]}],"src":"115:756:27"},"id":27},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6635],"Panic":[2598],"SafeCast":[8400]},"id":6636,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5016,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5018,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6636,"sourceUnit":2599,"src":"129:35:28","symbolAliases":[{"foreign":{"id":5017,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"137:5:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5020,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6636,"sourceUnit":8401,"src":"165:40:28","symbolAliases":[{"foreign":{"id":5019,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"173:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5021,"nodeType":"StructuredDocumentation","src":"207:73:28","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6635,"linearizedBaseContracts":[6635],"name":"Math","nameLocation":"289:4:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5026,"members":[{"id":5022,"name":"Floor","nameLocation":"324:5:28","nodeType":"EnumValue","src":"324:5:28"},{"id":5023,"name":"Ceil","nameLocation":"367:4:28","nodeType":"EnumValue","src":"367:4:28"},{"id":5024,"name":"Trunc","nameLocation":"409:5:28","nodeType":"EnumValue","src":"409:5:28"},{"id":5025,"name":"Expand","nameLocation":"439:6:28","nodeType":"EnumValue","src":"439:6:28"}],"name":"Rounding","nameLocation":"305:8:28","nodeType":"EnumDefinition","src":"300:169:28"},{"body":{"id":5039,"nodeType":"Block","src":"731:112:28","statements":[{"AST":{"nativeSrc":"766:71:28","nodeType":"YulBlock","src":"766:71:28","statements":[{"nativeSrc":"780:16:28","nodeType":"YulAssignment","src":"780:16:28","value":{"arguments":[{"name":"a","nativeSrc":"791:1:28","nodeType":"YulIdentifier","src":"791:1:28"},{"name":"b","nativeSrc":"794:1:28","nodeType":"YulIdentifier","src":"794:1:28"}],"functionName":{"name":"add","nativeSrc":"787:3:28","nodeType":"YulIdentifier","src":"787:3:28"},"nativeSrc":"787:9:28","nodeType":"YulFunctionCall","src":"787:9:28"},"variableNames":[{"name":"low","nativeSrc":"780:3:28","nodeType":"YulIdentifier","src":"780:3:28"}]},{"nativeSrc":"809:18:28","nodeType":"YulAssignment","src":"809:18:28","value":{"arguments":[{"name":"low","nativeSrc":"820:3:28","nodeType":"YulIdentifier","src":"820:3:28"},{"name":"a","nativeSrc":"825:1:28","nodeType":"YulIdentifier","src":"825:1:28"}],"functionName":{"name":"lt","nativeSrc":"817:2:28","nodeType":"YulIdentifier","src":"817:2:28"},"nativeSrc":"817:10:28","nodeType":"YulFunctionCall","src":"817:10:28"},"variableNames":[{"name":"high","nativeSrc":"809:4:28","nodeType":"YulIdentifier","src":"809:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5029,"isOffset":false,"isSlot":false,"src":"791:1:28","valueSize":1},{"declaration":5029,"isOffset":false,"isSlot":false,"src":"825:1:28","valueSize":1},{"declaration":5031,"isOffset":false,"isSlot":false,"src":"794:1:28","valueSize":1},{"declaration":5034,"isOffset":false,"isSlot":false,"src":"809:4:28","valueSize":1},{"declaration":5036,"isOffset":false,"isSlot":false,"src":"780:3:28","valueSize":1},{"declaration":5036,"isOffset":false,"isSlot":false,"src":"820:3:28","valueSize":1}],"flags":["memory-safe"],"id":5038,"nodeType":"InlineAssembly","src":"741:96:28"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"475:163:28","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":5040,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:28","nodeType":"FunctionDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"a","nameLocation":"667:1:28","nodeType":"VariableDeclaration","scope":5040,"src":"659:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5031,"mutability":"mutable","name":"b","nameLocation":"678:1:28","nodeType":"VariableDeclaration","scope":5040,"src":"670:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5030,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:28"},"returnParameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"high","nameLocation":"712:4:28","nodeType":"VariableDeclaration","scope":5040,"src":"704:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5036,"mutability":"mutable","name":"low","nameLocation":"726:3:28","nodeType":"VariableDeclaration","scope":5040,"src":"718:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:28"},"scope":6635,"src":"643:200:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5053,"nodeType":"Block","src":"1115:462:28","statements":[{"AST":{"nativeSrc":"1437:134:28","nodeType":"YulBlock","src":"1437:134:28","statements":[{"nativeSrc":"1451:30:28","nodeType":"YulVariableDeclaration","src":"1451:30:28","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:28","nodeType":"YulIdentifier","src":"1468:1:28"},{"name":"b","nativeSrc":"1471:1:28","nodeType":"YulIdentifier","src":"1471:1:28"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:28","nodeType":"YulLiteral","src":"1478:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:28","nodeType":"YulIdentifier","src":"1474:3:28"},"nativeSrc":"1474:6:28","nodeType":"YulFunctionCall","src":"1474:6:28"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:28","nodeType":"YulIdentifier","src":"1461:6:28"},"nativeSrc":"1461:20:28","nodeType":"YulFunctionCall","src":"1461:20:28"},"variables":[{"name":"mm","nativeSrc":"1455:2:28","nodeType":"YulTypedName","src":"1455:2:28","type":""}]},{"nativeSrc":"1494:16:28","nodeType":"YulAssignment","src":"1494:16:28","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:28","nodeType":"YulIdentifier","src":"1505:1:28"},{"name":"b","nativeSrc":"1508:1:28","nodeType":"YulIdentifier","src":"1508:1:28"}],"functionName":{"name":"mul","nativeSrc":"1501:3:28","nodeType":"YulIdentifier","src":"1501:3:28"},"nativeSrc":"1501:9:28","nodeType":"YulFunctionCall","src":"1501:9:28"},"variableNames":[{"name":"low","nativeSrc":"1494:3:28","nodeType":"YulIdentifier","src":"1494:3:28"}]},{"nativeSrc":"1523:38:28","nodeType":"YulAssignment","src":"1523:38:28","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:28","nodeType":"YulIdentifier","src":"1539:2:28"},{"name":"low","nativeSrc":"1543:3:28","nodeType":"YulIdentifier","src":"1543:3:28"}],"functionName":{"name":"sub","nativeSrc":"1535:3:28","nodeType":"YulIdentifier","src":"1535:3:28"},"nativeSrc":"1535:12:28","nodeType":"YulFunctionCall","src":"1535:12:28"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:28","nodeType":"YulIdentifier","src":"1552:2:28"},{"name":"low","nativeSrc":"1556:3:28","nodeType":"YulIdentifier","src":"1556:3:28"}],"functionName":{"name":"lt","nativeSrc":"1549:2:28","nodeType":"YulIdentifier","src":"1549:2:28"},"nativeSrc":"1549:11:28","nodeType":"YulFunctionCall","src":"1549:11:28"}],"functionName":{"name":"sub","nativeSrc":"1531:3:28","nodeType":"YulIdentifier","src":"1531:3:28"},"nativeSrc":"1531:30:28","nodeType":"YulFunctionCall","src":"1531:30:28"},"variableNames":[{"name":"high","nativeSrc":"1523:4:28","nodeType":"YulIdentifier","src":"1523:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5043,"isOffset":false,"isSlot":false,"src":"1468:1:28","valueSize":1},{"declaration":5043,"isOffset":false,"isSlot":false,"src":"1505:1:28","valueSize":1},{"declaration":5045,"isOffset":false,"isSlot":false,"src":"1471:1:28","valueSize":1},{"declaration":5045,"isOffset":false,"isSlot":false,"src":"1508:1:28","valueSize":1},{"declaration":5048,"isOffset":false,"isSlot":false,"src":"1523:4:28","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":false,"src":"1494:3:28","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":false,"src":"1543:3:28","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":false,"src":"1556:3:28","valueSize":1}],"flags":["memory-safe"],"id":5052,"nodeType":"InlineAssembly","src":"1412:159:28"}]},"documentation":{"id":5041,"nodeType":"StructuredDocumentation","src":"849:173:28","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":5054,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:28","nodeType":"FunctionDefinition","parameters":{"id":5046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"a","nameLocation":"1051:1:28","nodeType":"VariableDeclaration","scope":5054,"src":"1043:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5045,"mutability":"mutable","name":"b","nameLocation":"1062:1:28","nodeType":"VariableDeclaration","scope":5054,"src":"1054:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:28"},"returnParameters":{"id":5051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"high","nameLocation":"1096:4:28","nodeType":"VariableDeclaration","scope":5054,"src":"1088:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5050,"mutability":"mutable","name":"low","nameLocation":"1110:3:28","nodeType":"VariableDeclaration","scope":5054,"src":"1102:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:28"},"scope":6635,"src":"1027:550:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5088,"nodeType":"Block","src":"1784:149:28","statements":[{"id":5087,"nodeType":"UncheckedBlock","src":"1794:133:28","statements":[{"assignments":[5067],"declarations":[{"constant":false,"id":5067,"mutability":"mutable","name":"c","nameLocation":"1826:1:28","nodeType":"VariableDeclaration","scope":5087,"src":"1818:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5071,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"1830:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5069,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"1834:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:28"},{"expression":{"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5072,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"1849:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"1859:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"1864:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5077,"nodeType":"ExpressionStatement","src":"1849:16:28"},{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"1879:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5079,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"1888:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5082,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"1908:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5080,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"1892:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"1892:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5086,"nodeType":"ExpressionStatement","src":"1879:37:28"}]}]},"documentation":{"id":5055,"nodeType":"StructuredDocumentation","src":"1583:105:28","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":5089,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:28","nodeType":"FunctionDefinition","parameters":{"id":5060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"a","nameLocation":"1717:1:28","nodeType":"VariableDeclaration","scope":5089,"src":"1709:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5059,"mutability":"mutable","name":"b","nameLocation":"1728:1:28","nodeType":"VariableDeclaration","scope":5089,"src":"1720:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:28"},"returnParameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5062,"mutability":"mutable","name":"success","nameLocation":"1759:7:28","nodeType":"VariableDeclaration","scope":5089,"src":"1754:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5061,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5064,"mutability":"mutable","name":"result","nameLocation":"1776:6:28","nodeType":"VariableDeclaration","scope":5089,"src":"1768:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:28"},"scope":6635,"src":"1693:240:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5123,"nodeType":"Block","src":"2143:149:28","statements":[{"id":5122,"nodeType":"UncheckedBlock","src":"2153:133:28","statements":[{"assignments":[5102],"declarations":[{"constant":false,"id":5102,"mutability":"mutable","name":"c","nameLocation":"2185:1:28","nodeType":"VariableDeclaration","scope":5122,"src":"2177:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5106,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"2189:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"2193:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:28"},{"expression":{"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5107,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"2208:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5108,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"2218:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"2223:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5112,"nodeType":"ExpressionStatement","src":"2208:16:28"},{"expression":{"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"2238:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5114,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"2247:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5117,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"2267:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5115,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"2251:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"2251:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5121,"nodeType":"ExpressionStatement","src":"2238:37:28"}]}]},"documentation":{"id":5090,"nodeType":"StructuredDocumentation","src":"1939:108:28","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":5124,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:28","nodeType":"FunctionDefinition","parameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"a","nameLocation":"2076:1:28","nodeType":"VariableDeclaration","scope":5124,"src":"2068:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5094,"mutability":"mutable","name":"b","nameLocation":"2087:1:28","nodeType":"VariableDeclaration","scope":5124,"src":"2079:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:28"},"returnParameters":{"id":5100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"success","nameLocation":"2118:7:28","nodeType":"VariableDeclaration","scope":5124,"src":"2113:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5096,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5099,"mutability":"mutable","name":"result","nameLocation":"2135:6:28","nodeType":"VariableDeclaration","scope":5124,"src":"2127:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:28"},"scope":6635,"src":"2052:240:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5153,"nodeType":"Block","src":"2505:391:28","statements":[{"id":5152,"nodeType":"UncheckedBlock","src":"2515:375:28","statements":[{"assignments":[5137],"declarations":[{"constant":false,"id":5137,"mutability":"mutable","name":"c","nameLocation":"2547:1:28","nodeType":"VariableDeclaration","scope":5152,"src":"2539:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5141,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"2551:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"2555:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:28"},{"AST":{"nativeSrc":"2595:188:28","nodeType":"YulBlock","src":"2595:188:28","statements":[{"nativeSrc":"2727:42:28","nodeType":"YulAssignment","src":"2727:42:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:28","nodeType":"YulIdentifier","src":"2748:1:28"},{"name":"a","nativeSrc":"2751:1:28","nodeType":"YulIdentifier","src":"2751:1:28"}],"functionName":{"name":"div","nativeSrc":"2744:3:28","nodeType":"YulIdentifier","src":"2744:3:28"},"nativeSrc":"2744:9:28","nodeType":"YulFunctionCall","src":"2744:9:28"},{"name":"b","nativeSrc":"2755:1:28","nodeType":"YulIdentifier","src":"2755:1:28"}],"functionName":{"name":"eq","nativeSrc":"2741:2:28","nodeType":"YulIdentifier","src":"2741:2:28"},"nativeSrc":"2741:16:28","nodeType":"YulFunctionCall","src":"2741:16:28"},{"arguments":[{"name":"a","nativeSrc":"2766:1:28","nodeType":"YulIdentifier","src":"2766:1:28"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:28","nodeType":"YulIdentifier","src":"2759:6:28"},"nativeSrc":"2759:9:28","nodeType":"YulFunctionCall","src":"2759:9:28"}],"functionName":{"name":"or","nativeSrc":"2738:2:28","nodeType":"YulIdentifier","src":"2738:2:28"},"nativeSrc":"2738:31:28","nodeType":"YulFunctionCall","src":"2738:31:28"},"variableNames":[{"name":"success","nativeSrc":"2727:7:28","nodeType":"YulIdentifier","src":"2727:7:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5127,"isOffset":false,"isSlot":false,"src":"2751:1:28","valueSize":1},{"declaration":5127,"isOffset":false,"isSlot":false,"src":"2766:1:28","valueSize":1},{"declaration":5129,"isOffset":false,"isSlot":false,"src":"2755:1:28","valueSize":1},{"declaration":5137,"isOffset":false,"isSlot":false,"src":"2748:1:28","valueSize":1},{"declaration":5132,"isOffset":false,"isSlot":false,"src":"2727:7:28","valueSize":1}],"flags":["memory-safe"],"id":5142,"nodeType":"InlineAssembly","src":"2570:213:28"},{"expression":{"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"2842:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5144,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"2851:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"2871:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5145,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"2855:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"2855:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5151,"nodeType":"ExpressionStatement","src":"2842:37:28"}]}]},"documentation":{"id":5125,"nodeType":"StructuredDocumentation","src":"2298:111:28","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":5154,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:28","nodeType":"FunctionDefinition","parameters":{"id":5130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"a","nameLocation":"2438:1:28","nodeType":"VariableDeclaration","scope":5154,"src":"2430:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5129,"mutability":"mutable","name":"b","nameLocation":"2449:1:28","nodeType":"VariableDeclaration","scope":5154,"src":"2441:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:28"},"returnParameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5132,"mutability":"mutable","name":"success","nameLocation":"2480:7:28","nodeType":"VariableDeclaration","scope":5154,"src":"2475:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5131,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5134,"mutability":"mutable","name":"result","nameLocation":"2497:6:28","nodeType":"VariableDeclaration","scope":5154,"src":"2489:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:28"},"scope":6635,"src":"2414:482:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"3111:231:28","statements":[{"id":5173,"nodeType":"UncheckedBlock","src":"3121:215:28","statements":[{"expression":{"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5166,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"3145:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3155:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5171,"nodeType":"ExpressionStatement","src":"3145:15:28"},{"AST":{"nativeSrc":"3199:127:28","nodeType":"YulBlock","src":"3199:127:28","statements":[{"nativeSrc":"3293:19:28","nodeType":"YulAssignment","src":"3293:19:28","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:28","nodeType":"YulIdentifier","src":"3307:1:28"},{"name":"b","nativeSrc":"3310:1:28","nodeType":"YulIdentifier","src":"3310:1:28"}],"functionName":{"name":"div","nativeSrc":"3303:3:28","nodeType":"YulIdentifier","src":"3303:3:28"},"nativeSrc":"3303:9:28","nodeType":"YulFunctionCall","src":"3303:9:28"},"variableNames":[{"name":"result","nativeSrc":"3293:6:28","nodeType":"YulIdentifier","src":"3293:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5157,"isOffset":false,"isSlot":false,"src":"3307:1:28","valueSize":1},{"declaration":5159,"isOffset":false,"isSlot":false,"src":"3310:1:28","valueSize":1},{"declaration":5164,"isOffset":false,"isSlot":false,"src":"3293:6:28","valueSize":1}],"flags":["memory-safe"],"id":5172,"nodeType":"InlineAssembly","src":"3174:152:28"}]}]},"documentation":{"id":5155,"nodeType":"StructuredDocumentation","src":"2902:113:28","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:28","nodeType":"FunctionDefinition","parameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"mutability":"mutable","name":"a","nameLocation":"3044:1:28","nodeType":"VariableDeclaration","scope":5175,"src":"3036:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5159,"mutability":"mutable","name":"b","nameLocation":"3055:1:28","nodeType":"VariableDeclaration","scope":5175,"src":"3047:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:28"},"returnParameters":{"id":5165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5162,"mutability":"mutable","name":"success","nameLocation":"3086:7:28","nodeType":"VariableDeclaration","scope":5175,"src":"3081:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5161,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5164,"mutability":"mutable","name":"result","nameLocation":"3103:6:28","nodeType":"VariableDeclaration","scope":5175,"src":"3095:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:28"},"scope":6635,"src":"3020:322:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5195,"nodeType":"Block","src":"3567:231:28","statements":[{"id":5194,"nodeType":"UncheckedBlock","src":"3577:215:28","statements":[{"expression":{"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5187,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"3601:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5188,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"3611:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5192,"nodeType":"ExpressionStatement","src":"3601:15:28"},{"AST":{"nativeSrc":"3655:127:28","nodeType":"YulBlock","src":"3655:127:28","statements":[{"nativeSrc":"3749:19:28","nodeType":"YulAssignment","src":"3749:19:28","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:28","nodeType":"YulIdentifier","src":"3763:1:28"},{"name":"b","nativeSrc":"3766:1:28","nodeType":"YulIdentifier","src":"3766:1:28"}],"functionName":{"name":"mod","nativeSrc":"3759:3:28","nodeType":"YulIdentifier","src":"3759:3:28"},"nativeSrc":"3759:9:28","nodeType":"YulFunctionCall","src":"3759:9:28"},"variableNames":[{"name":"result","nativeSrc":"3749:6:28","nodeType":"YulIdentifier","src":"3749:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5178,"isOffset":false,"isSlot":false,"src":"3763:1:28","valueSize":1},{"declaration":5180,"isOffset":false,"isSlot":false,"src":"3766:1:28","valueSize":1},{"declaration":5185,"isOffset":false,"isSlot":false,"src":"3749:6:28","valueSize":1}],"flags":["memory-safe"],"id":5193,"nodeType":"InlineAssembly","src":"3630:152:28"}]}]},"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"3348:123:28","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5196,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:28","nodeType":"FunctionDefinition","parameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"a","nameLocation":"3500:1:28","nodeType":"VariableDeclaration","scope":5196,"src":"3492:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5177,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5180,"mutability":"mutable","name":"b","nameLocation":"3511:1:28","nodeType":"VariableDeclaration","scope":5196,"src":"3503:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:28"},"returnParameters":{"id":5186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"success","nameLocation":"3542:7:28","nodeType":"VariableDeclaration","scope":5196,"src":"3537:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5182,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5185,"mutability":"mutable","name":"result","nameLocation":"3559:6:28","nodeType":"VariableDeclaration","scope":5196,"src":"3551:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:28"},"scope":6635,"src":"3476:322:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5225,"nodeType":"Block","src":"3989:122:28","statements":[{"assignments":[5207,5209],"declarations":[{"constant":false,"id":5207,"mutability":"mutable","name":"success","nameLocation":"4005:7:28","nodeType":"VariableDeclaration","scope":5225,"src":"4000:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5206,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5209,"mutability":"mutable","name":"result","nameLocation":"4022:6:28","nodeType":"VariableDeclaration","scope":5225,"src":"4014:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5214,"initialValue":{"arguments":[{"id":5211,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"4039:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5212,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"4042:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5210,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"4032:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:28"},{"expression":{"arguments":[{"id":5216,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"4069:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"4078:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:28","memberName":"max","nodeType":"MemberAccess","src":"4086:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5215,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"4061:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5205,"id":5224,"nodeType":"Return","src":"4054:50:28"}]},"documentation":{"id":5197,"nodeType":"StructuredDocumentation","src":"3804:103:28","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5226,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:28","nodeType":"FunctionDefinition","parameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5199,"mutability":"mutable","name":"a","nameLocation":"3943:1:28","nodeType":"VariableDeclaration","scope":5226,"src":"3935:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5201,"mutability":"mutable","name":"b","nameLocation":"3954:1:28","nodeType":"VariableDeclaration","scope":5226,"src":"3946:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5200,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:28"},"returnParameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5226,"src":"3980:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:28"},"scope":6635,"src":"3912:199:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5245,"nodeType":"Block","src":"4294:73:28","statements":[{"assignments":[null,5237],"declarations":[null,{"constant":false,"id":5237,"mutability":"mutable","name":"result","nameLocation":"4315:6:28","nodeType":"VariableDeclaration","scope":5245,"src":"4307:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5236,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5242,"initialValue":{"arguments":[{"id":5239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"4332:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5240,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"4335:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5238,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"4325:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:28"},{"expression":{"id":5243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"4354:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5235,"id":5244,"nodeType":"Return","src":"4347:13:28"}]},"documentation":{"id":5227,"nodeType":"StructuredDocumentation","src":"4117:95:28","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5246,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:28","nodeType":"FunctionDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"a","nameLocation":"4248:1:28","nodeType":"VariableDeclaration","scope":5246,"src":"4240:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5231,"mutability":"mutable","name":"b","nameLocation":"4259:1:28","nodeType":"VariableDeclaration","scope":5246,"src":"4251:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5230,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:28"},"returnParameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5246,"src":"4285:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:28"},"scope":6635,"src":"4217:150:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5275,"nodeType":"Block","src":"4564:122:28","statements":[{"assignments":[5257,5259],"declarations":[{"constant":false,"id":5257,"mutability":"mutable","name":"success","nameLocation":"4580:7:28","nodeType":"VariableDeclaration","scope":5275,"src":"4575:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5256,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5259,"mutability":"mutable","name":"result","nameLocation":"4597:6:28","nodeType":"VariableDeclaration","scope":5275,"src":"4589:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5264,"initialValue":{"arguments":[{"id":5261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"4614:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5262,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"4617:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5260,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"4607:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:28"},{"expression":{"arguments":[{"id":5266,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"4644:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"4653:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5268,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:28","memberName":"max","nodeType":"MemberAccess","src":"4661:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5265,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"4636:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5255,"id":5274,"nodeType":"Return","src":"4629:50:28"}]},"documentation":{"id":5247,"nodeType":"StructuredDocumentation","src":"4373:109:28","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5276,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:28","nodeType":"FunctionDefinition","parameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"a","nameLocation":"4518:1:28","nodeType":"VariableDeclaration","scope":5276,"src":"4510:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5248,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5251,"mutability":"mutable","name":"b","nameLocation":"4529:1:28","nodeType":"VariableDeclaration","scope":5276,"src":"4521:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5250,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:28"},"returnParameters":{"id":5255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5276,"src":"4555:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5253,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:28"},"scope":6635,"src":"4487:199:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5302,"nodeType":"Block","src":"5158:207:28","statements":[{"id":5301,"nodeType":"UncheckedBlock","src":"5168:191:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5288,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"5306:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"5312:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5290,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"5316:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5295,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"5337:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5293,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"5321:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"5321:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5287,"id":5300,"nodeType":"Return","src":"5299:49:28"}]}]},"documentation":{"id":5277,"nodeType":"StructuredDocumentation","src":"4692:374:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5303,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:28","nodeType":"FunctionDefinition","parameters":{"id":5284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"condition","nameLocation":"5093:9:28","nodeType":"VariableDeclaration","scope":5303,"src":"5088:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5278,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5281,"mutability":"mutable","name":"a","nameLocation":"5112:1:28","nodeType":"VariableDeclaration","scope":5303,"src":"5104:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5280,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5283,"mutability":"mutable","name":"b","nameLocation":"5123:1:28","nodeType":"VariableDeclaration","scope":5303,"src":"5115:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5282,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:28"},"returnParameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5303,"src":"5149:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:28"},"scope":6635,"src":"5071:294:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5321,"nodeType":"Block","src":"5502:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5314,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"5527:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5315,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"5531:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"5534:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"5537:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5313,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"5519:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5312,"id":5320,"nodeType":"Return","src":"5512:27:28"}]},"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"5371:59:28","text":" @dev Returns the largest of two numbers."},"id":5322,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:28","nodeType":"FunctionDefinition","parameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"a","nameLocation":"5456:1:28","nodeType":"VariableDeclaration","scope":5322,"src":"5448:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5308,"mutability":"mutable","name":"b","nameLocation":"5467:1:28","nodeType":"VariableDeclaration","scope":5322,"src":"5459:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5307,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:28"},"returnParameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5322,"src":"5493:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5310,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:28"},"scope":6635,"src":"5435:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5340,"nodeType":"Block","src":"5684:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"5709:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"5713:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5336,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"5716:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5337,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"5719:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5332,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"5701:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5331,"id":5339,"nodeType":"Return","src":"5694:27:28"}]},"documentation":{"id":5323,"nodeType":"StructuredDocumentation","src":"5552:60:28","text":" @dev Returns the smallest of two numbers."},"id":5341,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:28","nodeType":"FunctionDefinition","parameters":{"id":5328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"a","nameLocation":"5638:1:28","nodeType":"VariableDeclaration","scope":5341,"src":"5630:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5324,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"b","nameLocation":"5649:1:28","nodeType":"VariableDeclaration","scope":5341,"src":"5641:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5326,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:28"},"returnParameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5341,"src":"5675:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:28"},"scope":6635,"src":"5617:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5363,"nodeType":"Block","src":"5912:82:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"5967:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5352,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"5971:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5355,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"5977:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5356,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"5981:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5350,"id":5362,"nodeType":"Return","src":"5959:28:28"}]},"documentation":{"id":5342,"nodeType":"StructuredDocumentation","src":"5734:102:28","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5364,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:28","nodeType":"FunctionDefinition","parameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"a","nameLocation":"5866:1:28","nodeType":"VariableDeclaration","scope":5364,"src":"5858:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5346,"mutability":"mutable","name":"b","nameLocation":"5877:1:28","nodeType":"VariableDeclaration","scope":5364,"src":"5869:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5345,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:28"},"returnParameters":{"id":5350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5364,"src":"5903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:28"},"scope":6635,"src":"5841:153:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5404,"nodeType":"Block","src":"6286:633:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"6300:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5385,"nodeType":"IfStatement","src":"6296:150:28","trueBody":{"id":5384,"nodeType":"Block","src":"6308:138:28","statements":[{"expression":{"arguments":[{"expression":{"id":5380,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"6412:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"6412:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5377,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"6400:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"6400:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5383,"nodeType":"ExpressionStatement","src":"6400:35:28"}]}},{"id":5403,"nodeType":"UncheckedBlock","src":"6829:84:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"6876:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5386,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"6860:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"6860:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"6887:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"6896:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5373,"id":5402,"nodeType":"Return","src":"6853:49:28"}]}]},"documentation":{"id":5365,"nodeType":"StructuredDocumentation","src":"6000:210:28","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5405,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:28","nodeType":"FunctionDefinition","parameters":{"id":5370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"a","nameLocation":"6240:1:28","nodeType":"VariableDeclaration","scope":5405,"src":"6232:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5366,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5369,"mutability":"mutable","name":"b","nameLocation":"6251:1:28","nodeType":"VariableDeclaration","scope":5405,"src":"6243:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:28"},"returnParameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5405,"src":"6277:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5371,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:28"},"scope":6635,"src":"6215:704:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5540,"nodeType":"Block","src":"7340:3585:28","statements":[{"id":5539,"nodeType":"UncheckedBlock","src":"7350:3569:28","statements":[{"assignments":[5418,5420],"declarations":[{"constant":false,"id":5418,"mutability":"mutable","name":"high","nameLocation":"7383:4:28","nodeType":"VariableDeclaration","scope":5539,"src":"7375:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5420,"mutability":"mutable","name":"low","nameLocation":"7397:3:28","nodeType":"VariableDeclaration","scope":5539,"src":"7389:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5419,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5425,"initialValue":{"arguments":[{"id":5422,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"7411:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5423,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"7414:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5421,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"7404:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"7498:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5434,"nodeType":"IfStatement","src":"7494:365:28","trueBody":{"id":5433,"nodeType":"Block","src":"7509:350:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5429,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"7827:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5430,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"7833:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5416,"id":5432,"nodeType":"Return","src":"7820:24:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"7969:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5436,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"7984:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5453,"nodeType":"IfStatement","src":"7965:142:28","trueBody":{"id":5452,"nodeType":"Block","src":"7990:117:28","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"8028:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5445,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"8046:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"8046:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5447,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"8070:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2561,"src":"8070:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5441,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"8020:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5438,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"8008:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"8008:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5451,"nodeType":"ExpressionStatement","src":"8008:84:28"}]}},{"assignments":[5455],"declarations":[{"constant":false,"id":5455,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:28","nodeType":"VariableDeclaration","scope":5539,"src":"8359:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5456,"nodeType":"VariableDeclarationStatement","src":"8359:17:28"},{"AST":{"nativeSrc":"8415:283:28","nodeType":"YulBlock","src":"8415:283:28","statements":[{"nativeSrc":"8484:38:28","nodeType":"YulAssignment","src":"8484:38:28","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:28","nodeType":"YulIdentifier","src":"8504:1:28"},{"name":"y","nativeSrc":"8507:1:28","nodeType":"YulIdentifier","src":"8507:1:28"},{"name":"denominator","nativeSrc":"8510:11:28","nodeType":"YulIdentifier","src":"8510:11:28"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:28","nodeType":"YulIdentifier","src":"8497:6:28"},"nativeSrc":"8497:25:28","nodeType":"YulFunctionCall","src":"8497:25:28"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:28","nodeType":"YulIdentifier","src":"8484:9:28"}]},{"nativeSrc":"8604:37:28","nodeType":"YulAssignment","src":"8604:37:28","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:28","nodeType":"YulIdentifier","src":"8616:4:28"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:28","nodeType":"YulIdentifier","src":"8625:9:28"},{"name":"low","nativeSrc":"8636:3:28","nodeType":"YulIdentifier","src":"8636:3:28"}],"functionName":{"name":"gt","nativeSrc":"8622:2:28","nodeType":"YulIdentifier","src":"8622:2:28"},"nativeSrc":"8622:18:28","nodeType":"YulFunctionCall","src":"8622:18:28"}],"functionName":{"name":"sub","nativeSrc":"8612:3:28","nodeType":"YulIdentifier","src":"8612:3:28"},"nativeSrc":"8612:29:28","nodeType":"YulFunctionCall","src":"8612:29:28"},"variableNames":[{"name":"high","nativeSrc":"8604:4:28","nodeType":"YulIdentifier","src":"8604:4:28"}]},{"nativeSrc":"8658:26:28","nodeType":"YulAssignment","src":"8658:26:28","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:28","nodeType":"YulIdentifier","src":"8669:3:28"},{"name":"remainder","nativeSrc":"8674:9:28","nodeType":"YulIdentifier","src":"8674:9:28"}],"functionName":{"name":"sub","nativeSrc":"8665:3:28","nodeType":"YulIdentifier","src":"8665:3:28"},"nativeSrc":"8665:19:28","nodeType":"YulFunctionCall","src":"8665:19:28"},"variableNames":[{"name":"low","nativeSrc":"8658:3:28","nodeType":"YulIdentifier","src":"8658:3:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5412,"isOffset":false,"isSlot":false,"src":"8510:11:28","valueSize":1},{"declaration":5418,"isOffset":false,"isSlot":false,"src":"8604:4:28","valueSize":1},{"declaration":5418,"isOffset":false,"isSlot":false,"src":"8616:4:28","valueSize":1},{"declaration":5420,"isOffset":false,"isSlot":false,"src":"8636:3:28","valueSize":1},{"declaration":5420,"isOffset":false,"isSlot":false,"src":"8658:3:28","valueSize":1},{"declaration":5420,"isOffset":false,"isSlot":false,"src":"8669:3:28","valueSize":1},{"declaration":5455,"isOffset":false,"isSlot":false,"src":"8484:9:28","valueSize":1},{"declaration":5455,"isOffset":false,"isSlot":false,"src":"8625:9:28","valueSize":1},{"declaration":5455,"isOffset":false,"isSlot":false,"src":"8674:9:28","valueSize":1},{"declaration":5408,"isOffset":false,"isSlot":false,"src":"8504:1:28","valueSize":1},{"declaration":5410,"isOffset":false,"isSlot":false,"src":"8507:1:28","valueSize":1}],"flags":["memory-safe"],"id":5457,"nodeType":"InlineAssembly","src":"8390:308:28"},{"assignments":[5459],"declarations":[{"constant":false,"id":5459,"mutability":"mutable","name":"twos","nameLocation":"8910:4:28","nodeType":"VariableDeclaration","scope":5539,"src":"8902:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5466,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5460,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"8917:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5462,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"8936:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:28"},{"AST":{"nativeSrc":"8987:359:28","nodeType":"YulBlock","src":"8987:359:28","statements":[{"nativeSrc":"9052:37:28","nodeType":"YulAssignment","src":"9052:37:28","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:28","nodeType":"YulIdentifier","src":"9071:11:28"},{"name":"twos","nativeSrc":"9084:4:28","nodeType":"YulIdentifier","src":"9084:4:28"}],"functionName":{"name":"div","nativeSrc":"9067:3:28","nodeType":"YulIdentifier","src":"9067:3:28"},"nativeSrc":"9067:22:28","nodeType":"YulFunctionCall","src":"9067:22:28"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:28","nodeType":"YulIdentifier","src":"9052:11:28"}]},{"nativeSrc":"9153:21:28","nodeType":"YulAssignment","src":"9153:21:28","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:28","nodeType":"YulIdentifier","src":"9164:3:28"},{"name":"twos","nativeSrc":"9169:4:28","nodeType":"YulIdentifier","src":"9169:4:28"}],"functionName":{"name":"div","nativeSrc":"9160:3:28","nodeType":"YulIdentifier","src":"9160:3:28"},"nativeSrc":"9160:14:28","nodeType":"YulFunctionCall","src":"9160:14:28"},"variableNames":[{"name":"low","nativeSrc":"9153:3:28","nodeType":"YulIdentifier","src":"9153:3:28"}]},{"nativeSrc":"9293:39:28","nodeType":"YulAssignment","src":"9293:39:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:28","nodeType":"YulLiteral","src":"9313:1:28","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:28","nodeType":"YulIdentifier","src":"9316:4:28"}],"functionName":{"name":"sub","nativeSrc":"9309:3:28","nodeType":"YulIdentifier","src":"9309:3:28"},"nativeSrc":"9309:12:28","nodeType":"YulFunctionCall","src":"9309:12:28"},{"name":"twos","nativeSrc":"9323:4:28","nodeType":"YulIdentifier","src":"9323:4:28"}],"functionName":{"name":"div","nativeSrc":"9305:3:28","nodeType":"YulIdentifier","src":"9305:3:28"},"nativeSrc":"9305:23:28","nodeType":"YulFunctionCall","src":"9305:23:28"},{"kind":"number","nativeSrc":"9330:1:28","nodeType":"YulLiteral","src":"9330:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:28","nodeType":"YulIdentifier","src":"9301:3:28"},"nativeSrc":"9301:31:28","nodeType":"YulFunctionCall","src":"9301:31:28"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:28","nodeType":"YulIdentifier","src":"9293:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5412,"isOffset":false,"isSlot":false,"src":"9052:11:28","valueSize":1},{"declaration":5412,"isOffset":false,"isSlot":false,"src":"9071:11:28","valueSize":1},{"declaration":5420,"isOffset":false,"isSlot":false,"src":"9153:3:28","valueSize":1},{"declaration":5420,"isOffset":false,"isSlot":false,"src":"9164:3:28","valueSize":1},{"declaration":5459,"isOffset":false,"isSlot":false,"src":"9084:4:28","valueSize":1},{"declaration":5459,"isOffset":false,"isSlot":false,"src":"9169:4:28","valueSize":1},{"declaration":5459,"isOffset":false,"isSlot":false,"src":"9293:4:28","valueSize":1},{"declaration":5459,"isOffset":false,"isSlot":false,"src":"9316:4:28","valueSize":1},{"declaration":5459,"isOffset":false,"isSlot":false,"src":"9323:4:28","valueSize":1}],"flags":["memory-safe"],"id":5467,"nodeType":"InlineAssembly","src":"8962:384:28"},{"expression":{"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5468,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"9409:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5469,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"9416:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5470,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"9423:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5473,"nodeType":"ExpressionStatement","src":"9409:18:28"},{"assignments":[5475],"declarations":[{"constant":false,"id":5475,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:28","nodeType":"VariableDeclaration","scope":5539,"src":"9762:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5474,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5482,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5477,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"9785:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:28"},{"expression":{"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5483,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10018:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5485,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"10033:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5486,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10047:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5490,"nodeType":"ExpressionStatement","src":"10018:36:28"},{"expression":{"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5491,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10088:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"10103:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5494,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10117:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5498,"nodeType":"ExpressionStatement","src":"10088:36:28"},{"expression":{"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5499,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10160:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5501,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"10175:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5502,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10189:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5506,"nodeType":"ExpressionStatement","src":"10160:36:28"},{"expression":{"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5507,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10231:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5509,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"10246:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5510,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10260:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5514,"nodeType":"ExpressionStatement","src":"10231:36:28"},{"expression":{"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5515,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10304:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5517,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"10319:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5518,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10333:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5522,"nodeType":"ExpressionStatement","src":"10304:36:28"},{"expression":{"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5523,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10378:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"10393:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5526,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10407:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5530,"nodeType":"ExpressionStatement","src":"10378:36:28"},{"expression":{"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"10859:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5532,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"10868:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5533,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10874:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5536,"nodeType":"ExpressionStatement","src":"10859:22:28"},{"expression":{"id":5537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"10902:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5416,"id":5538,"nodeType":"Return","src":"10895:13:28"}]}]},"documentation":{"id":5406,"nodeType":"StructuredDocumentation","src":"6925:312:28","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5541,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:28","nodeType":"FunctionDefinition","parameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"x","nameLocation":"7266:1:28","nodeType":"VariableDeclaration","scope":5541,"src":"7258:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5410,"mutability":"mutable","name":"y","nameLocation":"7277:1:28","nodeType":"VariableDeclaration","scope":5541,"src":"7269:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5409,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5412,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:28","nodeType":"VariableDeclaration","scope":5541,"src":"7280:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5411,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:28"},"returnParameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"result","nameLocation":"7332:6:28","nodeType":"VariableDeclaration","scope":5541,"src":"7324:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5414,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:28"},"scope":6635,"src":"7242:3683:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5577,"nodeType":"Block","src":"11164:128:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5557,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"11188:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5558,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"11191:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5559,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"11194:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5556,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5541,5578],"referencedDeclaration":5541,"src":"11181:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5564,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"11242:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}],"id":5563,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"11225:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5026_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5567,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"11262:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5568,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"11265:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5569,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"11268:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5566,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5561,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"11209:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"11209:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5555,"id":5576,"nodeType":"Return","src":"11174:111:28"}]},"documentation":{"id":5542,"nodeType":"StructuredDocumentation","src":"10931:118:28","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5578,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:28","nodeType":"FunctionDefinition","parameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"x","nameLocation":"11078:1:28","nodeType":"VariableDeclaration","scope":5578,"src":"11070:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5543,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5546,"mutability":"mutable","name":"y","nameLocation":"11089:1:28","nodeType":"VariableDeclaration","scope":5578,"src":"11081:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5545,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5548,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:28","nodeType":"VariableDeclaration","scope":5578,"src":"11092:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5551,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:28","nodeType":"VariableDeclaration","scope":5578,"src":"11113:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"},"typeName":{"id":5550,"nodeType":"UserDefinedTypeName","pathNode":{"id":5549,"name":"Rounding","nameLocations":["11113:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5026,"src":"11113:8:28"},"referencedDeclaration":5026,"src":"11113:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:28"},"returnParameters":{"id":5555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5578,"src":"11155:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5553,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:28"},"scope":6635,"src":"11054:238:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5627,"nodeType":"Block","src":"11500:245:28","statements":[{"id":5626,"nodeType":"UncheckedBlock","src":"11510:229:28","statements":[{"assignments":[5591,5593],"declarations":[{"constant":false,"id":5591,"mutability":"mutable","name":"high","nameLocation":"11543:4:28","nodeType":"VariableDeclaration","scope":5626,"src":"11535:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5590,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5593,"mutability":"mutable","name":"low","nameLocation":"11557:3:28","nodeType":"VariableDeclaration","scope":5626,"src":"11549:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5592,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5598,"initialValue":{"arguments":[{"id":5595,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"11571:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5596,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5583,"src":"11574:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5594,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"11564:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5599,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"11594:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5601,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"11607:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5612,"nodeType":"IfStatement","src":"11590:86:28","trueBody":{"id":5611,"nodeType":"Block","src":"11610:66:28","statements":[{"expression":{"arguments":[{"expression":{"id":5607,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11640:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2561,"src":"11640:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5604,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11628:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"11628:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5610,"nodeType":"ExpressionStatement","src":"11628:33:28"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5613,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"11697:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5615,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"11712:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5620,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"11719:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5621,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"11726:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5589,"id":5625,"nodeType":"Return","src":"11689:39:28"}]}]},"documentation":{"id":5579,"nodeType":"StructuredDocumentation","src":"11298:111:28","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5628,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:28","nodeType":"FunctionDefinition","parameters":{"id":5586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5581,"mutability":"mutable","name":"x","nameLocation":"11438:1:28","nodeType":"VariableDeclaration","scope":5628,"src":"11430:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5580,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5583,"mutability":"mutable","name":"y","nameLocation":"11449:1:28","nodeType":"VariableDeclaration","scope":5628,"src":"11441:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5582,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5585,"mutability":"mutable","name":"n","nameLocation":"11458:1:28","nodeType":"VariableDeclaration","scope":5628,"src":"11452:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5584,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:28"},"returnParameters":{"id":5589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"mutability":"mutable","name":"result","nameLocation":"11492:6:28","nodeType":"VariableDeclaration","scope":5628,"src":"11484:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5587,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:28"},"scope":6635,"src":"11414:331:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5666,"nodeType":"Block","src":"11963:113:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5644,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"11987:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5645,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"11990:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5646,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"11993:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5643,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5628,5667],"referencedDeclaration":5628,"src":"11980:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5651,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"12031:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}],"id":5650,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"12014:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5026_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5654,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"12051:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5655,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"12054:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5657,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"12062:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5653,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5648,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"11998:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"11998:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5642,"id":5665,"nodeType":"Return","src":"11973:96:28"}]},"documentation":{"id":5629,"nodeType":"StructuredDocumentation","src":"11751:109:28","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5667,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:28","nodeType":"FunctionDefinition","parameters":{"id":5639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"x","nameLocation":"11889:1:28","nodeType":"VariableDeclaration","scope":5667,"src":"11881:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5630,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5633,"mutability":"mutable","name":"y","nameLocation":"11900:1:28","nodeType":"VariableDeclaration","scope":5667,"src":"11892:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5632,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5635,"mutability":"mutable","name":"n","nameLocation":"11909:1:28","nodeType":"VariableDeclaration","scope":5667,"src":"11903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5634,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5638,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:28","nodeType":"VariableDeclaration","scope":5667,"src":"11912:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"},"typeName":{"id":5637,"nodeType":"UserDefinedTypeName","pathNode":{"id":5636,"name":"Rounding","nameLocations":["11912:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5026,"src":"11912:8:28"},"referencedDeclaration":5026,"src":"11912:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:28"},"returnParameters":{"id":5642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5667,"src":"11954:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5640,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:28"},"scope":6635,"src":"11865:211:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5763,"nodeType":"Block","src":"12710:1849:28","statements":[{"id":5762,"nodeType":"UncheckedBlock","src":"12720:1833:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5677,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"12748:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5682,"nodeType":"IfStatement","src":"12744:20:28","trueBody":{"expression":{"hexValue":"30","id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5676,"id":5681,"nodeType":"Return","src":"12756:8:28"}},{"assignments":[5684],"declarations":[{"constant":false,"id":5684,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:28","nodeType":"VariableDeclaration","scope":5762,"src":"13235:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5683,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5688,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"13255:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5686,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"13259:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:28"},{"assignments":[5690],"declarations":[{"constant":false,"id":5690,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:28","nodeType":"VariableDeclaration","scope":5762,"src":"13274:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5689,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5692,"initialValue":{"id":5691,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"13288:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:28"},{"assignments":[5694],"declarations":[{"constant":false,"id":5694,"mutability":"mutable","name":"x","nameLocation":"13432:1:28","nodeType":"VariableDeclaration","scope":5762,"src":"13425:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5693,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5696,"initialValue":{"hexValue":"30","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:28"},{"assignments":[5698],"declarations":[{"constant":false,"id":5698,"mutability":"mutable","name":"y","nameLocation":"13458:1:28","nodeType":"VariableDeclaration","scope":5762,"src":"13451:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5697,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5700,"initialValue":{"hexValue":"31","id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:28"},{"body":{"id":5737,"nodeType":"Block","src":"13501:882:28","statements":[{"assignments":[5705],"declarations":[{"constant":false,"id":5705,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:28","nodeType":"VariableDeclaration","scope":5737,"src":"13519:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5709,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"13538:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5707,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"13544:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:28"},{"expression":{"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5710,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"13573:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5711,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"13578:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5712,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5713,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"13678:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"13923:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"13929:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5716,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"13941:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5721,"nodeType":"ExpressionStatement","src":"13572:395:28"},{"expression":{"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5722,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"13987:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5723,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"13990:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5724,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5725,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"14072:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5726,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"14326:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5727,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"14330:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5730,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"14341:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5728,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:28","typeDescriptions":{}}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5736,"nodeType":"ExpressionStatement","src":"13986:382:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5701,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"13485:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5738,"nodeType":"WhileStatement","src":"13478:905:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5739,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"14401:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5744,"nodeType":"IfStatement","src":"14397:22:28","trueBody":{"expression":{"hexValue":"30","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5676,"id":5743,"nodeType":"Return","src":"14411:8:28"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5746,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"14470:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5749,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"14477:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:28","subExpression":{"id":5752,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"14490:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5750,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:28","typeDescriptions":{}}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5758,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"14502:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5756,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:28","typeDescriptions":{}}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5745,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"14462:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5676,"id":5761,"nodeType":"Return","src":"14455:50:28"}]}]},"documentation":{"id":5668,"nodeType":"StructuredDocumentation","src":"12082:553:28","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5764,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:28","nodeType":"FunctionDefinition","parameters":{"id":5673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"a","nameLocation":"12664:1:28","nodeType":"VariableDeclaration","scope":5764,"src":"12656:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5672,"mutability":"mutable","name":"n","nameLocation":"12675:1:28","nodeType":"VariableDeclaration","scope":5764,"src":"12667:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5671,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:28"},"returnParameters":{"id":5676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5764,"src":"12701:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5674,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:28"},"scope":6635,"src":"12640:1919:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5784,"nodeType":"Block","src":"15159:82:28","statements":[{"id":5783,"nodeType":"UncheckedBlock","src":"15169:66:28","statements":[{"expression":{"arguments":[{"id":5776,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"15212:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5777,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"15215:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5780,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"15222:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5774,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"15200:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6635_$","typeString":"type(library Math)"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:28","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5821,"src":"15200:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5773,"id":5782,"nodeType":"Return","src":"15193:31:28"}]}]},"documentation":{"id":5765,"nodeType":"StructuredDocumentation","src":"14565:514:28","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5785,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:28","nodeType":"FunctionDefinition","parameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"a","nameLocation":"15113:1:28","nodeType":"VariableDeclaration","scope":5785,"src":"15105:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5769,"mutability":"mutable","name":"p","nameLocation":"15124:1:28","nodeType":"VariableDeclaration","scope":5785,"src":"15116:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5768,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:28"},"returnParameters":{"id":5773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5785,"src":"15150:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:28"},"scope":6635,"src":"15084:157:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5820,"nodeType":"Block","src":"16011:174:28","statements":[{"assignments":[5798,5800],"declarations":[{"constant":false,"id":5798,"mutability":"mutable","name":"success","nameLocation":"16027:7:28","nodeType":"VariableDeclaration","scope":5820,"src":"16022:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5797,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5800,"mutability":"mutable","name":"result","nameLocation":"16044:6:28","nodeType":"VariableDeclaration","scope":5820,"src":"16036:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5799,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5806,"initialValue":{"arguments":[{"id":5802,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"16064:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5803,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"16067:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5804,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"16070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5801,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5845,5927],"referencedDeclaration":5845,"src":"16054:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:28"},{"condition":{"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:28","subExpression":{"id":5807,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"16087:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5817,"nodeType":"IfStatement","src":"16082:74:28","trueBody":{"id":5816,"nodeType":"Block","src":"16096:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":5812,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"16122:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"16122:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5809,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"16110:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"16110:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5815,"nodeType":"ExpressionStatement","src":"16110:35:28"}]}},{"expression":{"id":5818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"16172:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5796,"id":5819,"nodeType":"Return","src":"16165:13:28"}]},"documentation":{"id":5786,"nodeType":"StructuredDocumentation","src":"15247:678:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5821,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:28","nodeType":"FunctionDefinition","parameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"b","nameLocation":"15954:1:28","nodeType":"VariableDeclaration","scope":5821,"src":"15946:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5790,"mutability":"mutable","name":"e","nameLocation":"15965:1:28","nodeType":"VariableDeclaration","scope":5821,"src":"15957:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5789,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5792,"mutability":"mutable","name":"m","nameLocation":"15976:1:28","nodeType":"VariableDeclaration","scope":5821,"src":"15968:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5791,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:28"},"returnParameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5821,"src":"16002:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5794,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:28"},"scope":6635,"src":"15930:255:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5844,"nodeType":"Block","src":"17039:1493:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5835,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"17053:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5842,"nodeType":"IfStatement","src":"17049:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5834,"id":5841,"nodeType":"Return","src":"17061:17:28"}},{"AST":{"nativeSrc":"17113:1413:28","nodeType":"YulBlock","src":"17113:1413:28","statements":[{"nativeSrc":"17127:22:28","nodeType":"YulVariableDeclaration","src":"17127:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:28","nodeType":"YulLiteral","src":"17144:4:28","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:28","nodeType":"YulIdentifier","src":"17138:5:28"},"nativeSrc":"17138:11:28","nodeType":"YulFunctionCall","src":"17138:11:28"},"variables":[{"name":"ptr","nativeSrc":"17131:3:28","nodeType":"YulTypedName","src":"17131:3:28","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:28","nodeType":"YulIdentifier","src":"18057:3:28"},{"kind":"number","nativeSrc":"18062:4:28","nodeType":"YulLiteral","src":"18062:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:28","nodeType":"YulIdentifier","src":"18050:6:28"},"nativeSrc":"18050:17:28","nodeType":"YulFunctionCall","src":"18050:17:28"},"nativeSrc":"18050:17:28","nodeType":"YulExpressionStatement","src":"18050:17:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:28","nodeType":"YulIdentifier","src":"18091:3:28"},{"kind":"number","nativeSrc":"18096:4:28","nodeType":"YulLiteral","src":"18096:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:28","nodeType":"YulIdentifier","src":"18087:3:28"},"nativeSrc":"18087:14:28","nodeType":"YulFunctionCall","src":"18087:14:28"},{"kind":"number","nativeSrc":"18103:4:28","nodeType":"YulLiteral","src":"18103:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:28","nodeType":"YulIdentifier","src":"18080:6:28"},"nativeSrc":"18080:28:28","nodeType":"YulFunctionCall","src":"18080:28:28"},"nativeSrc":"18080:28:28","nodeType":"YulExpressionStatement","src":"18080:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:28","nodeType":"YulIdentifier","src":"18132:3:28"},{"kind":"number","nativeSrc":"18137:4:28","nodeType":"YulLiteral","src":"18137:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:28","nodeType":"YulIdentifier","src":"18128:3:28"},"nativeSrc":"18128:14:28","nodeType":"YulFunctionCall","src":"18128:14:28"},{"kind":"number","nativeSrc":"18144:4:28","nodeType":"YulLiteral","src":"18144:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:28","nodeType":"YulIdentifier","src":"18121:6:28"},"nativeSrc":"18121:28:28","nodeType":"YulFunctionCall","src":"18121:28:28"},"nativeSrc":"18121:28:28","nodeType":"YulExpressionStatement","src":"18121:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:28","nodeType":"YulIdentifier","src":"18173:3:28"},{"kind":"number","nativeSrc":"18178:4:28","nodeType":"YulLiteral","src":"18178:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:28","nodeType":"YulIdentifier","src":"18169:3:28"},"nativeSrc":"18169:14:28","nodeType":"YulFunctionCall","src":"18169:14:28"},{"name":"b","nativeSrc":"18185:1:28","nodeType":"YulIdentifier","src":"18185:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:28","nodeType":"YulIdentifier","src":"18162:6:28"},"nativeSrc":"18162:25:28","nodeType":"YulFunctionCall","src":"18162:25:28"},"nativeSrc":"18162:25:28","nodeType":"YulExpressionStatement","src":"18162:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:28","nodeType":"YulIdentifier","src":"18211:3:28"},{"kind":"number","nativeSrc":"18216:4:28","nodeType":"YulLiteral","src":"18216:4:28","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:28","nodeType":"YulIdentifier","src":"18207:3:28"},"nativeSrc":"18207:14:28","nodeType":"YulFunctionCall","src":"18207:14:28"},{"name":"e","nativeSrc":"18223:1:28","nodeType":"YulIdentifier","src":"18223:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:28","nodeType":"YulIdentifier","src":"18200:6:28"},"nativeSrc":"18200:25:28","nodeType":"YulFunctionCall","src":"18200:25:28"},"nativeSrc":"18200:25:28","nodeType":"YulExpressionStatement","src":"18200:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:28","nodeType":"YulIdentifier","src":"18249:3:28"},{"kind":"number","nativeSrc":"18254:4:28","nodeType":"YulLiteral","src":"18254:4:28","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:28","nodeType":"YulIdentifier","src":"18245:3:28"},"nativeSrc":"18245:14:28","nodeType":"YulFunctionCall","src":"18245:14:28"},{"name":"m","nativeSrc":"18261:1:28","nodeType":"YulIdentifier","src":"18261:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:28","nodeType":"YulIdentifier","src":"18238:6:28"},"nativeSrc":"18238:25:28","nodeType":"YulFunctionCall","src":"18238:25:28"},"nativeSrc":"18238:25:28","nodeType":"YulExpressionStatement","src":"18238:25:28"},{"nativeSrc":"18425:57:28","nodeType":"YulAssignment","src":"18425:57:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:28","nodeType":"YulIdentifier","src":"18447:3:28"},"nativeSrc":"18447:5:28","nodeType":"YulFunctionCall","src":"18447:5:28"},{"kind":"number","nativeSrc":"18454:4:28","nodeType":"YulLiteral","src":"18454:4:28","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:28","nodeType":"YulIdentifier","src":"18460:3:28"},{"kind":"number","nativeSrc":"18465:4:28","nodeType":"YulLiteral","src":"18465:4:28","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:28","nodeType":"YulLiteral","src":"18471:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:28","nodeType":"YulLiteral","src":"18477:4:28","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:28","nodeType":"YulIdentifier","src":"18436:10:28"},"nativeSrc":"18436:46:28","nodeType":"YulFunctionCall","src":"18436:46:28"},"variableNames":[{"name":"success","nativeSrc":"18425:7:28","nodeType":"YulIdentifier","src":"18425:7:28"}]},{"nativeSrc":"18495:21:28","nodeType":"YulAssignment","src":"18495:21:28","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:28","nodeType":"YulLiteral","src":"18511:4:28","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:28","nodeType":"YulIdentifier","src":"18505:5:28"},"nativeSrc":"18505:11:28","nodeType":"YulFunctionCall","src":"18505:11:28"},"variableNames":[{"name":"result","nativeSrc":"18495:6:28","nodeType":"YulIdentifier","src":"18495:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5824,"isOffset":false,"isSlot":false,"src":"18185:1:28","valueSize":1},{"declaration":5826,"isOffset":false,"isSlot":false,"src":"18223:1:28","valueSize":1},{"declaration":5828,"isOffset":false,"isSlot":false,"src":"18261:1:28","valueSize":1},{"declaration":5833,"isOffset":false,"isSlot":false,"src":"18495:6:28","valueSize":1},{"declaration":5831,"isOffset":false,"isSlot":false,"src":"18425:7:28","valueSize":1}],"flags":["memory-safe"],"id":5843,"nodeType":"InlineAssembly","src":"17088:1438:28"}]},"documentation":{"id":5822,"nodeType":"StructuredDocumentation","src":"16191:738:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5845,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:28","nodeType":"FunctionDefinition","parameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5824,"mutability":"mutable","name":"b","nameLocation":"16961:1:28","nodeType":"VariableDeclaration","scope":5845,"src":"16953:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5823,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5826,"mutability":"mutable","name":"e","nameLocation":"16972:1:28","nodeType":"VariableDeclaration","scope":5845,"src":"16964:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5825,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5828,"mutability":"mutable","name":"m","nameLocation":"16983:1:28","nodeType":"VariableDeclaration","scope":5845,"src":"16975:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5827,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:28"},"returnParameters":{"id":5834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"success","nameLocation":"17014:7:28","nodeType":"VariableDeclaration","scope":5845,"src":"17009:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5830,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5833,"mutability":"mutable","name":"result","nameLocation":"17031:6:28","nodeType":"VariableDeclaration","scope":5845,"src":"17023:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5832,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:28"},"scope":6635,"src":"16934:1598:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5880,"nodeType":"Block","src":"18729:179:28","statements":[{"assignments":[5858,5860],"declarations":[{"constant":false,"id":5858,"mutability":"mutable","name":"success","nameLocation":"18745:7:28","nodeType":"VariableDeclaration","scope":5880,"src":"18740:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5857,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5860,"mutability":"mutable","name":"result","nameLocation":"18767:6:28","nodeType":"VariableDeclaration","scope":5880,"src":"18754:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5859,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5866,"initialValue":{"arguments":[{"id":5862,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"18787:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5863,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"18790:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5864,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"18793:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5861,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5845,5927],"referencedDeclaration":5927,"src":"18777:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:28"},{"condition":{"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:28","subExpression":{"id":5867,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"18810:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5877,"nodeType":"IfStatement","src":"18805:74:28","trueBody":{"id":5876,"nodeType":"Block","src":"18819:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":5872,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"18845:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"18845:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5869,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"18833:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2598_$","typeString":"type(library Panic)"}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"18833:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5875,"nodeType":"ExpressionStatement","src":"18833:35:28"}]}},{"expression":{"id":5878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"18895:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5856,"id":5879,"nodeType":"Return","src":"18888:13:28"}]},"documentation":{"id":5846,"nodeType":"StructuredDocumentation","src":"18538:85:28","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5881,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:28","nodeType":"FunctionDefinition","parameters":{"id":5853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"b","nameLocation":"18657:1:28","nodeType":"VariableDeclaration","scope":5881,"src":"18644:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5847,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5850,"mutability":"mutable","name":"e","nameLocation":"18673:1:28","nodeType":"VariableDeclaration","scope":5881,"src":"18660:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5849,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5852,"mutability":"mutable","name":"m","nameLocation":"18689:1:28","nodeType":"VariableDeclaration","scope":5881,"src":"18676:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5851,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:28"},"returnParameters":{"id":5856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5881,"src":"18715:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5854,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:28"},"scope":6635,"src":"18628:280:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5926,"nodeType":"Block","src":"19162:771:28","statements":[{"condition":{"arguments":[{"id":5896,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"19187:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5895,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"19176:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5905,"nodeType":"IfStatement","src":"19172:47:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5899,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5894,"id":5904,"nodeType":"Return","src":"19191:28:28"}},{"assignments":[5907],"declarations":[{"constant":false,"id":5907,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:28","nodeType":"VariableDeclaration","scope":5926,"src":"19230:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5910,"initialValue":{"expression":{"id":5908,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"19245:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:28","memberName":"length","nodeType":"MemberAccess","src":"19245:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:28"},{"expression":{"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"19335:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5914,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"19361:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:28","memberName":"length","nodeType":"MemberAccess","src":"19361:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5916,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"19371:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:28","memberName":"length","nodeType":"MemberAccess","src":"19371:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5918,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"19381:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"19387:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5920,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"19390:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5921,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"19393:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5912,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5924,"nodeType":"ExpressionStatement","src":"19335:60:28"},{"AST":{"nativeSrc":"19431:496:28","nodeType":"YulBlock","src":"19431:496:28","statements":[{"nativeSrc":"19445:32:28","nodeType":"YulVariableDeclaration","src":"19445:32:28","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:28","nodeType":"YulIdentifier","src":"19464:6:28"},{"kind":"number","nativeSrc":"19472:4:28","nodeType":"YulLiteral","src":"19472:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:28","nodeType":"YulIdentifier","src":"19460:3:28"},"nativeSrc":"19460:17:28","nodeType":"YulFunctionCall","src":"19460:17:28"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:28","nodeType":"YulTypedName","src":"19449:7:28","type":""}]},{"nativeSrc":"19567:73:28","nodeType":"YulAssignment","src":"19567:73:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:28","nodeType":"YulIdentifier","src":"19589:3:28"},"nativeSrc":"19589:5:28","nodeType":"YulFunctionCall","src":"19589:5:28"},{"kind":"number","nativeSrc":"19596:4:28","nodeType":"YulLiteral","src":"19596:4:28","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:28","nodeType":"YulIdentifier","src":"19602:7:28"},{"arguments":[{"name":"result","nativeSrc":"19617:6:28","nodeType":"YulIdentifier","src":"19617:6:28"}],"functionName":{"name":"mload","nativeSrc":"19611:5:28","nodeType":"YulIdentifier","src":"19611:5:28"},"nativeSrc":"19611:13:28","nodeType":"YulFunctionCall","src":"19611:13:28"},{"name":"dataPtr","nativeSrc":"19626:7:28","nodeType":"YulIdentifier","src":"19626:7:28"},{"name":"mLen","nativeSrc":"19635:4:28","nodeType":"YulIdentifier","src":"19635:4:28"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:28","nodeType":"YulIdentifier","src":"19578:10:28"},"nativeSrc":"19578:62:28","nodeType":"YulFunctionCall","src":"19578:62:28"},"variableNames":[{"name":"success","nativeSrc":"19567:7:28","nodeType":"YulIdentifier","src":"19567:7:28"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:28","nodeType":"YulIdentifier","src":"19796:6:28"},{"name":"mLen","nativeSrc":"19804:4:28","nodeType":"YulIdentifier","src":"19804:4:28"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:28","nodeType":"YulIdentifier","src":"19789:6:28"},"nativeSrc":"19789:20:28","nodeType":"YulFunctionCall","src":"19789:20:28"},"nativeSrc":"19789:20:28","nodeType":"YulExpressionStatement","src":"19789:20:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:28","nodeType":"YulLiteral","src":"19892:4:28","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:28","nodeType":"YulIdentifier","src":"19902:7:28"},{"name":"mLen","nativeSrc":"19911:4:28","nodeType":"YulIdentifier","src":"19911:4:28"}],"functionName":{"name":"add","nativeSrc":"19898:3:28","nodeType":"YulIdentifier","src":"19898:3:28"},"nativeSrc":"19898:18:28","nodeType":"YulFunctionCall","src":"19898:18:28"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:28","nodeType":"YulIdentifier","src":"19885:6:28"},"nativeSrc":"19885:32:28","nodeType":"YulFunctionCall","src":"19885:32:28"},"nativeSrc":"19885:32:28","nodeType":"YulExpressionStatement","src":"19885:32:28"}]},"evmVersion":"paris","externalReferences":[{"declaration":5907,"isOffset":false,"isSlot":false,"src":"19635:4:28","valueSize":1},{"declaration":5907,"isOffset":false,"isSlot":false,"src":"19804:4:28","valueSize":1},{"declaration":5907,"isOffset":false,"isSlot":false,"src":"19911:4:28","valueSize":1},{"declaration":5893,"isOffset":false,"isSlot":false,"src":"19464:6:28","valueSize":1},{"declaration":5893,"isOffset":false,"isSlot":false,"src":"19617:6:28","valueSize":1},{"declaration":5893,"isOffset":false,"isSlot":false,"src":"19796:6:28","valueSize":1},{"declaration":5891,"isOffset":false,"isSlot":false,"src":"19567:7:28","valueSize":1}],"flags":["memory-safe"],"id":5925,"nodeType":"InlineAssembly","src":"19406:521:28"}]},"documentation":{"id":5882,"nodeType":"StructuredDocumentation","src":"18914:88:28","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5927,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:28","nodeType":"FunctionDefinition","parameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5884,"mutability":"mutable","name":"b","nameLocation":"19048:1:28","nodeType":"VariableDeclaration","scope":5927,"src":"19035:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5883,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5886,"mutability":"mutable","name":"e","nameLocation":"19072:1:28","nodeType":"VariableDeclaration","scope":5927,"src":"19059:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5885,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5888,"mutability":"mutable","name":"m","nameLocation":"19096:1:28","nodeType":"VariableDeclaration","scope":5927,"src":"19083:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5887,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:28"},"returnParameters":{"id":5894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"success","nameLocation":"19132:7:28","nodeType":"VariableDeclaration","scope":5927,"src":"19127:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5890,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5893,"mutability":"mutable","name":"result","nameLocation":"19154:6:28","nodeType":"VariableDeclaration","scope":5927,"src":"19141:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5892,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:28"},"scope":6635,"src":"19007:926:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5959,"nodeType":"Block","src":"20088:176:28","statements":[{"body":{"id":5955,"nodeType":"Block","src":"20145:92:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5946,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"20163:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5948,"indexExpression":{"id":5947,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"20173:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5954,"nodeType":"IfStatement","src":"20159:68:28","trueBody":{"id":5953,"nodeType":"Block","src":"20182:45:28","statements":[{"expression":{"hexValue":"66616c7365","id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5934,"id":5952,"nodeType":"Return","src":"20200:12:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5939,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"20118:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5940,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"20122:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:28","memberName":"length","nodeType":"MemberAccess","src":"20122:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5956,"initializationExpression":{"assignments":[5936],"declarations":[{"constant":false,"id":5936,"mutability":"mutable","name":"i","nameLocation":"20111:1:28","nodeType":"VariableDeclaration","scope":5956,"src":"20103:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5935,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5938,"initialValue":{"hexValue":"30","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:28","subExpression":{"id":5943,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"20142:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5945,"nodeType":"ExpressionStatement","src":"20140:3:28"},"nodeType":"ForStatement","src":"20098:139:28"},{"expression":{"hexValue":"74727565","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5934,"id":5958,"nodeType":"Return","src":"20246:11:28"}]},"documentation":{"id":5928,"nodeType":"StructuredDocumentation","src":"19939:72:28","text":" @dev Returns whether the provided byte array is zero."},"id":5960,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:28","nodeType":"FunctionDefinition","parameters":{"id":5931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5930,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:28","nodeType":"VariableDeclaration","scope":5960,"src":"20036:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5929,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:28"},"returnParameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5960,"src":"20082:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5932,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:28"},"scope":6635,"src":"20016:248:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6178,"nodeType":"Block","src":"20624:5124:28","statements":[{"id":6177,"nodeType":"UncheckedBlock","src":"20634:5108:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"20728:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5974,"nodeType":"IfStatement","src":"20724:53:28","trueBody":{"id":5973,"nodeType":"Block","src":"20736:41:28","statements":[{"expression":{"id":5971,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"20761:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5967,"id":5972,"nodeType":"Return","src":"20754:8:28"}]}},{"assignments":[5976],"declarations":[{"constant":false,"id":5976,"mutability":"mutable","name":"aa","nameLocation":"21712:2:28","nodeType":"VariableDeclaration","scope":6177,"src":"21704:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5975,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5978,"initialValue":{"id":5977,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"21717:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:28"},{"assignments":[5980],"declarations":[{"constant":false,"id":5980,"mutability":"mutable","name":"xn","nameLocation":"21740:2:28","nodeType":"VariableDeclaration","scope":6177,"src":"21732:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5979,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5982,"initialValue":{"hexValue":"31","id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5983,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"21765:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5998,"nodeType":"IfStatement","src":"21761:92:28","trueBody":{"id":5997,"nodeType":"Block","src":"21783:70:28","statements":[{"expression":{"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5989,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"21801:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5992,"nodeType":"ExpressionStatement","src":"21801:10:28"},{"expression":{"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5993,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"21829:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5996,"nodeType":"ExpressionStatement","src":"21829:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5999,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"21870:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6014,"nodeType":"IfStatement","src":"21866:90:28","trueBody":{"id":6013,"nodeType":"Block","src":"21887:69:28","statements":[{"expression":{"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6005,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"21905:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6008,"nodeType":"ExpressionStatement","src":"21905:9:28"},{"expression":{"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6009,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"21932:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6012,"nodeType":"ExpressionStatement","src":"21932:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6015,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"21973:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6030,"nodeType":"IfStatement","src":"21969:90:28","trueBody":{"id":6029,"nodeType":"Block","src":"21990:69:28","statements":[{"expression":{"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6021,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"22008:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6024,"nodeType":"ExpressionStatement","src":"22008:9:28"},{"expression":{"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6025,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"22035:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6028,"nodeType":"ExpressionStatement","src":"22035:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6031,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"22076:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6046,"nodeType":"IfStatement","src":"22072:89:28","trueBody":{"id":6045,"nodeType":"Block","src":"22093:68:28","statements":[{"expression":{"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6037,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"22111:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6040,"nodeType":"ExpressionStatement","src":"22111:9:28"},{"expression":{"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6041,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"22138:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6044,"nodeType":"ExpressionStatement","src":"22138:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6047,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"22178:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6062,"nodeType":"IfStatement","src":"22174:87:28","trueBody":{"id":6061,"nodeType":"Block","src":"22194:67:28","statements":[{"expression":{"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6053,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"22212:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6056,"nodeType":"ExpressionStatement","src":"22212:8:28"},{"expression":{"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6057,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"22238:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6060,"nodeType":"ExpressionStatement","src":"22238:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6063,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"22278:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6078,"nodeType":"IfStatement","src":"22274:87:28","trueBody":{"id":6077,"nodeType":"Block","src":"22294:67:28","statements":[{"expression":{"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6069,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"22312:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6072,"nodeType":"ExpressionStatement","src":"22312:8:28"},{"expression":{"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6073,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"22338:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6076,"nodeType":"ExpressionStatement","src":"22338:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6079,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"22378:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6090,"nodeType":"IfStatement","src":"22374:61:28","trueBody":{"id":6089,"nodeType":"Block","src":"22394:41:28","statements":[{"expression":{"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6085,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"22412:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6088,"nodeType":"ExpressionStatement","src":"22412:8:28"}]}},{"expression":{"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6091,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"22855:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6093,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"22865:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6099,"nodeType":"ExpressionStatement","src":"22855:18:28"},{"expression":{"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6100,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"24760:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6101,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"24766:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"24771:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6103,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"24775:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6110,"nodeType":"ExpressionStatement","src":"24760:23:28"},{"expression":{"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6111,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"24869:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6112,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"24875:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6113,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"24880:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6114,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"24884:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6121,"nodeType":"ExpressionStatement","src":"24869:23:28"},{"expression":{"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6122,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"24980:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6123,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"24986:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6124,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"24991:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6125,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"24995:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6132,"nodeType":"ExpressionStatement","src":"24980:23:28"},{"expression":{"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6133,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25089:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6134,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25095:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"25100:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6136,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25104:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6143,"nodeType":"ExpressionStatement","src":"25089:23:28"},{"expression":{"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6144,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25199:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6145,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25205:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6146,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"25210:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6147,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25214:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6154,"nodeType":"ExpressionStatement","src":"25199:23:28"},{"expression":{"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6155,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25309:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6156,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25315:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6157,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"25320:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6158,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25324:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6165,"nodeType":"ExpressionStatement","src":"25309:23:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6166,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25698:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6169,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25719:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6170,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"25724:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6171,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"25728:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6167,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"25703:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"25703:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5967,"id":6176,"nodeType":"Return","src":"25691:40:28"}]}]},"documentation":{"id":5961,"nodeType":"StructuredDocumentation","src":"20270:292:28","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6179,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:28","nodeType":"FunctionDefinition","parameters":{"id":5964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"a","nameLocation":"20589:1:28","nodeType":"VariableDeclaration","scope":6179,"src":"20581:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5962,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:28"},"returnParameters":{"id":5967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6179,"src":"20615:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5965,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:28"},"scope":6635,"src":"20567:5181:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6212,"nodeType":"Block","src":"25921:171:28","statements":[{"id":6211,"nodeType":"UncheckedBlock","src":"25931:155:28","statements":[{"assignments":[6191],"declarations":[{"constant":false,"id":6191,"mutability":"mutable","name":"result","nameLocation":"25963:6:28","nodeType":"VariableDeclaration","scope":6211,"src":"25955:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6190,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6195,"initialValue":{"arguments":[{"id":6193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"25977:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6192,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6179,6213],"referencedDeclaration":6179,"src":"25972:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"26000:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6200,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"26042:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}],"id":6199,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"26025:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5026_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"26055:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"26064:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6205,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"26073:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6197,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"26009:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"26009:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6189,"id":6210,"nodeType":"Return","src":"25993:82:28"}]}]},"documentation":{"id":6180,"nodeType":"StructuredDocumentation","src":"25754:86:28","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6213,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:28","nodeType":"FunctionDefinition","parameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"a","nameLocation":"25867:1:28","nodeType":"VariableDeclaration","scope":6213,"src":"25859:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6181,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6185,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:28","nodeType":"VariableDeclaration","scope":6213,"src":"25870:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"},"typeName":{"id":6184,"nodeType":"UserDefinedTypeName","pathNode":{"id":6183,"name":"Rounding","nameLocations":["25870:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5026,"src":"25870:8:28"},"referencedDeclaration":5026,"src":"25870:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:28"},"returnParameters":{"id":6189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6213,"src":"25912:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6187,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:28"},"scope":6635,"src":"25845:247:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6303,"nodeType":"Block","src":"26281:2334:28","statements":[{"expression":{"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6221,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"26363:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6224,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"26383:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6222,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"26367:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"26367:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:28","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6231,"nodeType":"ExpressionStatement","src":"26363:64:28"},{"expression":{"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6232,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"26503:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6235,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"26525:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6236,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"26530:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6233,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"26508:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"26508:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:28","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6245,"nodeType":"ExpressionStatement","src":"26503:56:28"},{"expression":{"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6246,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"26634:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6249,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"26656:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6250,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"26661:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6247,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"26639:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"26639:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6259,"nodeType":"ExpressionStatement","src":"26634:48:28"},{"expression":{"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6260,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"26757:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6263,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"26779:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6264,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"26784:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6261,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"26762:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"26762:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6273,"nodeType":"ExpressionStatement","src":"26757:44:28"},{"expression":{"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6274,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"26874:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6277,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"26896:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6278,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"26901:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6275,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"26879:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"26879:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6287,"nodeType":"ExpressionStatement","src":"26874:42:28"},{"expression":{"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6288,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"26988:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"27010:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6292,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"27015:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:28","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6289,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"26993:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"26993:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6301,"nodeType":"ExpressionStatement","src":"26988:41:28"},{"AST":{"nativeSrc":"28490:119:28","nodeType":"YulBlock","src":"28490:119:28","statements":[{"nativeSrc":"28504:95:28","nodeType":"YulAssignment","src":"28504:95:28","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:28","nodeType":"YulIdentifier","src":"28512:1:28"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:28","nodeType":"YulIdentifier","src":"28524:1:28"},{"name":"x","nativeSrc":"28527:1:28","nodeType":"YulIdentifier","src":"28527:1:28"}],"functionName":{"name":"shr","nativeSrc":"28520:3:28","nodeType":"YulIdentifier","src":"28520:3:28"},"nativeSrc":"28520:9:28","nodeType":"YulFunctionCall","src":"28520:9:28"},{"kind":"number","nativeSrc":"28531:66:28","nodeType":"YulLiteral","src":"28531:66:28","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:28","nodeType":"YulIdentifier","src":"28515:4:28"},"nativeSrc":"28515:83:28","nodeType":"YulFunctionCall","src":"28515:83:28"}],"functionName":{"name":"or","nativeSrc":"28509:2:28","nodeType":"YulIdentifier","src":"28509:2:28"},"nativeSrc":"28509:90:28","nodeType":"YulFunctionCall","src":"28509:90:28"},"variableNames":[{"name":"r","nativeSrc":"28504:1:28","nodeType":"YulIdentifier","src":"28504:1:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6219,"isOffset":false,"isSlot":false,"src":"28504:1:28","valueSize":1},{"declaration":6219,"isOffset":false,"isSlot":false,"src":"28512:1:28","valueSize":1},{"declaration":6219,"isOffset":false,"isSlot":false,"src":"28524:1:28","valueSize":1},{"declaration":6216,"isOffset":false,"isSlot":false,"src":"28527:1:28","valueSize":1}],"flags":["memory-safe"],"id":6302,"nodeType":"InlineAssembly","src":"28465:144:28"}]},"documentation":{"id":6214,"nodeType":"StructuredDocumentation","src":"26098:119:28","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6304,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:28","nodeType":"FunctionDefinition","parameters":{"id":6217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6216,"mutability":"mutable","name":"x","nameLocation":"26244:1:28","nodeType":"VariableDeclaration","scope":6304,"src":"26236:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6215,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:28"},"returnParameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"mutability":"mutable","name":"r","nameLocation":"26278:1:28","nodeType":"VariableDeclaration","scope":6304,"src":"26270:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6218,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:28"},"scope":6635,"src":"26222:2393:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6337,"nodeType":"Block","src":"28848:175:28","statements":[{"id":6336,"nodeType":"UncheckedBlock","src":"28858:159:28","statements":[{"assignments":[6316],"declarations":[{"constant":false,"id":6316,"mutability":"mutable","name":"result","nameLocation":"28890:6:28","nodeType":"VariableDeclaration","scope":6336,"src":"28882:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6315,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6320,"initialValue":{"arguments":[{"id":6318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"28904:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6317,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6304,6338],"referencedDeclaration":6304,"src":"28899:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"28931:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6325,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"28973:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}],"id":6324,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"28956:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5026_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"28991:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"29000:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6322,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"28940:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"28940:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6314,"id":6335,"nodeType":"Return","src":"28924:82:28"}]}]},"documentation":{"id":6305,"nodeType":"StructuredDocumentation","src":"28621:142:28","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6338,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:28","nodeType":"FunctionDefinition","parameters":{"id":6311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6307,"mutability":"mutable","name":"value","nameLocation":"28790:5:28","nodeType":"VariableDeclaration","scope":6338,"src":"28782:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6306,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6310,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:28","nodeType":"VariableDeclaration","scope":6338,"src":"28797:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"},"typeName":{"id":6309,"nodeType":"UserDefinedTypeName","pathNode":{"id":6308,"name":"Rounding","nameLocations":["28797:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5026,"src":"28797:8:28"},"referencedDeclaration":5026,"src":"28797:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:28"},"returnParameters":{"id":6314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6338,"src":"28839:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6312,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:28"},"scope":6635,"src":"28768:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6466,"nodeType":"Block","src":"29216:854:28","statements":[{"assignments":[6347],"declarations":[{"constant":false,"id":6347,"mutability":"mutable","name":"result","nameLocation":"29234:6:28","nodeType":"VariableDeclaration","scope":6466,"src":"29226:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6346,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6349,"initialValue":{"hexValue":"30","id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:28"},{"id":6463,"nodeType":"UncheckedBlock","src":"29254:787:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29282:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6366,"nodeType":"IfStatement","src":"29278:103:28","trueBody":{"id":6365,"nodeType":"Block","src":"29301:80:28","statements":[{"expression":{"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29319:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6360,"nodeType":"ExpressionStatement","src":"29319:17:28"},{"expression":{"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"29354:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6364,"nodeType":"ExpressionStatement","src":"29354:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29398:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6383,"nodeType":"IfStatement","src":"29394:103:28","trueBody":{"id":6382,"nodeType":"Block","src":"29417:80:28","statements":[{"expression":{"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29435:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6377,"nodeType":"ExpressionStatement","src":"29435:17:28"},{"expression":{"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"29470:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6381,"nodeType":"ExpressionStatement","src":"29470:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29514:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6400,"nodeType":"IfStatement","src":"29510:103:28","trueBody":{"id":6399,"nodeType":"Block","src":"29533:80:28","statements":[{"expression":{"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29551:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6394,"nodeType":"ExpressionStatement","src":"29551:17:28"},{"expression":{"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"29586:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6398,"nodeType":"ExpressionStatement","src":"29586:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29630:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6417,"nodeType":"IfStatement","src":"29626:100:28","trueBody":{"id":6416,"nodeType":"Block","src":"29648:78:28","statements":[{"expression":{"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29666:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6411,"nodeType":"ExpressionStatement","src":"29666:16:28"},{"expression":{"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"29700:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6415,"nodeType":"ExpressionStatement","src":"29700:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29743:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6434,"nodeType":"IfStatement","src":"29739:100:28","trueBody":{"id":6433,"nodeType":"Block","src":"29761:78:28","statements":[{"expression":{"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29779:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6428,"nodeType":"ExpressionStatement","src":"29779:16:28"},{"expression":{"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"29813:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6432,"nodeType":"ExpressionStatement","src":"29813:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29856:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6451,"nodeType":"IfStatement","src":"29852:100:28","trueBody":{"id":6450,"nodeType":"Block","src":"29874:78:28","statements":[{"expression":{"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29892:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6445,"nodeType":"ExpressionStatement","src":"29892:16:28"},{"expression":{"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"29926:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6449,"nodeType":"ExpressionStatement","src":"29926:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29969:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6462,"nodeType":"IfStatement","src":"29965:66:28","trueBody":{"id":6461,"nodeType":"Block","src":"29987:44:28","statements":[{"expression":{"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"30005:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6460,"nodeType":"ExpressionStatement","src":"30005:11:28"}]}}]},{"expression":{"id":6464,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"30057:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6345,"id":6465,"nodeType":"Return","src":"30050:13:28"}]},"documentation":{"id":6339,"nodeType":"StructuredDocumentation","src":"29029:120:28","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6467,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:28","nodeType":"FunctionDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"value","nameLocation":"29177:5:28","nodeType":"VariableDeclaration","scope":6467,"src":"29169:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6340,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:28"},"returnParameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6467,"src":"29207:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6343,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:28"},"scope":6635,"src":"29154:916:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6500,"nodeType":"Block","src":"30305:177:28","statements":[{"id":6499,"nodeType":"UncheckedBlock","src":"30315:161:28","statements":[{"assignments":[6479],"declarations":[{"constant":false,"id":6479,"mutability":"mutable","name":"result","nameLocation":"30347:6:28","nodeType":"VariableDeclaration","scope":6499,"src":"30339:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6478,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6483,"initialValue":{"arguments":[{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"30362:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6480,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6467,6501],"referencedDeclaration":6467,"src":"30356:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"30389:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6488,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"30431:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}],"id":6487,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"30414:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5026_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"30450:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"30459:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6485,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"30398:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"30398:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6477,"id":6498,"nodeType":"Return","src":"30382:83:28"}]}]},"documentation":{"id":6468,"nodeType":"StructuredDocumentation","src":"30076:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6501,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:28","nodeType":"FunctionDefinition","parameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6470,"mutability":"mutable","name":"value","nameLocation":"30247:5:28","nodeType":"VariableDeclaration","scope":6501,"src":"30239:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6469,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6473,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:28","nodeType":"VariableDeclaration","scope":6501,"src":"30254:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"},"typeName":{"id":6472,"nodeType":"UserDefinedTypeName","pathNode":{"id":6471,"name":"Rounding","nameLocations":["30254:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5026,"src":"30254:8:28"},"referencedDeclaration":5026,"src":"30254:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:28"},"returnParameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6501,"src":"30296:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6475,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:28"},"scope":6635,"src":"30224:258:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6577,"nodeType":"Block","src":"30800:675:28","statements":[{"expression":{"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6509,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"30882:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6512,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"30902:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6510,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"30886:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"30886:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:28","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6519,"nodeType":"ExpressionStatement","src":"30882:64:28"},{"expression":{"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6520,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"31022:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6523,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"31044:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6524,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"31049:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6521,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"31027:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"31027:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:28","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6533,"nodeType":"ExpressionStatement","src":"31022:56:28"},{"expression":{"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6534,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"31153:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6537,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"31175:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6538,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"31180:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6535,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"31158:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"31158:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6547,"nodeType":"ExpressionStatement","src":"31153:48:28"},{"expression":{"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6548,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"31276:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"31298:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6552,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"31303:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6549,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"31281:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"31281:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6561,"nodeType":"ExpressionStatement","src":"31276:44:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6562,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"31426:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6568,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"31453:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6569,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"31458:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6566,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"31436:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"31436:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6508,"id":6576,"nodeType":"Return","src":"31418:50:28"}]},"documentation":{"id":6502,"nodeType":"StructuredDocumentation","src":"30488:246:28","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6578,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:28","nodeType":"FunctionDefinition","parameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"x","nameLocation":"30763:1:28","nodeType":"VariableDeclaration","scope":6578,"src":"30755:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6503,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:28"},"returnParameters":{"id":6508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6507,"mutability":"mutable","name":"r","nameLocation":"30797:1:28","nodeType":"VariableDeclaration","scope":6578,"src":"30789:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6506,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:28"},"scope":6635,"src":"30739:736:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6614,"nodeType":"Block","src":"31712:184:28","statements":[{"id":6613,"nodeType":"UncheckedBlock","src":"31722:168:28","statements":[{"assignments":[6590],"declarations":[{"constant":false,"id":6590,"mutability":"mutable","name":"result","nameLocation":"31754:6:28","nodeType":"VariableDeclaration","scope":6613,"src":"31746:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6589,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6594,"initialValue":{"arguments":[{"id":6592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"31770:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6591,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6578,6615],"referencedDeclaration":6578,"src":"31763:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6595,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"31797:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6599,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"31839:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}],"id":6598,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"31822:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5026_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6602,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"31858:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"31873:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6596,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"31806:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"31806:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6588,"id":6612,"nodeType":"Return","src":"31790:89:28"}]}]},"documentation":{"id":6579,"nodeType":"StructuredDocumentation","src":"31481:144:28","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6615,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:28","nodeType":"FunctionDefinition","parameters":{"id":6585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6581,"mutability":"mutable","name":"value","nameLocation":"31654:5:28","nodeType":"VariableDeclaration","scope":6615,"src":"31646:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6580,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6584,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:28","nodeType":"VariableDeclaration","scope":6615,"src":"31661:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"},"typeName":{"id":6583,"nodeType":"UserDefinedTypeName","pathNode":{"id":6582,"name":"Rounding","nameLocations":["31661:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5026,"src":"31661:8:28"},"referencedDeclaration":5026,"src":"31661:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:28"},"returnParameters":{"id":6588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6615,"src":"31703:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6586,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:28"},"scope":6635,"src":"31630:266:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6633,"nodeType":"Block","src":"32094:48:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6626,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"32117:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}],"id":6625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6624,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:28","typeDescriptions":{}}},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6623,"id":6632,"nodeType":"Return","src":"32104:31:28"}]},"documentation":{"id":6616,"nodeType":"StructuredDocumentation","src":"31902:113:28","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6634,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:28","nodeType":"FunctionDefinition","parameters":{"id":6620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:28","nodeType":"VariableDeclaration","scope":6634,"src":"32046:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"},"typeName":{"id":6618,"nodeType":"UserDefinedTypeName","pathNode":{"id":6617,"name":"Rounding","nameLocations":["32046:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5026,"src":"32046:8:28"},"referencedDeclaration":5026,"src":"32046:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5026","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:28"},"returnParameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6634,"src":"32088:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6621,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:28"},"scope":6635,"src":"32020:122:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6636,"src":"281:31863:28","usedErrors":[],"usedEvents":[]}],"src":"103:32042:28"},"id":28},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8400]},"id":8401,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6637,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6638,"nodeType":"StructuredDocumentation","src":"218:550:29","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8400,"linearizedBaseContracts":[8400],"name":"SafeCast","nameLocation":"777:8:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6639,"nodeType":"StructuredDocumentation","src":"792:68:29","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6645,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:29","nodeType":"ErrorDefinition","parameters":{"id":6644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6641,"mutability":"mutable","name":"bits","nameLocation":"908:4:29","nodeType":"VariableDeclaration","scope":6645,"src":"902:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6640,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6643,"mutability":"mutable","name":"value","nameLocation":"922:5:29","nodeType":"VariableDeclaration","scope":6645,"src":"914:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6642,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:29"},"src":"865:64:29"},{"documentation":{"id":6646,"nodeType":"StructuredDocumentation","src":"935:75:29","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6650,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:29","nodeType":"ErrorDefinition","parameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"mutability":"mutable","name":"value","nameLocation":"1056:5:29","nodeType":"VariableDeclaration","scope":6650,"src":"1049:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6647,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:29"},"src":"1015:48:29"},{"documentation":{"id":6651,"nodeType":"StructuredDocumentation","src":"1069:67:29","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6657,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:29","nodeType":"ErrorDefinition","parameters":{"id":6656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6653,"mutability":"mutable","name":"bits","nameLocation":"1183:4:29","nodeType":"VariableDeclaration","scope":6657,"src":"1177:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6652,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6655,"mutability":"mutable","name":"value","nameLocation":"1196:5:29","nodeType":"VariableDeclaration","scope":6657,"src":"1189:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6654,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:29"},"src":"1141:62:29"},{"documentation":{"id":6658,"nodeType":"StructuredDocumentation","src":"1209:75:29","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6662,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:29","nodeType":"ErrorDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"value","nameLocation":"1331:5:29","nodeType":"VariableDeclaration","scope":6662,"src":"1323:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:29"},"src":"1289:49:29"},{"body":{"id":6689,"nodeType":"Block","src":"1695:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"1709:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6672,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:29","memberName":"max","nodeType":"MemberAccess","src":"1717:17:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6683,"nodeType":"IfStatement","src":"1705:105:29","trueBody":{"id":6682,"nodeType":"Block","src":"1736:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"1793:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6677,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"1757:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6681,"nodeType":"RevertStatement","src":"1750:49:29"}]}},{"expression":{"arguments":[{"id":6686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"1834:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6684,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:29","typeDescriptions":{}}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6669,"id":6688,"nodeType":"Return","src":"1819:21:29"}]},"documentation":{"id":6663,"nodeType":"StructuredDocumentation","src":"1344:280:29","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6690,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:29","nodeType":"FunctionDefinition","parameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"value","nameLocation":"1656:5:29","nodeType":"VariableDeclaration","scope":6690,"src":"1648:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:29"},"returnParameters":{"id":6669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6690,"src":"1686:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6667,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:29"},"scope":8400,"src":"1629:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6717,"nodeType":"Block","src":"2204:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"2218:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6700,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6699,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:29","memberName":"max","nodeType":"MemberAccess","src":"2226:17:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6711,"nodeType":"IfStatement","src":"2214:105:29","trueBody":{"id":6710,"nodeType":"Block","src":"2245:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"2302:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6705,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"2266:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6709,"nodeType":"RevertStatement","src":"2259:49:29"}]}},{"expression":{"arguments":[{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"2343:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6712,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:29","typeDescriptions":{}}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6697,"id":6716,"nodeType":"Return","src":"2328:21:29"}]},"documentation":{"id":6691,"nodeType":"StructuredDocumentation","src":"1853:280:29","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6718,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:29","nodeType":"FunctionDefinition","parameters":{"id":6694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"value","nameLocation":"2165:5:29","nodeType":"VariableDeclaration","scope":6718,"src":"2157:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6692,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:29"},"returnParameters":{"id":6697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6718,"src":"2195:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6695,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:29"},"scope":8400,"src":"2138:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6745,"nodeType":"Block","src":"2713:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"2727:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6728,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:29","memberName":"max","nodeType":"MemberAccess","src":"2735:17:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6739,"nodeType":"IfStatement","src":"2723:105:29","trueBody":{"id":6738,"nodeType":"Block","src":"2754:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"2811:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6733,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"2775:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6737,"nodeType":"RevertStatement","src":"2768:49:29"}]}},{"expression":{"arguments":[{"id":6742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"2852:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6740,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:29","typeDescriptions":{}}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6725,"id":6744,"nodeType":"Return","src":"2837:21:29"}]},"documentation":{"id":6719,"nodeType":"StructuredDocumentation","src":"2362:280:29","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6746,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:29","nodeType":"FunctionDefinition","parameters":{"id":6722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6721,"mutability":"mutable","name":"value","nameLocation":"2674:5:29","nodeType":"VariableDeclaration","scope":6746,"src":"2666:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:29"},"returnParameters":{"id":6725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6746,"src":"2704:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6723,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:29"},"scope":8400,"src":"2647:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6773,"nodeType":"Block","src":"3222:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"3236:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6756,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:29","memberName":"max","nodeType":"MemberAccess","src":"3244:17:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6767,"nodeType":"IfStatement","src":"3232:105:29","trueBody":{"id":6766,"nodeType":"Block","src":"3263:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"3320:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6761,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"3284:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6765,"nodeType":"RevertStatement","src":"3277:49:29"}]}},{"expression":{"arguments":[{"id":6770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"3361:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6768,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:29","typeDescriptions":{}}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6753,"id":6772,"nodeType":"Return","src":"3346:21:29"}]},"documentation":{"id":6747,"nodeType":"StructuredDocumentation","src":"2871:280:29","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6774,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:29","nodeType":"FunctionDefinition","parameters":{"id":6750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"value","nameLocation":"3183:5:29","nodeType":"VariableDeclaration","scope":6774,"src":"3175:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6748,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:29"},"returnParameters":{"id":6753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6774,"src":"3213:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6751,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:29"},"scope":8400,"src":"3156:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6801,"nodeType":"Block","src":"3731:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"3745:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6784,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:29","memberName":"max","nodeType":"MemberAccess","src":"3753:17:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6795,"nodeType":"IfStatement","src":"3741:105:29","trueBody":{"id":6794,"nodeType":"Block","src":"3772:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"3829:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6789,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"3793:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6793,"nodeType":"RevertStatement","src":"3786:49:29"}]}},{"expression":{"arguments":[{"id":6798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"3870:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6796,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:29","typeDescriptions":{}}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6781,"id":6800,"nodeType":"Return","src":"3855:21:29"}]},"documentation":{"id":6775,"nodeType":"StructuredDocumentation","src":"3380:280:29","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:29","nodeType":"FunctionDefinition","parameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"value","nameLocation":"3692:5:29","nodeType":"VariableDeclaration","scope":6802,"src":"3684:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:29"},"returnParameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6802,"src":"3722:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6779,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:29"},"scope":8400,"src":"3665:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6829,"nodeType":"Block","src":"4240:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"4254:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6812,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:29","memberName":"max","nodeType":"MemberAccess","src":"4262:17:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6823,"nodeType":"IfStatement","src":"4250:105:29","trueBody":{"id":6822,"nodeType":"Block","src":"4281:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"4338:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6817,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"4302:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6821,"nodeType":"RevertStatement","src":"4295:49:29"}]}},{"expression":{"arguments":[{"id":6826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"4379:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6824,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:29","typeDescriptions":{}}},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6809,"id":6828,"nodeType":"Return","src":"4364:21:29"}]},"documentation":{"id":6803,"nodeType":"StructuredDocumentation","src":"3889:280:29","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6830,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:29","nodeType":"FunctionDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"value","nameLocation":"4201:5:29","nodeType":"VariableDeclaration","scope":6830,"src":"4193:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6804,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:29"},"returnParameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6830,"src":"4231:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6807,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:29"},"scope":8400,"src":"4174:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6857,"nodeType":"Block","src":"4749:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"4763:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6840,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:29","memberName":"max","nodeType":"MemberAccess","src":"4771:17:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6851,"nodeType":"IfStatement","src":"4759:105:29","trueBody":{"id":6850,"nodeType":"Block","src":"4790:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"4847:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6845,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"4811:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6849,"nodeType":"RevertStatement","src":"4804:49:29"}]}},{"expression":{"arguments":[{"id":6854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"4888:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6852,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:29","typeDescriptions":{}}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6837,"id":6856,"nodeType":"Return","src":"4873:21:29"}]},"documentation":{"id":6831,"nodeType":"StructuredDocumentation","src":"4398:280:29","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6858,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:29","nodeType":"FunctionDefinition","parameters":{"id":6834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6833,"mutability":"mutable","name":"value","nameLocation":"4710:5:29","nodeType":"VariableDeclaration","scope":6858,"src":"4702:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6832,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:29"},"returnParameters":{"id":6837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6858,"src":"4740:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6835,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:29"},"scope":8400,"src":"4683:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6885,"nodeType":"Block","src":"5258:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"5272:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6868,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6867,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:29","memberName":"max","nodeType":"MemberAccess","src":"5280:17:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6879,"nodeType":"IfStatement","src":"5268:105:29","trueBody":{"id":6878,"nodeType":"Block","src":"5299:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"5356:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6873,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"5320:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6877,"nodeType":"RevertStatement","src":"5313:49:29"}]}},{"expression":{"arguments":[{"id":6882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"5397:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6880,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:29","typeDescriptions":{}}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6865,"id":6884,"nodeType":"Return","src":"5382:21:29"}]},"documentation":{"id":6859,"nodeType":"StructuredDocumentation","src":"4907:280:29","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6886,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:29","nodeType":"FunctionDefinition","parameters":{"id":6862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6861,"mutability":"mutable","name":"value","nameLocation":"5219:5:29","nodeType":"VariableDeclaration","scope":6886,"src":"5211:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6860,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:29"},"returnParameters":{"id":6865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6886,"src":"5249:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6863,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:29"},"scope":8400,"src":"5192:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6913,"nodeType":"Block","src":"5767:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"5781:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6896,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6895,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:29","memberName":"max","nodeType":"MemberAccess","src":"5789:17:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6907,"nodeType":"IfStatement","src":"5777:105:29","trueBody":{"id":6906,"nodeType":"Block","src":"5808:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"5865:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6901,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"5829:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6905,"nodeType":"RevertStatement","src":"5822:49:29"}]}},{"expression":{"arguments":[{"id":6910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"5906:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6908,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:29","typeDescriptions":{}}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6893,"id":6912,"nodeType":"Return","src":"5891:21:29"}]},"documentation":{"id":6887,"nodeType":"StructuredDocumentation","src":"5416:280:29","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6914,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:29","nodeType":"FunctionDefinition","parameters":{"id":6890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6889,"mutability":"mutable","name":"value","nameLocation":"5728:5:29","nodeType":"VariableDeclaration","scope":6914,"src":"5720:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6888,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:29"},"returnParameters":{"id":6893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6914,"src":"5758:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6891,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:29"},"scope":8400,"src":"5701:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6941,"nodeType":"Block","src":"6276:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"6290:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6924,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6923,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:29","memberName":"max","nodeType":"MemberAccess","src":"6298:17:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6935,"nodeType":"IfStatement","src":"6286:105:29","trueBody":{"id":6934,"nodeType":"Block","src":"6317:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"6374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6929,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"6338:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6933,"nodeType":"RevertStatement","src":"6331:49:29"}]}},{"expression":{"arguments":[{"id":6938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"6415:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6936,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:29","typeDescriptions":{}}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6921,"id":6940,"nodeType":"Return","src":"6400:21:29"}]},"documentation":{"id":6915,"nodeType":"StructuredDocumentation","src":"5925:280:29","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6942,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:29","nodeType":"FunctionDefinition","parameters":{"id":6918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6917,"mutability":"mutable","name":"value","nameLocation":"6237:5:29","nodeType":"VariableDeclaration","scope":6942,"src":"6229:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6916,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:29"},"returnParameters":{"id":6921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6942,"src":"6267:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6919,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:29"},"scope":8400,"src":"6210:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6969,"nodeType":"Block","src":"6785:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"6799:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6952,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:29","memberName":"max","nodeType":"MemberAccess","src":"6807:17:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6963,"nodeType":"IfStatement","src":"6795:105:29","trueBody":{"id":6962,"nodeType":"Block","src":"6826:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"6883:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6957,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"6847:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6961,"nodeType":"RevertStatement","src":"6840:49:29"}]}},{"expression":{"arguments":[{"id":6966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"6924:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6964,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:29","typeDescriptions":{}}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6949,"id":6968,"nodeType":"Return","src":"6909:21:29"}]},"documentation":{"id":6943,"nodeType":"StructuredDocumentation","src":"6434:280:29","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6970,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:29","nodeType":"FunctionDefinition","parameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"value","nameLocation":"6746:5:29","nodeType":"VariableDeclaration","scope":6970,"src":"6738:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6944,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:29"},"returnParameters":{"id":6949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6970,"src":"6776:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6947,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:29"},"scope":8400,"src":"6719:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6997,"nodeType":"Block","src":"7294:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"7308:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6980,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6979,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:29","memberName":"max","nodeType":"MemberAccess","src":"7316:17:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6991,"nodeType":"IfStatement","src":"7304:105:29","trueBody":{"id":6990,"nodeType":"Block","src":"7335:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"7392:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6985,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"7356:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6989,"nodeType":"RevertStatement","src":"7349:49:29"}]}},{"expression":{"arguments":[{"id":6994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"7433:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6992,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:29","typeDescriptions":{}}},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6977,"id":6996,"nodeType":"Return","src":"7418:21:29"}]},"documentation":{"id":6971,"nodeType":"StructuredDocumentation","src":"6943:280:29","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6998,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:29","nodeType":"FunctionDefinition","parameters":{"id":6974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6973,"mutability":"mutable","name":"value","nameLocation":"7255:5:29","nodeType":"VariableDeclaration","scope":6998,"src":"7247:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6972,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:29"},"returnParameters":{"id":6977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6998,"src":"7285:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6975,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:29"},"scope":8400,"src":"7228:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7025,"nodeType":"Block","src":"7803:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"7817:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7008,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7007,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:29","memberName":"max","nodeType":"MemberAccess","src":"7825:17:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7019,"nodeType":"IfStatement","src":"7813:105:29","trueBody":{"id":7018,"nodeType":"Block","src":"7844:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"7901:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7013,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"7865:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7017,"nodeType":"RevertStatement","src":"7858:49:29"}]}},{"expression":{"arguments":[{"id":7022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"7942:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7020,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:29","typeDescriptions":{}}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7005,"id":7024,"nodeType":"Return","src":"7927:21:29"}]},"documentation":{"id":6999,"nodeType":"StructuredDocumentation","src":"7452:280:29","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7026,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:29","nodeType":"FunctionDefinition","parameters":{"id":7002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7001,"mutability":"mutable","name":"value","nameLocation":"7764:5:29","nodeType":"VariableDeclaration","scope":7026,"src":"7756:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7000,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:29"},"returnParameters":{"id":7005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7026,"src":"7794:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7003,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:29"},"scope":8400,"src":"7737:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7053,"nodeType":"Block","src":"8312:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"8326:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7036,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7035,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:29","memberName":"max","nodeType":"MemberAccess","src":"8334:17:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7047,"nodeType":"IfStatement","src":"8322:105:29","trueBody":{"id":7046,"nodeType":"Block","src":"8353:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"8410:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7041,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"8374:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7045,"nodeType":"RevertStatement","src":"8367:49:29"}]}},{"expression":{"arguments":[{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"8451:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7048,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:29","typeDescriptions":{}}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7033,"id":7052,"nodeType":"Return","src":"8436:21:29"}]},"documentation":{"id":7027,"nodeType":"StructuredDocumentation","src":"7961:280:29","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7054,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:29","nodeType":"FunctionDefinition","parameters":{"id":7030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7029,"mutability":"mutable","name":"value","nameLocation":"8273:5:29","nodeType":"VariableDeclaration","scope":7054,"src":"8265:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7028,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:29"},"returnParameters":{"id":7033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7054,"src":"8303:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7031,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:29"},"scope":8400,"src":"8246:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7081,"nodeType":"Block","src":"8821:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"8835:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7064,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7063,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:29","memberName":"max","nodeType":"MemberAccess","src":"8843:17:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7075,"nodeType":"IfStatement","src":"8831:105:29","trueBody":{"id":7074,"nodeType":"Block","src":"8862:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"8919:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7069,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"8883:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7073,"nodeType":"RevertStatement","src":"8876:49:29"}]}},{"expression":{"arguments":[{"id":7078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"8960:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7076,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:29","typeDescriptions":{}}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7061,"id":7080,"nodeType":"Return","src":"8945:21:29"}]},"documentation":{"id":7055,"nodeType":"StructuredDocumentation","src":"8470:280:29","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7082,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:29","nodeType":"FunctionDefinition","parameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"value","nameLocation":"8782:5:29","nodeType":"VariableDeclaration","scope":7082,"src":"8774:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7056,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:29"},"returnParameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7082,"src":"8812:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7059,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:29"},"scope":8400,"src":"8755:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7109,"nodeType":"Block","src":"9330:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"9344:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7092,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7091,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:29","memberName":"max","nodeType":"MemberAccess","src":"9352:17:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7103,"nodeType":"IfStatement","src":"9340:105:29","trueBody":{"id":7102,"nodeType":"Block","src":"9371:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"9428:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7097,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"9392:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7101,"nodeType":"RevertStatement","src":"9385:49:29"}]}},{"expression":{"arguments":[{"id":7106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"9469:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7104,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:29","typeDescriptions":{}}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7089,"id":7108,"nodeType":"Return","src":"9454:21:29"}]},"documentation":{"id":7083,"nodeType":"StructuredDocumentation","src":"8979:280:29","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7110,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:29","nodeType":"FunctionDefinition","parameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"value","nameLocation":"9291:5:29","nodeType":"VariableDeclaration","scope":7110,"src":"9283:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7084,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:29"},"returnParameters":{"id":7089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7110,"src":"9321:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7087,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:29"},"scope":8400,"src":"9264:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7137,"nodeType":"Block","src":"9839:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"9853:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7120,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7119,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:29","memberName":"max","nodeType":"MemberAccess","src":"9861:17:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7131,"nodeType":"IfStatement","src":"9849:105:29","trueBody":{"id":7130,"nodeType":"Block","src":"9880:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"9937:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7125,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"9901:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7129,"nodeType":"RevertStatement","src":"9894:49:29"}]}},{"expression":{"arguments":[{"id":7134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"9978:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7132,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:29","typeDescriptions":{}}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7117,"id":7136,"nodeType":"Return","src":"9963:21:29"}]},"documentation":{"id":7111,"nodeType":"StructuredDocumentation","src":"9488:280:29","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7138,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:29","nodeType":"FunctionDefinition","parameters":{"id":7114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"value","nameLocation":"9800:5:29","nodeType":"VariableDeclaration","scope":7138,"src":"9792:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7112,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:29"},"returnParameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7138,"src":"9830:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7115,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:29"},"scope":8400,"src":"9773:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7165,"nodeType":"Block","src":"10348:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"10362:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7148,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7147,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:29","memberName":"max","nodeType":"MemberAccess","src":"10370:17:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7159,"nodeType":"IfStatement","src":"10358:105:29","trueBody":{"id":7158,"nodeType":"Block","src":"10389:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"10446:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7153,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"10410:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7157,"nodeType":"RevertStatement","src":"10403:49:29"}]}},{"expression":{"arguments":[{"id":7162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"10487:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7160,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:29","typeDescriptions":{}}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7145,"id":7164,"nodeType":"Return","src":"10472:21:29"}]},"documentation":{"id":7139,"nodeType":"StructuredDocumentation","src":"9997:280:29","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7166,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:29","nodeType":"FunctionDefinition","parameters":{"id":7142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7141,"mutability":"mutable","name":"value","nameLocation":"10309:5:29","nodeType":"VariableDeclaration","scope":7166,"src":"10301:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7140,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:29"},"returnParameters":{"id":7145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7166,"src":"10339:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7143,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:29"},"scope":8400,"src":"10282:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7193,"nodeType":"Block","src":"10857:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"10871:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7176,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7175,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:29","memberName":"max","nodeType":"MemberAccess","src":"10879:17:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7187,"nodeType":"IfStatement","src":"10867:105:29","trueBody":{"id":7186,"nodeType":"Block","src":"10898:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"10955:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7181,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"10919:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7185,"nodeType":"RevertStatement","src":"10912:49:29"}]}},{"expression":{"arguments":[{"id":7190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"10996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7188,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:29","typeDescriptions":{}}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7173,"id":7192,"nodeType":"Return","src":"10981:21:29"}]},"documentation":{"id":7167,"nodeType":"StructuredDocumentation","src":"10506:280:29","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7194,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:29","nodeType":"FunctionDefinition","parameters":{"id":7170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7169,"mutability":"mutable","name":"value","nameLocation":"10818:5:29","nodeType":"VariableDeclaration","scope":7194,"src":"10810:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7168,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:29"},"returnParameters":{"id":7173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7194,"src":"10848:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7171,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:29"},"scope":8400,"src":"10791:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7221,"nodeType":"Block","src":"11360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"11374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7204,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7203,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:29","memberName":"max","nodeType":"MemberAccess","src":"11382:16:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7215,"nodeType":"IfStatement","src":"11370:103:29","trueBody":{"id":7214,"nodeType":"Block","src":"11400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"11456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7209,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"11421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7213,"nodeType":"RevertStatement","src":"11414:48:29"}]}},{"expression":{"arguments":[{"id":7218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"11496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7216,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:29","typeDescriptions":{}}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7201,"id":7220,"nodeType":"Return","src":"11482:20:29"}]},"documentation":{"id":7195,"nodeType":"StructuredDocumentation","src":"11015:276:29","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7222,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7197,"mutability":"mutable","name":"value","nameLocation":"11322:5:29","nodeType":"VariableDeclaration","scope":7222,"src":"11314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7196,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:29"},"returnParameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7222,"src":"11352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7199,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:29"},"scope":8400,"src":"11296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7249,"nodeType":"Block","src":"11860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"11874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7232,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7231,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:29","memberName":"max","nodeType":"MemberAccess","src":"11882:16:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7243,"nodeType":"IfStatement","src":"11870:103:29","trueBody":{"id":7242,"nodeType":"Block","src":"11900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"11956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7237,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"11921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7241,"nodeType":"RevertStatement","src":"11914:48:29"}]}},{"expression":{"arguments":[{"id":7246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"11996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7244,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:29","typeDescriptions":{}}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7229,"id":7248,"nodeType":"Return","src":"11982:20:29"}]},"documentation":{"id":7223,"nodeType":"StructuredDocumentation","src":"11515:276:29","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7250,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7225,"mutability":"mutable","name":"value","nameLocation":"11822:5:29","nodeType":"VariableDeclaration","scope":7250,"src":"11814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7224,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:29"},"returnParameters":{"id":7229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7250,"src":"11852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7227,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:29"},"scope":8400,"src":"11796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7277,"nodeType":"Block","src":"12360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"12374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7260,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7259,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:29","memberName":"max","nodeType":"MemberAccess","src":"12382:16:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7271,"nodeType":"IfStatement","src":"12370:103:29","trueBody":{"id":7270,"nodeType":"Block","src":"12400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"12456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7265,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"12421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7269,"nodeType":"RevertStatement","src":"12414:48:29"}]}},{"expression":{"arguments":[{"id":7274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"12496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7272,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:29","typeDescriptions":{}}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7257,"id":7276,"nodeType":"Return","src":"12482:20:29"}]},"documentation":{"id":7251,"nodeType":"StructuredDocumentation","src":"12015:276:29","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7278,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7253,"mutability":"mutable","name":"value","nameLocation":"12322:5:29","nodeType":"VariableDeclaration","scope":7278,"src":"12314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7252,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:29"},"returnParameters":{"id":7257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7278,"src":"12352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7255,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:29"},"scope":8400,"src":"12296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7305,"nodeType":"Block","src":"12860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"12874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7288,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7287,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:29","memberName":"max","nodeType":"MemberAccess","src":"12882:16:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7299,"nodeType":"IfStatement","src":"12870:103:29","trueBody":{"id":7298,"nodeType":"Block","src":"12900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"12956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7293,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"12921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7297,"nodeType":"RevertStatement","src":"12914:48:29"}]}},{"expression":{"arguments":[{"id":7302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"12996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7300,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:29","typeDescriptions":{}}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7285,"id":7304,"nodeType":"Return","src":"12982:20:29"}]},"documentation":{"id":7279,"nodeType":"StructuredDocumentation","src":"12515:276:29","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7306,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7281,"mutability":"mutable","name":"value","nameLocation":"12822:5:29","nodeType":"VariableDeclaration","scope":7306,"src":"12814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7280,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:29"},"returnParameters":{"id":7285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7306,"src":"12852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7283,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:29"},"scope":8400,"src":"12796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7333,"nodeType":"Block","src":"13360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"13374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7316,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7315,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:29","memberName":"max","nodeType":"MemberAccess","src":"13382:16:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7327,"nodeType":"IfStatement","src":"13370:103:29","trueBody":{"id":7326,"nodeType":"Block","src":"13400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"13456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7321,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"13421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7325,"nodeType":"RevertStatement","src":"13414:48:29"}]}},{"expression":{"arguments":[{"id":7330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"13496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7328,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:29","typeDescriptions":{}}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7313,"id":7332,"nodeType":"Return","src":"13482:20:29"}]},"documentation":{"id":7307,"nodeType":"StructuredDocumentation","src":"13015:276:29","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7334,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"value","nameLocation":"13322:5:29","nodeType":"VariableDeclaration","scope":7334,"src":"13314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7308,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:29"},"returnParameters":{"id":7313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7334,"src":"13352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7311,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:29"},"scope":8400,"src":"13296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7361,"nodeType":"Block","src":"13860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"13874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7344,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7343,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:29","memberName":"max","nodeType":"MemberAccess","src":"13882:16:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7355,"nodeType":"IfStatement","src":"13870:103:29","trueBody":{"id":7354,"nodeType":"Block","src":"13900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"13956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7349,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"13921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7353,"nodeType":"RevertStatement","src":"13914:48:29"}]}},{"expression":{"arguments":[{"id":7358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"13996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7356,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:29","typeDescriptions":{}}},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7341,"id":7360,"nodeType":"Return","src":"13982:20:29"}]},"documentation":{"id":7335,"nodeType":"StructuredDocumentation","src":"13515:276:29","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7362,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"value","nameLocation":"13822:5:29","nodeType":"VariableDeclaration","scope":7362,"src":"13814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7336,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:29"},"returnParameters":{"id":7341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7362,"src":"13852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7339,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:29"},"scope":8400,"src":"13796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7389,"nodeType":"Block","src":"14360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"14374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7372,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7371,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:29","memberName":"max","nodeType":"MemberAccess","src":"14382:16:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7383,"nodeType":"IfStatement","src":"14370:103:29","trueBody":{"id":7382,"nodeType":"Block","src":"14400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"14456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7377,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"14421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7381,"nodeType":"RevertStatement","src":"14414:48:29"}]}},{"expression":{"arguments":[{"id":7386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"14496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7384,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:29","typeDescriptions":{}}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7369,"id":7388,"nodeType":"Return","src":"14482:20:29"}]},"documentation":{"id":7363,"nodeType":"StructuredDocumentation","src":"14015:276:29","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7390,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7365,"mutability":"mutable","name":"value","nameLocation":"14322:5:29","nodeType":"VariableDeclaration","scope":7390,"src":"14314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7364,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:29"},"returnParameters":{"id":7369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7390,"src":"14352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7367,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:29"},"scope":8400,"src":"14296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7417,"nodeType":"Block","src":"14860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"14874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7400,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7399,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:29","memberName":"max","nodeType":"MemberAccess","src":"14882:16:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7411,"nodeType":"IfStatement","src":"14870:103:29","trueBody":{"id":7410,"nodeType":"Block","src":"14900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"14956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7405,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"14921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7409,"nodeType":"RevertStatement","src":"14914:48:29"}]}},{"expression":{"arguments":[{"id":7414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"14996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7412,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:29","typeDescriptions":{}}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7397,"id":7416,"nodeType":"Return","src":"14982:20:29"}]},"documentation":{"id":7391,"nodeType":"StructuredDocumentation","src":"14515:276:29","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7418,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7393,"mutability":"mutable","name":"value","nameLocation":"14822:5:29","nodeType":"VariableDeclaration","scope":7418,"src":"14814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7392,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:29"},"returnParameters":{"id":7397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7418,"src":"14852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7395,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:29"},"scope":8400,"src":"14796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7445,"nodeType":"Block","src":"15360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"15374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7428,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7427,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:29","memberName":"max","nodeType":"MemberAccess","src":"15382:16:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7439,"nodeType":"IfStatement","src":"15370:103:29","trueBody":{"id":7438,"nodeType":"Block","src":"15400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"15456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7433,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"15421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7437,"nodeType":"RevertStatement","src":"15414:48:29"}]}},{"expression":{"arguments":[{"id":7442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"15496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7440,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:29","typeDescriptions":{}}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7425,"id":7444,"nodeType":"Return","src":"15482:20:29"}]},"documentation":{"id":7419,"nodeType":"StructuredDocumentation","src":"15015:276:29","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7446,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7421,"mutability":"mutable","name":"value","nameLocation":"15322:5:29","nodeType":"VariableDeclaration","scope":7446,"src":"15314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7420,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:29"},"returnParameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7446,"src":"15352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7423,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:29"},"scope":8400,"src":"15296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7473,"nodeType":"Block","src":"15860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"15874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7456,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7455,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:29","memberName":"max","nodeType":"MemberAccess","src":"15882:16:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7467,"nodeType":"IfStatement","src":"15870:103:29","trueBody":{"id":7466,"nodeType":"Block","src":"15900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"15956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7461,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"15921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7465,"nodeType":"RevertStatement","src":"15914:48:29"}]}},{"expression":{"arguments":[{"id":7470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"15996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7468,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:29","typeDescriptions":{}}},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7453,"id":7472,"nodeType":"Return","src":"15982:20:29"}]},"documentation":{"id":7447,"nodeType":"StructuredDocumentation","src":"15515:276:29","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7474,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7449,"mutability":"mutable","name":"value","nameLocation":"15822:5:29","nodeType":"VariableDeclaration","scope":7474,"src":"15814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7448,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:29"},"returnParameters":{"id":7453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7474,"src":"15852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7451,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:29"},"scope":8400,"src":"15796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7501,"nodeType":"Block","src":"16360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"16374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7484,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:29","memberName":"max","nodeType":"MemberAccess","src":"16382:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7495,"nodeType":"IfStatement","src":"16370:103:29","trueBody":{"id":7494,"nodeType":"Block","src":"16400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"16456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7489,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"16421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7493,"nodeType":"RevertStatement","src":"16414:48:29"}]}},{"expression":{"arguments":[{"id":7498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"16496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7496,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:29","typeDescriptions":{}}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7481,"id":7500,"nodeType":"Return","src":"16482:20:29"}]},"documentation":{"id":7475,"nodeType":"StructuredDocumentation","src":"16015:276:29","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7502,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7477,"mutability":"mutable","name":"value","nameLocation":"16322:5:29","nodeType":"VariableDeclaration","scope":7502,"src":"16314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7476,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:29"},"returnParameters":{"id":7481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7502,"src":"16352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7479,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:29"},"scope":8400,"src":"16296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7529,"nodeType":"Block","src":"16854:146:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"16868:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7512,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7511,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:29","memberName":"max","nodeType":"MemberAccess","src":"16876:15:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7523,"nodeType":"IfStatement","src":"16864:101:29","trueBody":{"id":7522,"nodeType":"Block","src":"16893:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"16948:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7517,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"16914:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7521,"nodeType":"RevertStatement","src":"16907:47:29"}]}},{"expression":{"arguments":[{"id":7526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"16987:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7524,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:29","typeDescriptions":{}}},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7509,"id":7528,"nodeType":"Return","src":"16974:19:29"}]},"documentation":{"id":7503,"nodeType":"StructuredDocumentation","src":"16515:272:29","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7530,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:29","nodeType":"FunctionDefinition","parameters":{"id":7506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7505,"mutability":"mutable","name":"value","nameLocation":"16817:5:29","nodeType":"VariableDeclaration","scope":7530,"src":"16809:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7504,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:29"},"returnParameters":{"id":7509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7530,"src":"16847:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7507,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:29"},"scope":8400,"src":"16792:208:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7552,"nodeType":"Block","src":"17236:128:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"17250:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7546,"nodeType":"IfStatement","src":"17246:81:29","trueBody":{"id":7545,"nodeType":"Block","src":"17261:66:29","statements":[{"errorCall":{"arguments":[{"id":7542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"17310:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7541,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"17282:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7544,"nodeType":"RevertStatement","src":"17275:41:29"}]}},{"expression":{"arguments":[{"id":7549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"17351:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7547,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:29","typeDescriptions":{}}},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7537,"id":7551,"nodeType":"Return","src":"17336:21:29"}]},"documentation":{"id":7531,"nodeType":"StructuredDocumentation","src":"17006:160:29","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7553,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:29","nodeType":"FunctionDefinition","parameters":{"id":7534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7533,"mutability":"mutable","name":"value","nameLocation":"17197:5:29","nodeType":"VariableDeclaration","scope":7553,"src":"17190:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7532,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:29"},"returnParameters":{"id":7537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7553,"src":"17227:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7535,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:29"},"scope":8400,"src":"17171:193:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7578,"nodeType":"Block","src":"17761:150:29","statements":[{"expression":{"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7561,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"17771:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"17791:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7562,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:29","typeDescriptions":{}}},"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7567,"nodeType":"ExpressionStatement","src":"17771:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7568,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"17811:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"17825:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7577,"nodeType":"IfStatement","src":"17807:98:29","trueBody":{"id":7576,"nodeType":"Block","src":"17832:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"17888:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7571,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"17853:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7575,"nodeType":"RevertStatement","src":"17846:48:29"}]}}]},"documentation":{"id":7554,"nodeType":"StructuredDocumentation","src":"17370:312:29","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7579,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:29","nodeType":"FunctionDefinition","parameters":{"id":7557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7556,"mutability":"mutable","name":"value","nameLocation":"17712:5:29","nodeType":"VariableDeclaration","scope":7579,"src":"17705:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7555,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:29"},"returnParameters":{"id":7560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7559,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:29","nodeType":"VariableDeclaration","scope":7579,"src":"17742:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7558,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:29"},"scope":8400,"src":"17687:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7604,"nodeType":"Block","src":"18308:150:29","statements":[{"expression":{"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7587,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"18318:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"18338:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7588,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:29","typeDescriptions":{}}},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7593,"nodeType":"ExpressionStatement","src":"18318:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7594,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"18358:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"18372:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7603,"nodeType":"IfStatement","src":"18354:98:29","trueBody":{"id":7602,"nodeType":"Block","src":"18379:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"18435:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7597,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"18400:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7601,"nodeType":"RevertStatement","src":"18393:48:29"}]}}]},"documentation":{"id":7580,"nodeType":"StructuredDocumentation","src":"17917:312:29","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7605,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:29","nodeType":"FunctionDefinition","parameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"mutability":"mutable","name":"value","nameLocation":"18259:5:29","nodeType":"VariableDeclaration","scope":7605,"src":"18252:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7581,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:29"},"returnParameters":{"id":7586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7585,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:29","nodeType":"VariableDeclaration","scope":7605,"src":"18289:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7584,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:29"},"scope":8400,"src":"18234:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7630,"nodeType":"Block","src":"18855:150:29","statements":[{"expression":{"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7611,"src":"18865:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"18885:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7614,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:29","typeDescriptions":{}}},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7619,"nodeType":"ExpressionStatement","src":"18865:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7620,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7611,"src":"18905:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"18919:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7629,"nodeType":"IfStatement","src":"18901:98:29","trueBody":{"id":7628,"nodeType":"Block","src":"18926:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"18982:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7623,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"18947:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7627,"nodeType":"RevertStatement","src":"18940:48:29"}]}}]},"documentation":{"id":7606,"nodeType":"StructuredDocumentation","src":"18464:312:29","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7631,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:29","nodeType":"FunctionDefinition","parameters":{"id":7609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7608,"mutability":"mutable","name":"value","nameLocation":"18806:5:29","nodeType":"VariableDeclaration","scope":7631,"src":"18799:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7607,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:29"},"returnParameters":{"id":7612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7611,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:29","nodeType":"VariableDeclaration","scope":7631,"src":"18836:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7610,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:29"},"scope":8400,"src":"18781:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7656,"nodeType":"Block","src":"19402:150:29","statements":[{"expression":{"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7639,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"19412:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"19432:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7640,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:29","typeDescriptions":{}}},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7645,"nodeType":"ExpressionStatement","src":"19412:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7646,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"19452:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"19466:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7655,"nodeType":"IfStatement","src":"19448:98:29","trueBody":{"id":7654,"nodeType":"Block","src":"19473:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"19529:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7649,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"19494:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7653,"nodeType":"RevertStatement","src":"19487:48:29"}]}}]},"documentation":{"id":7632,"nodeType":"StructuredDocumentation","src":"19011:312:29","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7657,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:29","nodeType":"FunctionDefinition","parameters":{"id":7635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7634,"mutability":"mutable","name":"value","nameLocation":"19353:5:29","nodeType":"VariableDeclaration","scope":7657,"src":"19346:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7633,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:29"},"returnParameters":{"id":7638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7637,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:29","nodeType":"VariableDeclaration","scope":7657,"src":"19383:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7636,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:29"},"scope":8400,"src":"19328:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7682,"nodeType":"Block","src":"19949:150:29","statements":[{"expression":{"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7665,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"19959:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"19979:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7666,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:29","typeDescriptions":{}}},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7671,"nodeType":"ExpressionStatement","src":"19959:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7672,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"19999:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"20013:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7681,"nodeType":"IfStatement","src":"19995:98:29","trueBody":{"id":7680,"nodeType":"Block","src":"20020:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"20076:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7675,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"20041:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7679,"nodeType":"RevertStatement","src":"20034:48:29"}]}}]},"documentation":{"id":7658,"nodeType":"StructuredDocumentation","src":"19558:312:29","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7683,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:29","nodeType":"FunctionDefinition","parameters":{"id":7661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7660,"mutability":"mutable","name":"value","nameLocation":"19900:5:29","nodeType":"VariableDeclaration","scope":7683,"src":"19893:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7659,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:29"},"returnParameters":{"id":7664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:29","nodeType":"VariableDeclaration","scope":7683,"src":"19930:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7662,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:29"},"scope":8400,"src":"19875:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7708,"nodeType":"Block","src":"20496:150:29","statements":[{"expression":{"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7691,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"20506:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"20526:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7692,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:29","typeDescriptions":{}}},"id":7695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7697,"nodeType":"ExpressionStatement","src":"20506:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7698,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"20546:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"20560:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7707,"nodeType":"IfStatement","src":"20542:98:29","trueBody":{"id":7706,"nodeType":"Block","src":"20567:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"20623:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7701,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"20588:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7705,"nodeType":"RevertStatement","src":"20581:48:29"}]}}]},"documentation":{"id":7684,"nodeType":"StructuredDocumentation","src":"20105:312:29","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7709,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:29","nodeType":"FunctionDefinition","parameters":{"id":7687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7686,"mutability":"mutable","name":"value","nameLocation":"20447:5:29","nodeType":"VariableDeclaration","scope":7709,"src":"20440:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7685,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:29"},"returnParameters":{"id":7690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7689,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:29","nodeType":"VariableDeclaration","scope":7709,"src":"20477:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7688,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:29"},"scope":8400,"src":"20422:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7734,"nodeType":"Block","src":"21043:150:29","statements":[{"expression":{"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7717,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7715,"src":"21053:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"21073:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7718,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:29","typeDescriptions":{}}},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7723,"nodeType":"ExpressionStatement","src":"21053:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7724,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7715,"src":"21093:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"21107:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7733,"nodeType":"IfStatement","src":"21089:98:29","trueBody":{"id":7732,"nodeType":"Block","src":"21114:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"21170:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7727,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"21135:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7731,"nodeType":"RevertStatement","src":"21128:48:29"}]}}]},"documentation":{"id":7710,"nodeType":"StructuredDocumentation","src":"20652:312:29","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7735,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:29","nodeType":"FunctionDefinition","parameters":{"id":7713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7712,"mutability":"mutable","name":"value","nameLocation":"20994:5:29","nodeType":"VariableDeclaration","scope":7735,"src":"20987:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7711,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:29"},"returnParameters":{"id":7716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7715,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:29","nodeType":"VariableDeclaration","scope":7735,"src":"21024:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7714,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:29"},"scope":8400,"src":"20969:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7760,"nodeType":"Block","src":"21590:150:29","statements":[{"expression":{"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7743,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7741,"src":"21600:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"21620:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7744,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:29","typeDescriptions":{}}},"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7749,"nodeType":"ExpressionStatement","src":"21600:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7750,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7741,"src":"21640:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"21654:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7759,"nodeType":"IfStatement","src":"21636:98:29","trueBody":{"id":7758,"nodeType":"Block","src":"21661:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"21717:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7753,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"21682:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7757,"nodeType":"RevertStatement","src":"21675:48:29"}]}}]},"documentation":{"id":7736,"nodeType":"StructuredDocumentation","src":"21199:312:29","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7761,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:29","nodeType":"FunctionDefinition","parameters":{"id":7739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7738,"mutability":"mutable","name":"value","nameLocation":"21541:5:29","nodeType":"VariableDeclaration","scope":7761,"src":"21534:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7737,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:29"},"returnParameters":{"id":7742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7741,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:29","nodeType":"VariableDeclaration","scope":7761,"src":"21571:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7740,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:29"},"scope":8400,"src":"21516:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7786,"nodeType":"Block","src":"22137:150:29","statements":[{"expression":{"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7769,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"22147:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"22167:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7770,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:29","typeDescriptions":{}}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7775,"nodeType":"ExpressionStatement","src":"22147:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7776,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"22187:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"22201:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7785,"nodeType":"IfStatement","src":"22183:98:29","trueBody":{"id":7784,"nodeType":"Block","src":"22208:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"22264:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7779,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"22229:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7783,"nodeType":"RevertStatement","src":"22222:48:29"}]}}]},"documentation":{"id":7762,"nodeType":"StructuredDocumentation","src":"21746:312:29","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7787,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:29","nodeType":"FunctionDefinition","parameters":{"id":7765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7764,"mutability":"mutable","name":"value","nameLocation":"22088:5:29","nodeType":"VariableDeclaration","scope":7787,"src":"22081:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7763,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:29"},"returnParameters":{"id":7768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7767,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:29","nodeType":"VariableDeclaration","scope":7787,"src":"22118:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7766,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:29"},"scope":8400,"src":"22063:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7812,"nodeType":"Block","src":"22684:150:29","statements":[{"expression":{"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7795,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7793,"src":"22694:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"22714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7796,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:29","typeDescriptions":{}}},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7801,"nodeType":"ExpressionStatement","src":"22694:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7793,"src":"22734:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"22748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7811,"nodeType":"IfStatement","src":"22730:98:29","trueBody":{"id":7810,"nodeType":"Block","src":"22755:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"22811:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7805,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"22776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7809,"nodeType":"RevertStatement","src":"22769:48:29"}]}}]},"documentation":{"id":7788,"nodeType":"StructuredDocumentation","src":"22293:312:29","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7813,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:29","nodeType":"FunctionDefinition","parameters":{"id":7791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7790,"mutability":"mutable","name":"value","nameLocation":"22635:5:29","nodeType":"VariableDeclaration","scope":7813,"src":"22628:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7789,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:29"},"returnParameters":{"id":7794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7793,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:29","nodeType":"VariableDeclaration","scope":7813,"src":"22665:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7792,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:29"},"scope":8400,"src":"22610:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7838,"nodeType":"Block","src":"23231:150:29","statements":[{"expression":{"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7821,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"23241:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"23261:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7822,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:29","typeDescriptions":{}}},"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7827,"nodeType":"ExpressionStatement","src":"23241:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7828,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"23281:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"23295:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7837,"nodeType":"IfStatement","src":"23277:98:29","trueBody":{"id":7836,"nodeType":"Block","src":"23302:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"23358:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7831,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"23323:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7835,"nodeType":"RevertStatement","src":"23316:48:29"}]}}]},"documentation":{"id":7814,"nodeType":"StructuredDocumentation","src":"22840:312:29","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7839,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:29","nodeType":"FunctionDefinition","parameters":{"id":7817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7816,"mutability":"mutable","name":"value","nameLocation":"23182:5:29","nodeType":"VariableDeclaration","scope":7839,"src":"23175:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7815,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:29"},"returnParameters":{"id":7820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7819,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:29","nodeType":"VariableDeclaration","scope":7839,"src":"23212:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7818,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:29"},"scope":8400,"src":"23157:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7864,"nodeType":"Block","src":"23778:150:29","statements":[{"expression":{"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7847,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7845,"src":"23788:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"23808:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7848,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:29","typeDescriptions":{}}},"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7853,"nodeType":"ExpressionStatement","src":"23788:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7854,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7845,"src":"23828:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"23842:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7863,"nodeType":"IfStatement","src":"23824:98:29","trueBody":{"id":7862,"nodeType":"Block","src":"23849:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"23905:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7857,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"23870:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7861,"nodeType":"RevertStatement","src":"23863:48:29"}]}}]},"documentation":{"id":7840,"nodeType":"StructuredDocumentation","src":"23387:312:29","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7865,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:29","nodeType":"FunctionDefinition","parameters":{"id":7843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7842,"mutability":"mutable","name":"value","nameLocation":"23729:5:29","nodeType":"VariableDeclaration","scope":7865,"src":"23722:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7841,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:29"},"returnParameters":{"id":7846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7845,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:29","nodeType":"VariableDeclaration","scope":7865,"src":"23759:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7844,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:29"},"scope":8400,"src":"23704:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7890,"nodeType":"Block","src":"24325:150:29","statements":[{"expression":{"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7873,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"24335:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"24355:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7874,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:29","typeDescriptions":{}}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7879,"nodeType":"ExpressionStatement","src":"24335:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7880,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"24375:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"24389:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7889,"nodeType":"IfStatement","src":"24371:98:29","trueBody":{"id":7888,"nodeType":"Block","src":"24396:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"24452:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7883,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"24417:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7887,"nodeType":"RevertStatement","src":"24410:48:29"}]}}]},"documentation":{"id":7866,"nodeType":"StructuredDocumentation","src":"23934:312:29","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7891,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:29","nodeType":"FunctionDefinition","parameters":{"id":7869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7868,"mutability":"mutable","name":"value","nameLocation":"24276:5:29","nodeType":"VariableDeclaration","scope":7891,"src":"24269:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7867,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:29"},"returnParameters":{"id":7872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7871,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:29","nodeType":"VariableDeclaration","scope":7891,"src":"24306:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7870,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:29"},"scope":8400,"src":"24251:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7916,"nodeType":"Block","src":"24872:150:29","statements":[{"expression":{"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7899,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7897,"src":"24882:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"24902:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7900,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:29","typeDescriptions":{}}},"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7905,"nodeType":"ExpressionStatement","src":"24882:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7906,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7897,"src":"24922:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"24936:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7915,"nodeType":"IfStatement","src":"24918:98:29","trueBody":{"id":7914,"nodeType":"Block","src":"24943:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"24999:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7909,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"24964:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7913,"nodeType":"RevertStatement","src":"24957:48:29"}]}}]},"documentation":{"id":7892,"nodeType":"StructuredDocumentation","src":"24481:312:29","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7917,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:29","nodeType":"FunctionDefinition","parameters":{"id":7895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7894,"mutability":"mutable","name":"value","nameLocation":"24823:5:29","nodeType":"VariableDeclaration","scope":7917,"src":"24816:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7893,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:29"},"returnParameters":{"id":7898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7897,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:29","nodeType":"VariableDeclaration","scope":7917,"src":"24853:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7896,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:29"},"scope":8400,"src":"24798:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7942,"nodeType":"Block","src":"25419:150:29","statements":[{"expression":{"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7925,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"25429:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"25449:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7926,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:29","typeDescriptions":{}}},"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7931,"nodeType":"ExpressionStatement","src":"25429:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7932,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"25469:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"25483:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7941,"nodeType":"IfStatement","src":"25465:98:29","trueBody":{"id":7940,"nodeType":"Block","src":"25490:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"25546:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7935,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"25511:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7939,"nodeType":"RevertStatement","src":"25504:48:29"}]}}]},"documentation":{"id":7918,"nodeType":"StructuredDocumentation","src":"25028:312:29","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7943,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:29","nodeType":"FunctionDefinition","parameters":{"id":7921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7920,"mutability":"mutable","name":"value","nameLocation":"25370:5:29","nodeType":"VariableDeclaration","scope":7943,"src":"25363:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7919,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:29"},"returnParameters":{"id":7924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7923,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:29","nodeType":"VariableDeclaration","scope":7943,"src":"25400:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7922,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:29"},"scope":8400,"src":"25345:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7968,"nodeType":"Block","src":"25966:150:29","statements":[{"expression":{"id":7956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7951,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7949,"src":"25976:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"25996:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7952,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:29","typeDescriptions":{}}},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7957,"nodeType":"ExpressionStatement","src":"25976:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7958,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7949,"src":"26016:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"26030:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7967,"nodeType":"IfStatement","src":"26012:98:29","trueBody":{"id":7966,"nodeType":"Block","src":"26037:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"26093:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7961,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"26058:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7965,"nodeType":"RevertStatement","src":"26051:48:29"}]}}]},"documentation":{"id":7944,"nodeType":"StructuredDocumentation","src":"25575:312:29","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7969,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:29","nodeType":"FunctionDefinition","parameters":{"id":7947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7946,"mutability":"mutable","name":"value","nameLocation":"25917:5:29","nodeType":"VariableDeclaration","scope":7969,"src":"25910:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7945,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:29"},"returnParameters":{"id":7950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7949,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:29","nodeType":"VariableDeclaration","scope":7969,"src":"25947:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7948,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:29"},"scope":8400,"src":"25892:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7994,"nodeType":"Block","src":"26513:150:29","statements":[{"expression":{"id":7982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7977,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7975,"src":"26523:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"26543:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7978,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:29","typeDescriptions":{}}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7983,"nodeType":"ExpressionStatement","src":"26523:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7984,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7975,"src":"26563:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"26577:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7993,"nodeType":"IfStatement","src":"26559:98:29","trueBody":{"id":7992,"nodeType":"Block","src":"26584:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"26640:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7987,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"26605:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7991,"nodeType":"RevertStatement","src":"26598:48:29"}]}}]},"documentation":{"id":7970,"nodeType":"StructuredDocumentation","src":"26122:312:29","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7995,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:29","nodeType":"FunctionDefinition","parameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"value","nameLocation":"26464:5:29","nodeType":"VariableDeclaration","scope":7995,"src":"26457:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7971,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:29"},"returnParameters":{"id":7976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7975,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:29","nodeType":"VariableDeclaration","scope":7995,"src":"26494:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7974,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:29"},"scope":8400,"src":"26439:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8020,"nodeType":"Block","src":"27060:150:29","statements":[{"expression":{"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8003,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"27070:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"27090:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8004,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:29","typeDescriptions":{}}},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8009,"nodeType":"ExpressionStatement","src":"27070:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8010,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"27110:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"27124:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8019,"nodeType":"IfStatement","src":"27106:98:29","trueBody":{"id":8018,"nodeType":"Block","src":"27131:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"27187:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8013,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"27152:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8017,"nodeType":"RevertStatement","src":"27145:48:29"}]}}]},"documentation":{"id":7996,"nodeType":"StructuredDocumentation","src":"26669:312:29","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8021,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:29","nodeType":"FunctionDefinition","parameters":{"id":7999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7998,"mutability":"mutable","name":"value","nameLocation":"27011:5:29","nodeType":"VariableDeclaration","scope":8021,"src":"27004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7997,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:29"},"returnParameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8001,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:29","nodeType":"VariableDeclaration","scope":8021,"src":"27041:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8000,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:29"},"scope":8400,"src":"26986:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8046,"nodeType":"Block","src":"27607:150:29","statements":[{"expression":{"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8029,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8027,"src":"27617:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"27637:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8030,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:29","typeDescriptions":{}}},"id":8033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8035,"nodeType":"ExpressionStatement","src":"27617:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8036,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8027,"src":"27657:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"27671:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8045,"nodeType":"IfStatement","src":"27653:98:29","trueBody":{"id":8044,"nodeType":"Block","src":"27678:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"27734:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8039,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"27699:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8043,"nodeType":"RevertStatement","src":"27692:48:29"}]}}]},"documentation":{"id":8022,"nodeType":"StructuredDocumentation","src":"27216:312:29","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8047,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:29","nodeType":"FunctionDefinition","parameters":{"id":8025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8024,"mutability":"mutable","name":"value","nameLocation":"27558:5:29","nodeType":"VariableDeclaration","scope":8047,"src":"27551:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8023,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:29"},"returnParameters":{"id":8028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8027,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:29","nodeType":"VariableDeclaration","scope":8047,"src":"27588:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8026,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:29"},"scope":8400,"src":"27533:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8072,"nodeType":"Block","src":"28147:148:29","statements":[{"expression":{"id":8060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8055,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"28157:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"28176:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8056,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:29","typeDescriptions":{}}},"id":8059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8061,"nodeType":"ExpressionStatement","src":"28157:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8062,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"28196:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"28210:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8071,"nodeType":"IfStatement","src":"28192:97:29","trueBody":{"id":8070,"nodeType":"Block","src":"28217:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"28272:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8065,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"28238:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8069,"nodeType":"RevertStatement","src":"28231:47:29"}]}}]},"documentation":{"id":8048,"nodeType":"StructuredDocumentation","src":"27763:307:29","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8073,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:29","nodeType":"FunctionDefinition","parameters":{"id":8051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8050,"mutability":"mutable","name":"value","nameLocation":"28099:5:29","nodeType":"VariableDeclaration","scope":8073,"src":"28092:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8049,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:29"},"returnParameters":{"id":8054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8053,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:29","nodeType":"VariableDeclaration","scope":8073,"src":"28129:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8052,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:29"},"scope":8400,"src":"28075:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8098,"nodeType":"Block","src":"28685:148:29","statements":[{"expression":{"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8081,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"28695:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"28714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8082,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:29","typeDescriptions":{}}},"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8087,"nodeType":"ExpressionStatement","src":"28695:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8088,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"28734:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"28748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8097,"nodeType":"IfStatement","src":"28730:97:29","trueBody":{"id":8096,"nodeType":"Block","src":"28755:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"28810:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8091,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"28776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8095,"nodeType":"RevertStatement","src":"28769:47:29"}]}}]},"documentation":{"id":8074,"nodeType":"StructuredDocumentation","src":"28301:307:29","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8099,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:29","nodeType":"FunctionDefinition","parameters":{"id":8077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8076,"mutability":"mutable","name":"value","nameLocation":"28637:5:29","nodeType":"VariableDeclaration","scope":8099,"src":"28630:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8075,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:29"},"returnParameters":{"id":8080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8079,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:29","nodeType":"VariableDeclaration","scope":8099,"src":"28667:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8078,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:29"},"scope":8400,"src":"28613:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8124,"nodeType":"Block","src":"29223:148:29","statements":[{"expression":{"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8107,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8105,"src":"29233:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"29252:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8108,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:29","typeDescriptions":{}}},"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8113,"nodeType":"ExpressionStatement","src":"29233:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8114,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8105,"src":"29272:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"29286:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8123,"nodeType":"IfStatement","src":"29268:97:29","trueBody":{"id":8122,"nodeType":"Block","src":"29293:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"29348:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8117,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"29314:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8121,"nodeType":"RevertStatement","src":"29307:47:29"}]}}]},"documentation":{"id":8100,"nodeType":"StructuredDocumentation","src":"28839:307:29","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8125,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:29","nodeType":"FunctionDefinition","parameters":{"id":8103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8102,"mutability":"mutable","name":"value","nameLocation":"29175:5:29","nodeType":"VariableDeclaration","scope":8125,"src":"29168:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8101,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:29"},"returnParameters":{"id":8106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8105,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:29","nodeType":"VariableDeclaration","scope":8125,"src":"29205:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8104,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:29"},"scope":8400,"src":"29151:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8150,"nodeType":"Block","src":"29761:148:29","statements":[{"expression":{"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8133,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"29771:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8128,"src":"29790:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8134,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:29","typeDescriptions":{}}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8139,"nodeType":"ExpressionStatement","src":"29771:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8140,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"29810:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8128,"src":"29824:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8149,"nodeType":"IfStatement","src":"29806:97:29","trueBody":{"id":8148,"nodeType":"Block","src":"29831:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8128,"src":"29886:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8143,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"29852:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8147,"nodeType":"RevertStatement","src":"29845:47:29"}]}}]},"documentation":{"id":8126,"nodeType":"StructuredDocumentation","src":"29377:307:29","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8151,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:29","nodeType":"FunctionDefinition","parameters":{"id":8129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8128,"mutability":"mutable","name":"value","nameLocation":"29713:5:29","nodeType":"VariableDeclaration","scope":8151,"src":"29706:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8127,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:29"},"returnParameters":{"id":8132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8131,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:29","nodeType":"VariableDeclaration","scope":8151,"src":"29743:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8130,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:29"},"scope":8400,"src":"29689:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8176,"nodeType":"Block","src":"30299:148:29","statements":[{"expression":{"id":8164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8159,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"30309:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"30328:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8160,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:29","typeDescriptions":{}}},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8165,"nodeType":"ExpressionStatement","src":"30309:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8166,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"30348:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"30362:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8175,"nodeType":"IfStatement","src":"30344:97:29","trueBody":{"id":8174,"nodeType":"Block","src":"30369:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"30424:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8169,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"30390:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8173,"nodeType":"RevertStatement","src":"30383:47:29"}]}}]},"documentation":{"id":8152,"nodeType":"StructuredDocumentation","src":"29915:307:29","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8177,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:29","nodeType":"FunctionDefinition","parameters":{"id":8155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8154,"mutability":"mutable","name":"value","nameLocation":"30251:5:29","nodeType":"VariableDeclaration","scope":8177,"src":"30244:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8153,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:29"},"returnParameters":{"id":8158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8157,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:29","nodeType":"VariableDeclaration","scope":8177,"src":"30281:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8156,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:29"},"scope":8400,"src":"30227:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8202,"nodeType":"Block","src":"30837:148:29","statements":[{"expression":{"id":8190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8185,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8183,"src":"30847:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"30866:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8186,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:29","typeDescriptions":{}}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8191,"nodeType":"ExpressionStatement","src":"30847:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8192,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8183,"src":"30886:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"30900:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8201,"nodeType":"IfStatement","src":"30882:97:29","trueBody":{"id":8200,"nodeType":"Block","src":"30907:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"30962:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8195,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"30928:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8199,"nodeType":"RevertStatement","src":"30921:47:29"}]}}]},"documentation":{"id":8178,"nodeType":"StructuredDocumentation","src":"30453:307:29","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8203,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:29","nodeType":"FunctionDefinition","parameters":{"id":8181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8180,"mutability":"mutable","name":"value","nameLocation":"30789:5:29","nodeType":"VariableDeclaration","scope":8203,"src":"30782:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8179,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:29"},"returnParameters":{"id":8184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8183,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:29","nodeType":"VariableDeclaration","scope":8203,"src":"30819:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8182,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:29"},"scope":8400,"src":"30765:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8228,"nodeType":"Block","src":"31375:148:29","statements":[{"expression":{"id":8216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8211,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8209,"src":"31385:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"31404:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8212,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:29","typeDescriptions":{}}},"id":8215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8217,"nodeType":"ExpressionStatement","src":"31385:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8218,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8209,"src":"31424:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"31438:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8227,"nodeType":"IfStatement","src":"31420:97:29","trueBody":{"id":8226,"nodeType":"Block","src":"31445:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"31500:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8221,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"31466:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8225,"nodeType":"RevertStatement","src":"31459:47:29"}]}}]},"documentation":{"id":8204,"nodeType":"StructuredDocumentation","src":"30991:307:29","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8229,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:29","nodeType":"FunctionDefinition","parameters":{"id":8207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8206,"mutability":"mutable","name":"value","nameLocation":"31327:5:29","nodeType":"VariableDeclaration","scope":8229,"src":"31320:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8205,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:29"},"returnParameters":{"id":8210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8209,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:29","nodeType":"VariableDeclaration","scope":8229,"src":"31357:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8208,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:29"},"scope":8400,"src":"31303:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8254,"nodeType":"Block","src":"31913:148:29","statements":[{"expression":{"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8237,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"31923:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8232,"src":"31942:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8238,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:29","typeDescriptions":{}}},"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8243,"nodeType":"ExpressionStatement","src":"31923:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8244,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"31962:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8232,"src":"31976:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8253,"nodeType":"IfStatement","src":"31958:97:29","trueBody":{"id":8252,"nodeType":"Block","src":"31983:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8232,"src":"32038:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8247,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"32004:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8251,"nodeType":"RevertStatement","src":"31997:47:29"}]}}]},"documentation":{"id":8230,"nodeType":"StructuredDocumentation","src":"31529:307:29","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8255,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:29","nodeType":"FunctionDefinition","parameters":{"id":8233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8232,"mutability":"mutable","name":"value","nameLocation":"31865:5:29","nodeType":"VariableDeclaration","scope":8255,"src":"31858:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8231,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:29"},"returnParameters":{"id":8236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8235,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:29","nodeType":"VariableDeclaration","scope":8255,"src":"31895:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8234,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:29"},"scope":8400,"src":"31841:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8280,"nodeType":"Block","src":"32451:148:29","statements":[{"expression":{"id":8268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8263,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8261,"src":"32461:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"32480:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8264,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:29","typeDescriptions":{}}},"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8269,"nodeType":"ExpressionStatement","src":"32461:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8270,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8261,"src":"32500:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"32514:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8279,"nodeType":"IfStatement","src":"32496:97:29","trueBody":{"id":8278,"nodeType":"Block","src":"32521:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"32576:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8273,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"32542:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8277,"nodeType":"RevertStatement","src":"32535:47:29"}]}}]},"documentation":{"id":8256,"nodeType":"StructuredDocumentation","src":"32067:307:29","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8281,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:29","nodeType":"FunctionDefinition","parameters":{"id":8259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8258,"mutability":"mutable","name":"value","nameLocation":"32403:5:29","nodeType":"VariableDeclaration","scope":8281,"src":"32396:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8257,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:29"},"returnParameters":{"id":8262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8261,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:29","nodeType":"VariableDeclaration","scope":8281,"src":"32433:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8260,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:29"},"scope":8400,"src":"32379:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8306,"nodeType":"Block","src":"32989:148:29","statements":[{"expression":{"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8289,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"32999:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8284,"src":"33018:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8290,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:29","typeDescriptions":{}}},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8295,"nodeType":"ExpressionStatement","src":"32999:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8296,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"33038:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8284,"src":"33052:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8305,"nodeType":"IfStatement","src":"33034:97:29","trueBody":{"id":8304,"nodeType":"Block","src":"33059:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8284,"src":"33114:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8299,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"33080:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8303,"nodeType":"RevertStatement","src":"33073:47:29"}]}}]},"documentation":{"id":8282,"nodeType":"StructuredDocumentation","src":"32605:307:29","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8307,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:29","nodeType":"FunctionDefinition","parameters":{"id":8285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8284,"mutability":"mutable","name":"value","nameLocation":"32941:5:29","nodeType":"VariableDeclaration","scope":8307,"src":"32934:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8283,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:29"},"returnParameters":{"id":8288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8287,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:29","nodeType":"VariableDeclaration","scope":8307,"src":"32971:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8286,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:29"},"scope":8400,"src":"32917:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8332,"nodeType":"Block","src":"33527:148:29","statements":[{"expression":{"id":8320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8315,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"33537:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8310,"src":"33556:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8316,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:29","typeDescriptions":{}}},"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8321,"nodeType":"ExpressionStatement","src":"33537:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8322,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"33576:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8310,"src":"33590:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8331,"nodeType":"IfStatement","src":"33572:97:29","trueBody":{"id":8330,"nodeType":"Block","src":"33597:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8310,"src":"33652:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8325,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"33618:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8329,"nodeType":"RevertStatement","src":"33611:47:29"}]}}]},"documentation":{"id":8308,"nodeType":"StructuredDocumentation","src":"33143:307:29","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8333,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:29","nodeType":"FunctionDefinition","parameters":{"id":8311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8310,"mutability":"mutable","name":"value","nameLocation":"33479:5:29","nodeType":"VariableDeclaration","scope":8333,"src":"33472:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8309,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:29"},"returnParameters":{"id":8314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8313,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:29","nodeType":"VariableDeclaration","scope":8333,"src":"33509:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8312,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:29"},"scope":8400,"src":"33455:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8358,"nodeType":"Block","src":"34058:146:29","statements":[{"expression":{"id":8346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8341,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"34068:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"34086:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8342,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:29","typeDescriptions":{}}},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8347,"nodeType":"ExpressionStatement","src":"34068:24:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"34106:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"34120:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8357,"nodeType":"IfStatement","src":"34102:96:29","trueBody":{"id":8356,"nodeType":"Block","src":"34127:71:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"34181:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8351,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"34148:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8355,"nodeType":"RevertStatement","src":"34141:46:29"}]}}]},"documentation":{"id":8334,"nodeType":"StructuredDocumentation","src":"33681:302:29","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8359,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:29","nodeType":"FunctionDefinition","parameters":{"id":8337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8336,"mutability":"mutable","name":"value","nameLocation":"34011:5:29","nodeType":"VariableDeclaration","scope":8359,"src":"34004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8335,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:29"},"returnParameters":{"id":8340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8339,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:29","nodeType":"VariableDeclaration","scope":8359,"src":"34041:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8338,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:29"},"scope":8400,"src":"33988:216:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8388,"nodeType":"Block","src":"34444:250:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8362,"src":"34557:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8371,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8370,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:29","memberName":"max","nodeType":"MemberAccess","src":"34573:16:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8368,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:29","typeDescriptions":{}}},"id":8375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8382,"nodeType":"IfStatement","src":"34553:105:29","trueBody":{"id":8381,"nodeType":"Block","src":"34592:66:29","statements":[{"errorCall":{"arguments":[{"id":8378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8362,"src":"34641:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8377,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"34613:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8380,"nodeType":"RevertStatement","src":"34606:41:29"}]}},{"expression":{"arguments":[{"id":8385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8362,"src":"34681:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8383,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:29","typeDescriptions":{}}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8366,"id":8387,"nodeType":"Return","src":"34667:20:29"}]},"documentation":{"id":8360,"nodeType":"StructuredDocumentation","src":"34210:165:29","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8389,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:29","nodeType":"FunctionDefinition","parameters":{"id":8363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8362,"mutability":"mutable","name":"value","nameLocation":"34406:5:29","nodeType":"VariableDeclaration","scope":8389,"src":"34398:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8361,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:29"},"returnParameters":{"id":8366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8389,"src":"34436:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8364,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:29"},"scope":8400,"src":"34380:314:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8398,"nodeType":"Block","src":"34853:87:29","statements":[{"AST":{"nativeSrc":"34888:46:29","nodeType":"YulBlock","src":"34888:46:29","statements":[{"nativeSrc":"34902:22:29","nodeType":"YulAssignment","src":"34902:22:29","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:29","nodeType":"YulIdentifier","src":"34921:1:29"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:29","nodeType":"YulIdentifier","src":"34914:6:29"},"nativeSrc":"34914:9:29","nodeType":"YulFunctionCall","src":"34914:9:29"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:29","nodeType":"YulIdentifier","src":"34907:6:29"},"nativeSrc":"34907:17:29","nodeType":"YulFunctionCall","src":"34907:17:29"},"variableNames":[{"name":"u","nativeSrc":"34902:1:29","nodeType":"YulIdentifier","src":"34902:1:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8392,"isOffset":false,"isSlot":false,"src":"34921:1:29","valueSize":1},{"declaration":8395,"isOffset":false,"isSlot":false,"src":"34902:1:29","valueSize":1}],"flags":["memory-safe"],"id":8397,"nodeType":"InlineAssembly","src":"34863:71:29"}]},"documentation":{"id":8390,"nodeType":"StructuredDocumentation","src":"34700:90:29","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8399,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:29","nodeType":"FunctionDefinition","parameters":{"id":8393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8392,"mutability":"mutable","name":"b","nameLocation":"34816:1:29","nodeType":"VariableDeclaration","scope":8399,"src":"34811:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8391,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:29"},"returnParameters":{"id":8396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8395,"mutability":"mutable","name":"u","nameLocation":"34850:1:29","nodeType":"VariableDeclaration","scope":8399,"src":"34842:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8394,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:29"},"scope":8400,"src":"34795:145:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8401,"src":"769:34173:29","usedErrors":[6645,6650,6657,6662],"usedEvents":[]}],"src":"192:34751:29"},"id":29},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8400],"SignedMath":[8544]},"id":8545,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8402,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8545,"sourceUnit":8401,"src":"135:40:30","symbolAliases":[{"foreign":{"id":8403,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"143:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8405,"nodeType":"StructuredDocumentation","src":"177:80:30","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8544,"linearizedBaseContracts":[8544],"name":"SignedMath","nameLocation":"266:10:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":8434,"nodeType":"Block","src":"746:215:30","statements":[{"id":8433,"nodeType":"UncheckedBlock","src":"756:199:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"894:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8410,"src":"900:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"904:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8426,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"932:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8424,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"916:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8400_$","typeString":"type(library SafeCast)"}},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"916:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8422,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:30","typeDescriptions":{}}},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8416,"id":8432,"nodeType":"Return","src":"887:57:30"}]}]},"documentation":{"id":8406,"nodeType":"StructuredDocumentation","src":"283:374:30","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8435,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:30","nodeType":"FunctionDefinition","parameters":{"id":8413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8408,"mutability":"mutable","name":"condition","nameLocation":"684:9:30","nodeType":"VariableDeclaration","scope":8435,"src":"679:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8407,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8410,"mutability":"mutable","name":"a","nameLocation":"702:1:30","nodeType":"VariableDeclaration","scope":8435,"src":"695:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8409,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8412,"mutability":"mutable","name":"b","nameLocation":"712:1:30","nodeType":"VariableDeclaration","scope":8435,"src":"705:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8411,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:30"},"returnParameters":{"id":8416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8435,"src":"738:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8414,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:30"},"scope":8544,"src":"662:299:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8453,"nodeType":"Block","src":"1102:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8446,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"1127:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8447,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8440,"src":"1131:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"1134:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8440,"src":"1137:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8445,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8435,"src":"1119:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8444,"id":8452,"nodeType":"Return","src":"1112:27:30"}]},"documentation":{"id":8436,"nodeType":"StructuredDocumentation","src":"967:66:30","text":" @dev Returns the largest of two signed numbers."},"id":8454,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:30","nodeType":"FunctionDefinition","parameters":{"id":8441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8438,"mutability":"mutable","name":"a","nameLocation":"1058:1:30","nodeType":"VariableDeclaration","scope":8454,"src":"1051:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8437,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8440,"mutability":"mutable","name":"b","nameLocation":"1068:1:30","nodeType":"VariableDeclaration","scope":8454,"src":"1061:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8439,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:30"},"returnParameters":{"id":8444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8454,"src":"1094:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8442,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:30"},"scope":8544,"src":"1038:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8472,"nodeType":"Block","src":"1288:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"1313:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8466,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8459,"src":"1317:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8468,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"1320:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8469,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8459,"src":"1323:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8464,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8435,"src":"1305:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8463,"id":8471,"nodeType":"Return","src":"1298:27:30"}]},"documentation":{"id":8455,"nodeType":"StructuredDocumentation","src":"1152:67:30","text":" @dev Returns the smallest of two signed numbers."},"id":8473,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:30","nodeType":"FunctionDefinition","parameters":{"id":8460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8457,"mutability":"mutable","name":"a","nameLocation":"1244:1:30","nodeType":"VariableDeclaration","scope":8473,"src":"1237:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8456,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8459,"mutability":"mutable","name":"b","nameLocation":"1254:1:30","nodeType":"VariableDeclaration","scope":8473,"src":"1247:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8458,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:30"},"returnParameters":{"id":8463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8473,"src":"1280:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8461,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:30"},"scope":8544,"src":"1224:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8516,"nodeType":"Block","src":"1537:162:30","statements":[{"assignments":[8484],"declarations":[{"constant":false,"id":8484,"mutability":"mutable","name":"x","nameLocation":"1606:1:30","nodeType":"VariableDeclaration","scope":8516,"src":"1599:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8483,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8497,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8485,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"1611:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8478,"src":"1615:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"1622:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8490,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8478,"src":"1626:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:30"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8498,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"1651:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8503,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"1671:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:30","typeDescriptions":{}}},"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8499,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:30","typeDescriptions":{}}},"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"1685:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8509,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8478,"src":"1689:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8482,"id":8515,"nodeType":"Return","src":"1644:48:30"}]},"documentation":{"id":8474,"nodeType":"StructuredDocumentation","src":"1338:126:30","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8517,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:30","nodeType":"FunctionDefinition","parameters":{"id":8479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8476,"mutability":"mutable","name":"a","nameLocation":"1493:1:30","nodeType":"VariableDeclaration","scope":8517,"src":"1486:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8475,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8478,"mutability":"mutable","name":"b","nameLocation":"1503:1:30","nodeType":"VariableDeclaration","scope":8517,"src":"1496:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8477,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:30"},"returnParameters":{"id":8482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8517,"src":"1529:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8480,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:30"},"scope":8544,"src":"1469:230:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8542,"nodeType":"Block","src":"1843:767:30","statements":[{"id":8541,"nodeType":"UncheckedBlock","src":"1853:751:30","statements":[{"assignments":[8526],"declarations":[{"constant":false,"id":8526,"mutability":"mutable","name":"mask","nameLocation":"2424:4:30","nodeType":"VariableDeclaration","scope":8541,"src":"2417:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8525,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8530,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8527,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"2431:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8533,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"2576:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8534,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8526,"src":"2580:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8537,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8526,"src":"2588:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:30","typeDescriptions":{}}},"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8524,"id":8540,"nodeType":"Return","src":"2560:33:30"}]}]},"documentation":{"id":8518,"nodeType":"StructuredDocumentation","src":"1705:78:30","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8543,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:30","nodeType":"FunctionDefinition","parameters":{"id":8521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8520,"mutability":"mutable","name":"n","nameLocation":"1808:1:30","nodeType":"VariableDeclaration","scope":8543,"src":"1801:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8519,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:30"},"returnParameters":{"id":8524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8543,"src":"1834:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:30"},"scope":8544,"src":"1788:822:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8545,"src":"258:2354:30","usedErrors":[],"usedEvents":[]}],"src":"109:2504:30"},"id":30},"contracts/RewardPool.sol":{"ast":{"absolutePath":"contracts/RewardPool.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"ContextUpgradeable":[860],"ERC165Upgradeable":[1189],"ERC1967Utils":[1712],"IAccessControl":[1272],"IERC1363":[1354],"IERC165":[5014],"IERC1822Proxiable":[1418],"IERC20":[1800],"Initializable":[632],"RewardPool":[8840],"SafeERC20":[2264],"UUPSUpgradeable":[814]},"id":8841,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8546,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:31"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":8547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8841,"sourceUnit":365,"src":"58:81:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":8548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8841,"sourceUnit":633,"src":"140:75:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":8549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8841,"sourceUnit":815,"src":"216:77:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8841,"sourceUnit":1801,"src":"294:56:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":8551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8841,"sourceUnit":2265,"src":"351:65:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8553,"name":"Initializable","nameLocations":["615:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"615:13:31"},"id":8554,"nodeType":"InheritanceSpecifier","src":"615:13:31"},{"baseName":{"id":8555,"name":"AccessControlUpgradeable","nameLocations":["630:24:31"],"nodeType":"IdentifierPath","referencedDeclaration":364,"src":"630:24:31"},"id":8556,"nodeType":"InheritanceSpecifier","src":"630:24:31"},{"baseName":{"id":8557,"name":"UUPSUpgradeable","nameLocations":["656:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":814,"src":"656:15:31"},"id":8558,"nodeType":"InheritanceSpecifier","src":"656:15:31"}],"canonicalName":"RewardPool","contractDependencies":[],"contractKind":"contract","documentation":{"id":8552,"nodeType":"StructuredDocumentation","src":"418:173:31","text":" @title RewardPool\n @dev Pre-funded vault that holds ERC-20 tokens for reward distributions\n Only the authorized Distributor can withdraw tokens to pay rewards"},"fullyImplemented":true,"id":8840,"linearizedBaseContracts":[8840,814,1418,364,1189,5014,1272,860,632],"name":"RewardPool","nameLocation":"601:10:31","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8562,"libraryName":{"id":8559,"name":"SafeERC20","nameLocations":["684:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":2264,"src":"684:9:31"},"nodeType":"UsingForDirective","src":"678:27:31","typeName":{"id":8561,"nodeType":"UserDefinedTypeName","pathNode":{"id":8560,"name":"IERC20","nameLocations":["698:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"698:6:31"},"referencedDeclaration":1800,"src":"698:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}}},{"constant":true,"functionSelector":"f0bd87cc","id":8567,"mutability":"constant","name":"DISTRIBUTOR_ROLE","nameLocation":"735:16:31","nodeType":"VariableDeclaration","scope":8840,"src":"711:72:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"711:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4449535452494255544f525f524f4c45","id":8565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"764:18:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c","typeString":"literal_string \"DISTRIBUTOR_ROLE\""},"value":"DISTRIBUTOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c","typeString":"literal_string \"DISTRIBUTOR_ROLE\""}],"id":8564,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"754:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":8572,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"813:11:31","nodeType":"VariableDeclaration","scope":8840,"src":"789:62:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"789:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":8570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"837:13:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":8569,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"827:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"827:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"523fba7f","id":8576,"mutability":"mutable","name":"tokenBalances","nameLocation":"893:13:31","nodeType":"VariableDeclaration","scope":8840,"src":"858:48:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8575,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8573,"name":"address","nodeType":"ElementaryTypeName","src":"866:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"858:27:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8574,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"bfe10928","id":8578,"mutability":"mutable","name":"distributor","nameLocation":"927:11:31","nodeType":"VariableDeclaration","scope":8840,"src":"912:26:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8577,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":8584,"name":"Deposited","nameLocation":"951:9:31","nodeType":"EventDefinition","parameters":{"id":8583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8580,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"977:5:31","nodeType":"VariableDeclaration","scope":8584,"src":"961:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8579,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8582,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"992:6:31","nodeType":"VariableDeclaration","scope":8584,"src":"984:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8581,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"960:39:31"},"src":"945:55:31"},{"anonymous":false,"eventSelector":"9def4e2802183d68ce90a6a226a2962b59298616c27165f12c4fbc5c84cdd778","id":8592,"name":"Paid","nameLocation":"1011:4:31","nodeType":"EventDefinition","parameters":{"id":8591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8586,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1032:5:31","nodeType":"VariableDeclaration","scope":8592,"src":"1016:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8585,"name":"address","nodeType":"ElementaryTypeName","src":"1016:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8588,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1055:2:31","nodeType":"VariableDeclaration","scope":8592,"src":"1039:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8587,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8590,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1067:6:31","nodeType":"VariableDeclaration","scope":8592,"src":"1059:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1015:59:31"},"src":"1005:70:31"},{"anonymous":false,"eventSelector":"8c6eabd1db7fe5a1951a7c78767c0e3633c5352578d15d45f99aa4c4db01c55a","id":8598,"name":"DistributorSet","nameLocation":"1086:14:31","nodeType":"EventDefinition","parameters":{"id":8597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8594,"indexed":true,"mutability":"mutable","name":"oldDistributor","nameLocation":"1117:14:31","nodeType":"VariableDeclaration","scope":8598,"src":"1101:30:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8593,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8596,"indexed":true,"mutability":"mutable","name":"newDistributor","nameLocation":"1149:14:31","nodeType":"VariableDeclaration","scope":8598,"src":"1133:30:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8595,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1100:64:31"},"src":"1080:85:31"},{"errorSelector":"82b42900","id":8600,"name":"Unauthorized","nameLocation":"1177:12:31","nodeType":"ErrorDefinition","parameters":{"id":8599,"nodeType":"ParameterList","parameters":[],"src":"1189:2:31"},"src":"1171:21:31"},{"errorSelector":"f4d678b8","id":8602,"name":"InsufficientBalance","nameLocation":"1203:19:31","nodeType":"ErrorDefinition","parameters":{"id":8601,"nodeType":"ParameterList","parameters":[],"src":"1222:2:31"},"src":"1197:28:31"},{"errorSelector":"12df8019","id":8604,"name":"DistributorNotSet","nameLocation":"1236:17:31","nodeType":"ErrorDefinition","parameters":{"id":8603,"nodeType":"ParameterList","parameters":[],"src":"1253:2:31"},"src":"1230:26:31"},{"errorSelector":"2c5211c6","id":8606,"name":"InvalidAmount","nameLocation":"1267:13:31","nodeType":"ErrorDefinition","parameters":{"id":8605,"nodeType":"ParameterList","parameters":[],"src":"1280:2:31"},"src":"1261:22:31"},{"body":{"id":8613,"nodeType":"Block","src":"1356:39:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8610,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"1366:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8612,"nodeType":"ExpressionStatement","src":"1366:22:31"}]},"documentation":{"id":8607,"nodeType":"StructuredDocumentation","src":"1289:48:31","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":8614,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8608,"nodeType":"ParameterList","parameters":[],"src":"1353:2:31"},"returnParameters":{"id":8609,"nodeType":"ParameterList","parameters":[],"src":"1356:0:31"},"scope":8840,"src":"1342:53:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8637,"nodeType":"Block","src":"1455:169:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8621,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"1465:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1465:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8623,"nodeType":"ExpressionStatement","src":"1465:22:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8624,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1497:22:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8626,"nodeType":"ExpressionStatement","src":"1497:24:31"},{"expression":{"arguments":[{"id":8628,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"1551:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8629,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8616,"src":"1571:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8627,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1540:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1540:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8631,"nodeType":"ExpressionStatement","src":"1540:37:31"},{"expression":{"arguments":[{"id":8633,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8572,"src":"1598:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8634,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8616,"src":"1611:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8632,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1587:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8636,"nodeType":"ExpressionStatement","src":"1587:30:31"}]},"functionSelector":"c4d66de8","id":8638,"implemented":true,"kind":"function","modifiers":[{"id":8619,"kind":"modifierInvocation","modifierName":{"id":8618,"name":"initializer","nameLocations":["1443:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":472,"src":"1443:11:31"},"nodeType":"ModifierInvocation","src":"1443:11:31"}],"name":"initialize","nameLocation":"1410:10:31","nodeType":"FunctionDefinition","parameters":{"id":8617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8616,"mutability":"mutable","name":"admin","nameLocation":"1429:5:31","nodeType":"VariableDeclaration","scope":8638,"src":"1421:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8615,"name":"address","nodeType":"ElementaryTypeName","src":"1421:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1420:15:31"},"returnParameters":{"id":8620,"nodeType":"ParameterList","parameters":[],"src":"1455:0:31"},"scope":8840,"src":"1401:223:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8680,"nodeType":"Block","src":"1866:228:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8649,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8643,"src":"1880:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1890:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1880:11:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8655,"nodeType":"IfStatement","src":"1876:39:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8652,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8606,"src":"1900:13:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1900:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8654,"nodeType":"RevertStatement","src":"1893:22:31"}},{"expression":{"arguments":[{"expression":{"id":8660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1965:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1969:6:31","memberName":"sender","nodeType":"MemberAccess","src":"1965:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8664,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1985:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_RewardPool_$8840","typeString":"contract RewardPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardPool_$8840","typeString":"contract RewardPool"}],"id":8663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1977:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8662,"name":"address","nodeType":"ElementaryTypeName","src":"1977:7:31","typeDescriptions":{}}},"id":8665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1977:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8666,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8643,"src":"1992:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8657,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8641,"src":"1941:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8656,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1934:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1800_$","typeString":"type(contract IERC20)"}},"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1934:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1948:16:31","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1872,"src":"1934:30:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1800_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1934:65:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8668,"nodeType":"ExpressionStatement","src":"1934:65:31"},{"expression":{"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8669,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"2009:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8671,"indexExpression":{"id":8670,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8641,"src":"2023:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2009:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8672,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8643,"src":"2033:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2009:30:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8674,"nodeType":"ExpressionStatement","src":"2009:30:31"},{"eventCall":{"arguments":[{"id":8676,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8641,"src":"2073:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8677,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8643,"src":"2080:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8675,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"2063:9:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8679,"nodeType":"EmitStatement","src":"2058:29:31"}]},"documentation":{"id":8639,"nodeType":"StructuredDocumentation","src":"1630:145:31","text":" @dev Deposit tokens into the pool (admin only)\n @param token ERC-20 token address\n @param amount Amount to deposit"},"functionSelector":"47e7ef24","id":8681,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8646,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"1846:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8647,"kind":"modifierInvocation","modifierName":{"id":8645,"name":"onlyRole","nameLocations":["1837:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"1837:8:31"},"nodeType":"ModifierInvocation","src":"1837:28:31"}],"name":"deposit","nameLocation":"1789:7:31","nodeType":"FunctionDefinition","parameters":{"id":8644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8641,"mutability":"mutable","name":"token","nameLocation":"1805:5:31","nodeType":"VariableDeclaration","scope":8681,"src":"1797:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8640,"name":"address","nodeType":"ElementaryTypeName","src":"1797:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8643,"mutability":"mutable","name":"amount","nameLocation":"1820:6:31","nodeType":"VariableDeclaration","scope":8681,"src":"1812:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1812:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1796:31:31"},"returnParameters":{"id":8648,"nodeType":"ParameterList","parameters":[],"src":"1866:0:31"},"scope":8840,"src":"1780:314:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8740,"nodeType":"Block","src":"2378:327:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8694,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8688,"src":"2392:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2402:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2392:11:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8700,"nodeType":"IfStatement","src":"2388:39:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8697,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8606,"src":"2412:13:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2412:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8699,"nodeType":"RevertStatement","src":"2405:22:31"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8701,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"2441:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2455:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2447:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8702,"name":"address","nodeType":"ElementaryTypeName","src":"2447:7:31","typeDescriptions":{}}},"id":8705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2441:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8710,"nodeType":"IfStatement","src":"2437:44:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8707,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8606,"src":"2466:13:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2466:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8709,"nodeType":"RevertStatement","src":"2459:22:31"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8711,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"2495:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8713,"indexExpression":{"id":8712,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"2509:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2495:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8714,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8688,"src":"2518:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2495:29:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8719,"nodeType":"IfStatement","src":"2491:63:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8716,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"2533:19:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8718,"nodeType":"RevertStatement","src":"2526:28:31"}},{"expression":{"id":8724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8720,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"2573:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8722,"indexExpression":{"id":8721,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"2587:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2573:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8723,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8688,"src":"2597:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2573:30:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8725,"nodeType":"ExpressionStatement","src":"2573:30:31"},{"expression":{"arguments":[{"id":8730,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"2640:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8731,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8688,"src":"2644:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8727,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"2620:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8726,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"2613:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1800_$","typeString":"type(contract IERC20)"}},"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2613:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1800","typeString":"contract IERC20"}},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2627:12:31","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1845,"src":"2613:26:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1800_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1800_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2613:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8733,"nodeType":"ExpressionStatement","src":"2613:38:31"},{"eventCall":{"arguments":[{"id":8735,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"2680:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8736,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"2687:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8737,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8688,"src":"2691:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8734,"name":"Paid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8592,"src":"2675:4:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8739,"nodeType":"EmitStatement","src":"2670:28:31"}]},"documentation":{"id":8682,"nodeType":"StructuredDocumentation","src":"2100:179:31","text":" @dev Pay tokens to a recipient (distributor only)\n @param token ERC-20 token address\n @param to Recipient address\n @param amount Amount to pay"},"functionSelector":"4026cf23","id":8741,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8691,"name":"DISTRIBUTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"2360:16:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8692,"kind":"modifierInvocation","modifierName":{"id":8690,"name":"onlyRole","nameLocations":["2351:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2351:8:31"},"nodeType":"ModifierInvocation","src":"2351:26:31"}],"name":"payTo","nameLocation":"2293:5:31","nodeType":"FunctionDefinition","parameters":{"id":8689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8684,"mutability":"mutable","name":"token","nameLocation":"2307:5:31","nodeType":"VariableDeclaration","scope":8741,"src":"2299:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8683,"name":"address","nodeType":"ElementaryTypeName","src":"2299:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8686,"mutability":"mutable","name":"to","nameLocation":"2322:2:31","nodeType":"VariableDeclaration","scope":8741,"src":"2314:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8685,"name":"address","nodeType":"ElementaryTypeName","src":"2314:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8688,"mutability":"mutable","name":"amount","nameLocation":"2334:6:31","nodeType":"VariableDeclaration","scope":8741,"src":"2326:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8687,"name":"uint256","nodeType":"ElementaryTypeName","src":"2326:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2298:43:31"},"returnParameters":{"id":8693,"nodeType":"ParameterList","parameters":[],"src":"2378:0:31"},"scope":8840,"src":"2284:421:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8791,"nodeType":"Block","src":"2919:421:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8750,"name":"newDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"2933:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2959:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2951:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8751,"name":"address","nodeType":"ElementaryTypeName","src":"2951:7:31","typeDescriptions":{}}},"id":8754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2951:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2933:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8759,"nodeType":"IfStatement","src":"2929:56:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8756,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8606,"src":"2970:13:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8758,"nodeType":"RevertStatement","src":"2963:22:31"}},{"assignments":[8761],"declarations":[{"constant":false,"id":8761,"mutability":"mutable","name":"oldDistributor","nameLocation":"3012:14:31","nodeType":"VariableDeclaration","scope":8791,"src":"3004:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8760,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8763,"initialValue":{"id":8762,"name":"distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8578,"src":"3029:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3004:36:31"},{"expression":{"id":8766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8764,"name":"distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8578,"src":"3050:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8765,"name":"newDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"3064:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3050:28:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8767,"nodeType":"ExpressionStatement","src":"3050:28:31"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8768,"name":"oldDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"3101:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3127:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3119:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8769,"name":"address","nodeType":"ElementaryTypeName","src":"3119:7:31","typeDescriptions":{}}},"id":8772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3119:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3101:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8780,"nodeType":"IfStatement","src":"3097:104:31","trueBody":{"id":8779,"nodeType":"Block","src":"3131:70:31","statements":[{"expression":{"arguments":[{"id":8775,"name":"DISTRIBUTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"3157:16:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8776,"name":"oldDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"3175:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8774,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3145:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3145:45:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8778,"nodeType":"ExpressionStatement","src":"3145:45:31"}]}},{"expression":{"arguments":[{"id":8782,"name":"DISTRIBUTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"3230:16:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8783,"name":"newDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"3248:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8781,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"3219:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:44:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8785,"nodeType":"ExpressionStatement","src":"3219:44:31"},{"eventCall":{"arguments":[{"id":8787,"name":"oldDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"3302:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8788,"name":"newDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"3318:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8786,"name":"DistributorSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"3287:14:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":8789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3287:46:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8790,"nodeType":"EmitStatement","src":"3282:51:31"}]},"documentation":{"id":8742,"nodeType":"StructuredDocumentation","src":"2711:117:31","text":" @dev Set the distributor address (admin only)\n @param newDistributor New distributor address"},"functionSelector":"75619ab5","id":8792,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8747,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2899:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8748,"kind":"modifierInvocation","modifierName":{"id":8746,"name":"onlyRole","nameLocations":["2890:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2890:8:31"},"nodeType":"ModifierInvocation","src":"2890:28:31"}],"name":"setDistributor","nameLocation":"2842:14:31","nodeType":"FunctionDefinition","parameters":{"id":8745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8744,"mutability":"mutable","name":"newDistributor","nameLocation":"2865:14:31","nodeType":"VariableDeclaration","scope":8792,"src":"2857:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8743,"name":"address","nodeType":"ElementaryTypeName","src":"2857:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2856:24:31"},"returnParameters":{"id":8749,"nodeType":"ParameterList","parameters":[],"src":"2919:0:31"},"scope":8840,"src":"2833:507:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8804,"nodeType":"Block","src":"3540:44:31","statements":[{"expression":{"baseExpression":{"id":8800,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"3557:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8802,"indexExpression":{"id":8801,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8795,"src":"3571:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3557:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8799,"id":8803,"nodeType":"Return","src":"3550:27:31"}]},"documentation":{"id":8793,"nodeType":"StructuredDocumentation","src":"3346:125:31","text":" @dev Get token balance in the pool\n @param token ERC-20 token address\n @return Current balance"},"functionSelector":"e3d670d7","id":8805,"implemented":true,"kind":"function","modifiers":[],"name":"balance","nameLocation":"3485:7:31","nodeType":"FunctionDefinition","parameters":{"id":8796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8795,"mutability":"mutable","name":"token","nameLocation":"3501:5:31","nodeType":"VariableDeclaration","scope":8805,"src":"3493:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8794,"name":"address","nodeType":"ElementaryTypeName","src":"3493:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3492:15:31"},"returnParameters":{"id":8799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8805,"src":"3531:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8797,"name":"uint256","nodeType":"ElementaryTypeName","src":"3531:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3530:9:31"},"scope":8840,"src":"3476:108:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8828,"nodeType":"Block","src":"3803:120:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8813,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"3817:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8815,"indexExpression":{"id":8814,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"3831:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3817:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8816,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"3840:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3817:29:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8821,"nodeType":"IfStatement","src":"3813:63:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8818,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"3855:19:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3855:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8820,"nodeType":"RevertStatement","src":"3848:28:31"}},{"expression":{"id":8826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8822,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"3886:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8824,"indexExpression":{"id":8823,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"3900:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3886:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8825,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"3910:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3886:30:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8827,"nodeType":"ExpressionStatement","src":"3886:30:31"}]},"documentation":{"id":8806,"nodeType":"StructuredDocumentation","src":"3590:152:31","text":" @dev Internal function to debit tokens (for future use)\n @param token ERC-20 token address\n @param amount Amount to debit"},"id":8829,"implemented":true,"kind":"function","modifiers":[],"name":"_debit","nameLocation":"3756:6:31","nodeType":"FunctionDefinition","parameters":{"id":8811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8808,"mutability":"mutable","name":"token","nameLocation":"3771:5:31","nodeType":"VariableDeclaration","scope":8829,"src":"3763:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8807,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8810,"mutability":"mutable","name":"amount","nameLocation":"3786:6:31","nodeType":"VariableDeclaration","scope":8829,"src":"3778:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8809,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3762:31:31"},"returnParameters":{"id":8812,"nodeType":"ParameterList","parameters":[],"src":"3803:0:31"},"scope":8840,"src":"3747:176:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[768],"body":{"id":8838,"nodeType":"Block","src":"4030:2:31","statements":[]},"id":8839,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8835,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"4010:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8836,"kind":"modifierInvocation","modifierName":{"id":8834,"name":"onlyRole","nameLocations":["4001:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4001:8:31"},"nodeType":"ModifierInvocation","src":"4001:28:31"}],"name":"_authorizeUpgrade","nameLocation":"3938:17:31","nodeType":"FunctionDefinition","overrides":{"id":8833,"nodeType":"OverrideSpecifier","overrides":[],"src":"3992:8:31"},"parameters":{"id":8832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8831,"mutability":"mutable","name":"newImplementation","nameLocation":"3964:17:31","nodeType":"VariableDeclaration","scope":8839,"src":"3956:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8830,"name":"address","nodeType":"ElementaryTypeName","src":"3956:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3955:27:31"},"returnParameters":{"id":8837,"nodeType":"ParameterList","parameters":[],"src":"4030:0:31"},"scope":8840,"src":"3929:103:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8841,"src":"592:3442:31","usedErrors":[381,384,659,664,1199,1202,1438,1451,1812,2274,2537,8600,8602,8604,8606],"usedEvents":[389,1211,1220,1229,1366,8584,8592,8598]}],"src":"32:4003:31"},"id":31},"contracts/SignedRewardDistributor.sol":{"ast":{"absolutePath":"contracts/SignedRewardDistributor.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"ContextUpgradeable":[860],"ECDSA":[4689],"EIP712":[4916],"ERC165Upgradeable":[1189],"ERC1967Utils":[1712],"IAccessControl":[1272],"IERC1363":[1354],"IERC165":[5014],"IERC1822Proxiable":[1418],"IERC20":[1800],"IERC5267":[1408],"Initializable":[632],"MessageHashUtils":[5002],"PausableUpgradeable":[1020],"ReentrancyGuardUpgradeable":[1149],"RewardPool":[8840],"SafeERC20":[2264],"ShortString":[2604],"ShortStrings":[2815],"SignedRewardDistributor":[9340],"UUPSUpgradeable":[814]},"id":9341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8842,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:32"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":8843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9341,"sourceUnit":365,"src":"58:81:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":8844,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9341,"sourceUnit":1021,"src":"140:75:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":8845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9341,"sourceUnit":1150,"src":"216:82:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":8846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9341,"sourceUnit":633,"src":"299:75:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":8847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9341,"sourceUnit":815,"src":"375:77:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":8848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9341,"sourceUnit":4690,"src":"453:62:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":8849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9341,"sourceUnit":4917,"src":"516:63:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/RewardPool.sol","file":"./RewardPool.sol","id":8850,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9341,"sourceUnit":8841,"src":"580:26:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8852,"name":"Initializable","nameLocations":["757:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"757:13:32"},"id":8853,"nodeType":"InheritanceSpecifier","src":"757:13:32"},{"baseName":{"id":8854,"name":"AccessControlUpgradeable","nameLocations":["777:24:32"],"nodeType":"IdentifierPath","referencedDeclaration":364,"src":"777:24:32"},"id":8855,"nodeType":"InheritanceSpecifier","src":"777:24:32"},{"baseName":{"id":8856,"name":"PausableUpgradeable","nameLocations":["808:19:32"],"nodeType":"IdentifierPath","referencedDeclaration":1020,"src":"808:19:32"},"id":8857,"nodeType":"InheritanceSpecifier","src":"808:19:32"},{"baseName":{"id":8858,"name":"ReentrancyGuardUpgradeable","nameLocations":["834:26:32"],"nodeType":"IdentifierPath","referencedDeclaration":1149,"src":"834:26:32"},"id":8859,"nodeType":"InheritanceSpecifier","src":"834:26:32"},{"baseName":{"id":8860,"name":"UUPSUpgradeable","nameLocations":["867:15:32"],"nodeType":"IdentifierPath","referencedDeclaration":814,"src":"867:15:32"},"id":8861,"nodeType":"InheritanceSpecifier","src":"867:15:32"},{"baseName":{"id":8862,"name":"EIP712","nameLocations":["888:6:32"],"nodeType":"IdentifierPath","referencedDeclaration":4916,"src":"888:6:32"},"id":8863,"nodeType":"InheritanceSpecifier","src":"888:6:32"}],"canonicalName":"SignedRewardDistributor","contractDependencies":[],"contractKind":"contract","documentation":{"id":8851,"nodeType":"StructuredDocumentation","src":"608:107:32","text":" @title SignedRewardDistributor\n @dev Handles EIP-712 signed reward claims with pre-funded pool"},"fullyImplemented":true,"id":9340,"linearizedBaseContracts":[9340,4916,1408,814,1418,1149,1020,364,1189,5014,1272,860,632],"name":"SignedRewardDistributor","nameLocation":"725:23:32","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8866,"libraryName":{"id":8864,"name":"ECDSA","nameLocations":["908:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":4689,"src":"908:5:32"},"nodeType":"UsingForDirective","src":"902:24:32","typeName":{"id":8865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"918:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":true,"functionSelector":"e63ab1e9","id":8871,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"956:11:32","nodeType":"VariableDeclaration","scope":9340,"src":"932:62:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"932:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":8869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"980:13:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":8868,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"970:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"970:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"a1ebf35d","id":8876,"mutability":"constant","name":"SIGNER_ROLE","nameLocation":"1024:11:32","nodeType":"VariableDeclaration","scope":9340,"src":"1000:62:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1000:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5349474e45525f524f4c45","id":8874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1048:13:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70","typeString":"literal_string \"SIGNER_ROLE\""},"value":"SIGNER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70","typeString":"literal_string \"SIGNER_ROLE\""}],"id":8873,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1038:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1038:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"66666aa9","id":8879,"mutability":"mutable","name":"rewardPool","nameLocation":"1087:10:32","nodeType":"VariableDeclaration","scope":9340,"src":"1069:28:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_RewardPool_$8840","typeString":"contract RewardPool"},"typeName":{"id":8878,"nodeType":"UserDefinedTypeName","pathNode":{"id":8877,"name":"RewardPool","nameLocations":["1069:10:32"],"nodeType":"IdentifierPath","referencedDeclaration":8840,"src":"1069:10:32"},"referencedDeclaration":8840,"src":"1069:10:32","typeDescriptions":{"typeIdentifier":"t_contract$_RewardPool_$8840","typeString":"contract RewardPool"}},"visibility":"public"},{"canonicalName":"SignedRewardDistributor.Distribution","id":8892,"members":[{"constant":false,"id":8881,"mutability":"mutable","name":"token","nameLocation":"1146:5:32","nodeType":"VariableDeclaration","scope":8892,"src":"1138:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8880,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8883,"mutability":"mutable","name":"total","nameLocation":"1169:5:32","nodeType":"VariableDeclaration","scope":8892,"src":"1161:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8885,"mutability":"mutable","name":"remaining","nameLocation":"1228:9:32","nodeType":"VariableDeclaration","scope":8892,"src":"1220:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8887,"mutability":"mutable","name":"snapshotBlock","nameLocation":"1298:13:32","nodeType":"VariableDeclaration","scope":8892,"src":"1290:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8889,"mutability":"mutable","name":"deadline","nameLocation":"1329:8:32","nodeType":"VariableDeclaration","scope":8892,"src":"1321:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1321:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8891,"mutability":"mutable","name":"active","nameLocation":"1372:6:32","nodeType":"VariableDeclaration","scope":8892,"src":"1367:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8890,"name":"bool","nodeType":"ElementaryTypeName","src":"1367:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Distribution","nameLocation":"1115:12:32","nodeType":"StructDefinition","scope":9340,"src":"1108:277:32","visibility":"public"},{"constant":false,"functionSelector":"dc8999b4","id":8897,"mutability":"mutable","name":"dists","nameLocation":"1431:5:32","nodeType":"VariableDeclaration","scope":9340,"src":"1391:45:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Distribution_$8892_storage_$","typeString":"mapping(uint256 => struct SignedRewardDistributor.Distribution)"},"typeName":{"id":8896,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1399:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1391:32:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Distribution_$8892_storage_$","typeString":"mapping(uint256 => struct SignedRewardDistributor.Distribution)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8895,"nodeType":"UserDefinedTypeName","pathNode":{"id":8894,"name":"Distribution","nameLocations":["1410:12:32"],"nodeType":"IdentifierPath","referencedDeclaration":8892,"src":"1410:12:32"},"referencedDeclaration":8892,"src":"1410:12:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution"}}},"visibility":"public"},{"constant":false,"functionSelector":"120aa877","id":8903,"mutability":"mutable","name":"claimed","nameLocation":"1497:7:32","nodeType":"VariableDeclaration","scope":9340,"src":"1442:62:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":8902,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1450:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1442:47:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8901,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8899,"name":"address","nodeType":"ElementaryTypeName","src":"1469:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1461:27:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1480:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e27e5a775a199e96de84d4ca626ac186c4bbc03163b3d525ea3ad4098b1f25d5","id":8915,"name":"DistributionCreated","nameLocation":"1537:19:32","nodeType":"EventDefinition","parameters":{"id":8914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8905,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1582:2:32","nodeType":"VariableDeclaration","scope":8915,"src":"1566:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8907,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1611:5:32","nodeType":"VariableDeclaration","scope":8915,"src":"1595:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8906,"name":"address","nodeType":"ElementaryTypeName","src":"1595:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8909,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"1635:5:32","nodeType":"VariableDeclaration","scope":8915,"src":"1627:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1627:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8911,"indexed":false,"mutability":"mutable","name":"snapshotBlock","nameLocation":"1659:13:32","nodeType":"VariableDeclaration","scope":8915,"src":"1651:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1651:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8913,"indexed":false,"mutability":"mutable","name":"deadline","nameLocation":"1691:8:32","nodeType":"VariableDeclaration","scope":8915,"src":"1683:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1556:149:32"},"src":"1531:175:32"},{"anonymous":false,"eventSelector":"d9cb1e2714d65a111c0f20f060176ad657496bd47a3de04ec7c3d4ca232112ac","id":8925,"name":"Claimed","nameLocation":"1717:7:32","nodeType":"EventDefinition","parameters":{"id":8924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8917,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1750:2:32","nodeType":"VariableDeclaration","scope":8925,"src":"1734:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1734:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8919,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1779:7:32","nodeType":"VariableDeclaration","scope":8925,"src":"1763:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8918,"name":"address","nodeType":"ElementaryTypeName","src":"1763:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8921,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1805:6:32","nodeType":"VariableDeclaration","scope":8925,"src":"1797:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8920,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8923,"indexed":false,"mutability":"mutable","name":"newClaimedTotal","nameLocation":"1830:15:32","nodeType":"VariableDeclaration","scope":8925,"src":"1822:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1724:127:32"},"src":"1711:141:32"},{"errorSelector":"3a35c2f9","id":8927,"name":"DistributionNotFound","nameLocation":"1864:20:32","nodeType":"ErrorDefinition","parameters":{"id":8926,"nodeType":"ParameterList","parameters":[],"src":"1884:2:32"},"src":"1858:29:32"},{"errorSelector":"92ad2983","id":8929,"name":"DistributionInactive","nameLocation":"1898:20:32","nodeType":"ErrorDefinition","parameters":{"id":8928,"nodeType":"ParameterList","parameters":[],"src":"1918:2:32"},"src":"1892:29:32"},{"errorSelector":"1ab7da6b","id":8931,"name":"DeadlineExpired","nameLocation":"1932:15:32","nodeType":"ErrorDefinition","parameters":{"id":8930,"nodeType":"ParameterList","parameters":[],"src":"1947:2:32"},"src":"1926:24:32"},{"errorSelector":"769d11e4","id":8933,"name":"InvalidDeadline","nameLocation":"1961:15:32","nodeType":"ErrorDefinition","parameters":{"id":8932,"nodeType":"ParameterList","parameters":[],"src":"1976:2:32"},"src":"1955:24:32"},{"errorSelector":"13f39304","id":8935,"name":"InsufficientRemaining","nameLocation":"1990:21:32","nodeType":"ErrorDefinition","parameters":{"id":8934,"nodeType":"ParameterList","parameters":[],"src":"2011:2:32"},"src":"1984:30:32"},{"errorSelector":"fc559f00","id":8937,"name":"NoAmountToClaim","nameLocation":"2025:15:32","nodeType":"ErrorDefinition","parameters":{"id":8936,"nodeType":"ParameterList","parameters":[],"src":"2040:2:32"},"src":"2019:24:32"},{"errorSelector":"8baa579f","id":8939,"name":"InvalidSignature","nameLocation":"2054:16:32","nodeType":"ErrorDefinition","parameters":{"id":8938,"nodeType":"ParameterList","parameters":[],"src":"2070:2:32"},"src":"2048:25:32"},{"errorSelector":"ca31867a","id":8941,"name":"UnauthorizedSigner","nameLocation":"2084:18:32","nodeType":"ErrorDefinition","parameters":{"id":8940,"nodeType":"ParameterList","parameters":[],"src":"2102:2:32"},"src":"2078:27:32"},{"errorSelector":"2c5211c6","id":8943,"name":"InvalidAmount","nameLocation":"2116:13:32","nodeType":"ErrorDefinition","parameters":{"id":8942,"nodeType":"ParameterList","parameters":[],"src":"2129:2:32"},"src":"2110:22:32"},{"body":{"id":8954,"nodeType":"Block","src":"2244:39:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8951,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"2254:20:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2254:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8953,"nodeType":"ExpressionStatement","src":"2254:22:32"}]},"documentation":{"id":8944,"nodeType":"StructuredDocumentation","src":"2138:48:32","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":8955,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"5369676e65645265776172644469737472696275746f72","id":8947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2212:25:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_d7c30a1dd427de7b433c1d4ec89d2716d9114fa9a8cd3ead6f5b72e370ac2344","typeString":"literal_string \"SignedRewardDistributor\""},"value":"SignedRewardDistributor"},{"hexValue":"31","id":8948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2239:3:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":8949,"kind":"baseConstructorSpecifier","modifierName":{"id":8946,"name":"EIP712","nameLocations":["2205:6:32"],"nodeType":"IdentifierPath","referencedDeclaration":4916,"src":"2205:6:32"},"nodeType":"ModifierInvocation","src":"2205:38:32"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8945,"nodeType":"ParameterList","parameters":[],"src":"2202:2:32"},"returnParameters":{"id":8950,"nodeType":"ParameterList","parameters":[],"src":"2244:0:32"},"scope":9340,"src":"2191:92:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8999,"nodeType":"Block","src":"2412:326:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8966,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2422:20:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2422:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8968,"nodeType":"ExpressionStatement","src":"2422:22:32"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8969,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"2454:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2454:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8971,"nodeType":"ExpressionStatement","src":"2454:17:32"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8972,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2481:22:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2481:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8974,"nodeType":"ExpressionStatement","src":"2481:24:32"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8975,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"2515:22:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2515:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8977,"nodeType":"ExpressionStatement","src":"2515:24:32"},{"expression":{"id":8982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8978,"name":"rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"2558:10:32","typeDescriptions":{"typeIdentifier":"t_contract$_RewardPool_$8840","typeString":"contract RewardPool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8980,"name":"_rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8957,"src":"2582:11:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8979,"name":"RewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8840,"src":"2571:10:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RewardPool_$8840_$","typeString":"type(contract RewardPool)"}},"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2571:23:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_RewardPool_$8840","typeString":"contract RewardPool"}},"src":"2558:36:32","typeDescriptions":{"typeIdentifier":"t_contract$_RewardPool_$8840","typeString":"contract RewardPool"}},"id":8983,"nodeType":"ExpressionStatement","src":"2558:36:32"},{"expression":{"arguments":[{"id":8985,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2624:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8986,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"2644:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8984,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2613:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2613:37:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8988,"nodeType":"ExpressionStatement","src":"2613:37:32"},{"expression":{"arguments":[{"id":8990,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"2671:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8991,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"2684:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8989,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2660:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8993,"nodeType":"ExpressionStatement","src":"2660:30:32"},{"expression":{"arguments":[{"id":8995,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8876,"src":"2711:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8996,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"2724:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8994,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2700:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8998,"nodeType":"ExpressionStatement","src":"2700:31:32"}]},"functionSelector":"c0c53b8b","id":9000,"implemented":true,"kind":"function","modifiers":[{"id":8964,"kind":"modifierInvocation","modifierName":{"id":8963,"name":"initializer","nameLocations":["2400:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":472,"src":"2400:11:32"},"nodeType":"ModifierInvocation","src":"2400:11:32"}],"name":"initialize","nameLocation":"2298:10:32","nodeType":"FunctionDefinition","parameters":{"id":8962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8957,"mutability":"mutable","name":"_rewardPool","nameLocation":"2326:11:32","nodeType":"VariableDeclaration","scope":9000,"src":"2318:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8956,"name":"address","nodeType":"ElementaryTypeName","src":"2318:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8959,"mutability":"mutable","name":"admin","nameLocation":"2356:5:32","nodeType":"VariableDeclaration","scope":9000,"src":"2348:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8958,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8961,"mutability":"mutable","name":"signer","nameLocation":"2380:6:32","nodeType":"VariableDeclaration","scope":9000,"src":"2372:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8960,"name":"address","nodeType":"ElementaryTypeName","src":"2372:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2308:84:32"},"returnParameters":{"id":8965,"nodeType":"ParameterList","parameters":[],"src":"2412:0:32"},"scope":9340,"src":"2289:449:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9071,"nodeType":"Block","src":"3006:584:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9017,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"3020:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3029:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9018,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:32","typeDescriptions":{}}},"id":9021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3029:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9026,"nodeType":"IfStatement","src":"3016:47:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9023,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8943,"src":"3048:13:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3048:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9025,"nodeType":"RevertStatement","src":"3041:22:32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9027,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9007,"src":"3077:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3086:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3077:10:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9033,"nodeType":"IfStatement","src":"3073:38:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9030,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8943,"src":"3096:13:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3096:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9032,"nodeType":"RevertStatement","src":"3089:22:32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9034,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9011,"src":"3125:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9035,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3137:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3143:9:32","memberName":"timestamp","nodeType":"MemberAccess","src":"3137:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3125:27:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9041,"nodeType":"IfStatement","src":"3121:57:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9038,"name":"InvalidDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"3161:15:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3161:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9040,"nodeType":"RevertStatement","src":"3154:24:32"}},{"condition":{"expression":{"baseExpression":{"id":9042,"name":"dists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"3192:5:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Distribution_$8892_storage_$","typeString":"mapping(uint256 => struct SignedRewardDistributor.Distribution storage ref)"}},"id":9044,"indexExpression":{"id":9043,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"3198:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3192:9:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage","typeString":"struct SignedRewardDistributor.Distribution storage ref"}},"id":9045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3202:6:32","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"3192:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9049,"nodeType":"IfStatement","src":"3188:51:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9046,"name":"DistributionNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8927,"src":"3217:20:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3217:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9048,"nodeType":"RevertStatement","src":"3210:29:32"}},{"expression":{"id":9061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9050,"name":"dists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"3279:5:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Distribution_$8892_storage_$","typeString":"mapping(uint256 => struct SignedRewardDistributor.Distribution storage ref)"}},"id":9052,"indexExpression":{"id":9051,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"3285:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3279:9:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage","typeString":"struct SignedRewardDistributor.Distribution storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9054,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"3325:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9055,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9007,"src":"3351:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9056,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9007,"src":"3381:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9057,"name":"snapshotBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"3415:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9058,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9011,"src":"3452:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":9059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9053,"name":"Distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"3291:12:32","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Distribution_$8892_storage_ptr_$","typeString":"type(struct SignedRewardDistributor.Distribution storage pointer)"}},"id":9060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3318:5:32","3344:5:32","3370:9:32","3400:13:32","3442:8:32","3474:6:32"],"names":["token","total","remaining","snapshotBlock","deadline","active"],"nodeType":"FunctionCall","src":"3291:206:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_memory_ptr","typeString":"struct SignedRewardDistributor.Distribution memory"}},"src":"3279:218:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage","typeString":"struct SignedRewardDistributor.Distribution storage ref"}},"id":9062,"nodeType":"ExpressionStatement","src":"3279:218:32"},{"eventCall":{"arguments":[{"id":9064,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"3541:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9065,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"3545:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9066,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9007,"src":"3552:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9067,"name":"snapshotBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"3559:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9068,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9011,"src":"3574:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9063,"name":"DistributionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"3521:19:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256,uint256)"}},"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3521:62:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9070,"nodeType":"EmitStatement","src":"3516:67:32"}]},"documentation":{"id":9001,"nodeType":"StructuredDocumentation","src":"2744:62:32","text":" @dev Create a new distribution (admin only)"},"functionSelector":"dba2844b","id":9072,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9014,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2986:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9015,"kind":"modifierInvocation","modifierName":{"id":9013,"name":"onlyRole","nameLocations":["2977:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2977:8:32"},"nodeType":"ModifierInvocation","src":"2977:28:32"}],"name":"createDistribution","nameLocation":"2820:18:32","nodeType":"FunctionDefinition","parameters":{"id":9012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9003,"mutability":"mutable","name":"id","nameLocation":"2856:2:32","nodeType":"VariableDeclaration","scope":9072,"src":"2848:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9002,"name":"uint256","nodeType":"ElementaryTypeName","src":"2848:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9005,"mutability":"mutable","name":"token","nameLocation":"2876:5:32","nodeType":"VariableDeclaration","scope":9072,"src":"2868:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9004,"name":"address","nodeType":"ElementaryTypeName","src":"2868:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9007,"mutability":"mutable","name":"total","nameLocation":"2899:5:32","nodeType":"VariableDeclaration","scope":9072,"src":"2891:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9006,"name":"uint256","nodeType":"ElementaryTypeName","src":"2891:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9009,"mutability":"mutable","name":"snapshotBlock","nameLocation":"2922:13:32","nodeType":"VariableDeclaration","scope":9072,"src":"2914:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9008,"name":"uint256","nodeType":"ElementaryTypeName","src":"2914:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9011,"mutability":"mutable","name":"deadline","nameLocation":"2953:8:32","nodeType":"VariableDeclaration","scope":9072,"src":"2945:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2945:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2838:129:32"},"returnParameters":{"id":9016,"nodeType":"ParameterList","parameters":[],"src":"3006:0:32"},"scope":9340,"src":"2811:779:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9225,"nodeType":"Block","src":"3894:1468:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9092,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"3908:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3927:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3919:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9093,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:32","typeDescriptions":{}}},"id":9096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3919:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3908:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9101,"nodeType":"IfStatement","src":"3904:49:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9098,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8943,"src":"3938:13:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3938:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9100,"nodeType":"RevertStatement","src":"3931:22:32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9102,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9083,"src":"3967:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9103,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3979:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:9:32","memberName":"timestamp","nodeType":"MemberAccess","src":"3979:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3967:27:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9109,"nodeType":"IfStatement","src":"3963:57:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9106,"name":"DeadlineExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"4003:15:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4003:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9108,"nodeType":"RevertStatement","src":"3996:24:32"}},{"assignments":[9112],"declarations":[{"constant":false,"id":9112,"mutability":"mutable","name":"dist","nameLocation":"4060:4:32","nodeType":"VariableDeclaration","scope":9225,"src":"4039:25:32","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution"},"typeName":{"id":9111,"nodeType":"UserDefinedTypeName","pathNode":{"id":9110,"name":"Distribution","nameLocations":["4039:12:32"],"nodeType":"IdentifierPath","referencedDeclaration":8892,"src":"4039:12:32"},"referencedDeclaration":8892,"src":"4039:12:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution"}},"visibility":"internal"}],"id":9116,"initialValue":{"baseExpression":{"id":9113,"name":"dists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"4067:5:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Distribution_$8892_storage_$","typeString":"mapping(uint256 => struct SignedRewardDistributor.Distribution storage ref)"}},"id":9115,"indexExpression":{"id":9114,"name":"distributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9075,"src":"4073:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4067:21:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage","typeString":"struct SignedRewardDistributor.Distribution storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4039:49:32"},{"condition":{"id":9119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4102:12:32","subExpression":{"expression":{"id":9117,"name":"dist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"4103:4:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution storage pointer"}},"id":9118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4108:6:32","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"4103:11:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9123,"nodeType":"IfStatement","src":"4098:47:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9120,"name":"DistributionInactive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"4123:20:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4123:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9122,"nodeType":"RevertStatement","src":"4116:29:32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9124,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9083,"src":"4159:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9125,"name":"dist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"4170:4:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution storage pointer"}},"id":9126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4175:8:32","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":8889,"src":"4170:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4159:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9131,"nodeType":"IfStatement","src":"4155:54:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9128,"name":"DeadlineExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"4192:15:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9130,"nodeType":"RevertStatement","src":"4185:24:32"}},{"assignments":[9133],"declarations":[{"constant":false,"id":9133,"mutability":"mutable","name":"digest","nameLocation":"4272:6:32","nodeType":"VariableDeclaration","scope":9225,"src":"4264:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4264:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9149,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"436c61696d2875696e7432353620646973747269627574696f6e49642c6279746573333220706f737449642c61646472657373206163636f756e742c75696e7432353620617574686f72697a6564416d6f756e742c75696e7432353620646561646c696e6529","id":9139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4342:104:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3f1b81f38aed56d9d50835cd8510e70aff243bef2f53673805bc198203518a9","typeString":"literal_string \"Claim(uint256 distributionId,bytes32 postId,address account,uint256 authorizedAmount,uint256 deadline)\""},"value":"Claim(uint256 distributionId,bytes32 postId,address account,uint256 authorizedAmount,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e3f1b81f38aed56d9d50835cd8510e70aff243bef2f53673805bc198203518a9","typeString":"literal_string \"Claim(uint256 distributionId,bytes32 postId,address account,uint256 authorizedAmount,uint256 deadline)\""}],"id":9138,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4332:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4332:115:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9141,"name":"distributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9075,"src":"4461:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9142,"name":"postId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"4489:6:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"4509:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9144,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"4530:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9145,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9083,"src":"4560:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9136,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4308:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4312:6:32","memberName":"encode","nodeType":"MemberAccess","src":"4308:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4308:270:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9135,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4298:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4298:281:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9134,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"4281:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":9148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4281:299:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4264:316:32"},{"assignments":[9151],"declarations":[{"constant":false,"id":9151,"mutability":"mutable","name":"signer","nameLocation":"4607:6:32","nodeType":"VariableDeclaration","scope":9225,"src":"4599:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9150,"name":"address","nodeType":"ElementaryTypeName","src":"4599:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9156,"initialValue":{"arguments":[{"id":9154,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"4631:9:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":9152,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"4616:6:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:7:32","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4445,"src":"4616:14:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":9155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4616:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4599:42:32"},{"condition":{"id":9161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4655:29:32","subExpression":{"arguments":[{"id":9158,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8876,"src":"4664:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9159,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"4677:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9157,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4656:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:28:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9165,"nodeType":"IfStatement","src":"4651:62:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9162,"name":"UnauthorizedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"4693:18:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9164,"nodeType":"RevertStatement","src":"4686:27:32"}},{"assignments":[9167],"declarations":[{"constant":false,"id":9167,"mutability":"mutable","name":"alreadyClaimed","nameLocation":"4778:14:32","nodeType":"VariableDeclaration","scope":9225,"src":"4770:22:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9166,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9173,"initialValue":{"baseExpression":{"baseExpression":{"id":9168,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"4795:7:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":9170,"indexExpression":{"id":9169,"name":"distributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9075,"src":"4803:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4795:23:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9172,"indexExpression":{"id":9171,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"4819:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4795:32:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4770:57:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9174,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"4841:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9175,"name":"alreadyClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9167,"src":"4861:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4841:34:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9180,"nodeType":"IfStatement","src":"4837:64:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9177,"name":"NoAmountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"4884:15:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4884:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9179,"nodeType":"RevertStatement","src":"4877:24:32"}},{"assignments":[9182],"declarations":[{"constant":false,"id":9182,"mutability":"mutable","name":"toClaim","nameLocation":"4928:7:32","nodeType":"VariableDeclaration","scope":9225,"src":"4920:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9181,"name":"uint256","nodeType":"ElementaryTypeName","src":"4920:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9186,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9183,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"4938:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9184,"name":"alreadyClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9167,"src":"4957:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4938:33:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4920:51:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9187,"name":"dist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"4985:4:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution storage pointer"}},"id":9188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4990:9:32","memberName":"remaining","nodeType":"MemberAccess","referencedDeclaration":8885,"src":"4985:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9189,"name":"toClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9182,"src":"5002:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4985:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9194,"nodeType":"IfStatement","src":"4981:60:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9191,"name":"InsufficientRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8935,"src":"5018:21:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5018:23:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9193,"nodeType":"RevertStatement","src":"5011:30:32"}},{"expression":{"id":9201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9195,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"5084:7:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":9198,"indexExpression":{"id":9196,"name":"distributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9075,"src":"5092:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5084:23:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9199,"indexExpression":{"id":9197,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"5108:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5084:32:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9200,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"5119:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5084:51:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9202,"nodeType":"ExpressionStatement","src":"5084:51:32"},{"expression":{"id":9207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9203,"name":"dist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"5145:4:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution storage pointer"}},"id":9205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5150:9:32","memberName":"remaining","nodeType":"MemberAccess","referencedDeclaration":8885,"src":"5145:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":9206,"name":"toClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9182,"src":"5163:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9208,"nodeType":"ExpressionStatement","src":"5145:25:32"},{"expression":{"arguments":[{"expression":{"id":9212,"name":"dist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"5243:4:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution storage pointer"}},"id":9213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5248:5:32","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8881,"src":"5243:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9214,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"5255:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9215,"name":"toClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9182,"src":"5264:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9209,"name":"rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"5226:10:32","typeDescriptions":{"typeIdentifier":"t_contract$_RewardPool_$8840","typeString":"contract RewardPool"}},"id":9211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5237:5:32","memberName":"payTo","nodeType":"MemberAccess","referencedDeclaration":8741,"src":"5226:16:32","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":9216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5226:46:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9217,"nodeType":"ExpressionStatement","src":"5226:46:32"},{"eventCall":{"arguments":[{"id":9219,"name":"distributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9075,"src":"5304:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9220,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"5320:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9221,"name":"toClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9182,"src":"5329:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9222,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"5338:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9218,"name":"Claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"5296:7:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":9223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5296:59:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9224,"nodeType":"EmitStatement","src":"5291:64:32"}]},"documentation":{"id":9073,"nodeType":"StructuredDocumentation","src":"3596:61:32","text":" @dev Claim rewards using EIP-712 signature"},"functionSelector":"c32dcd8d","id":9226,"implemented":true,"kind":"function","modifiers":[{"id":9088,"kind":"modifierInvocation","modifierName":{"id":9087,"name":"nonReentrant","nameLocations":["3867:12:32"],"nodeType":"IdentifierPath","referencedDeclaration":1089,"src":"3867:12:32"},"nodeType":"ModifierInvocation","src":"3867:12:32"},{"id":9090,"kind":"modifierInvocation","modifierName":{"id":9089,"name":"whenNotPaused","nameLocations":["3880:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":910,"src":"3880:13:32"},"nodeType":"ModifierInvocation","src":"3880:13:32"}],"name":"claim","nameLocation":"3671:5:32","nodeType":"FunctionDefinition","parameters":{"id":9086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9075,"mutability":"mutable","name":"distributionId","nameLocation":"3694:14:32","nodeType":"VariableDeclaration","scope":9226,"src":"3686:22:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9074,"name":"uint256","nodeType":"ElementaryTypeName","src":"3686:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9077,"mutability":"mutable","name":"postId","nameLocation":"3726:6:32","nodeType":"VariableDeclaration","scope":9226,"src":"3718:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3718:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9079,"mutability":"mutable","name":"account","nameLocation":"3750:7:32","nodeType":"VariableDeclaration","scope":9226,"src":"3742:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9078,"name":"address","nodeType":"ElementaryTypeName","src":"3742:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9081,"mutability":"mutable","name":"authorizedAmount","nameLocation":"3775:16:32","nodeType":"VariableDeclaration","scope":9226,"src":"3767:24:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9080,"name":"uint256","nodeType":"ElementaryTypeName","src":"3767:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9083,"mutability":"mutable","name":"deadline","nameLocation":"3809:8:32","nodeType":"VariableDeclaration","scope":9226,"src":"3801:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9082,"name":"uint256","nodeType":"ElementaryTypeName","src":"3801:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9085,"mutability":"mutable","name":"signature","nameLocation":"3842:9:32","nodeType":"VariableDeclaration","scope":9226,"src":"3827:24:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9084,"name":"bytes","nodeType":"ElementaryTypeName","src":"3827:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3676:181:32"},"returnParameters":{"id":9091,"nodeType":"ParameterList","parameters":[],"src":"3894:0:32"},"scope":9340,"src":"3662:1700:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9276,"nodeType":"Block","src":"5533:413:32","statements":[{"assignments":[9239],"declarations":[{"constant":false,"id":9239,"mutability":"mutable","name":"dist","nameLocation":"5564:4:32","nodeType":"VariableDeclaration","scope":9276,"src":"5543:25:32","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution"},"typeName":{"id":9238,"nodeType":"UserDefinedTypeName","pathNode":{"id":9237,"name":"Distribution","nameLocations":["5543:12:32"],"nodeType":"IdentifierPath","referencedDeclaration":8892,"src":"5543:12:32"},"referencedDeclaration":8892,"src":"5543:12:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution"}},"visibility":"internal"}],"id":9243,"initialValue":{"baseExpression":{"id":9240,"name":"dists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"5571:5:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Distribution_$8892_storage_$","typeString":"mapping(uint256 => struct SignedRewardDistributor.Distribution storage ref)"}},"id":9242,"indexExpression":{"id":9241,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9229,"src":"5577:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5571:9:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage","typeString":"struct SignedRewardDistributor.Distribution storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5543:37:32"},{"condition":{"id":9246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5594:12:32","subExpression":{"expression":{"id":9244,"name":"dist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9239,"src":"5595:4:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution storage pointer"}},"id":9245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5600:6:32","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"5595:11:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9250,"nodeType":"IfStatement","src":"5590:47:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9247,"name":"DistributionInactive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"5615:20:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9249,"nodeType":"RevertStatement","src":"5608:29:32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9251,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5651:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5657:9:32","memberName":"timestamp","nodeType":"MemberAccess","src":"5651:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9253,"name":"dist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9239,"src":"5670:4:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution storage pointer"}},"id":9254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5675:8:32","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":8889,"src":"5670:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5651:32:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9259,"nodeType":"IfStatement","src":"5647:62:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9256,"name":"DeadlineExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"5692:15:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5692:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9258,"nodeType":"RevertStatement","src":"5685:24:32"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9260,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9231,"src":"5723:2:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5737:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5729:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9261,"name":"address","nodeType":"ElementaryTypeName","src":"5729:7:32","typeDescriptions":{}}},"id":9264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5729:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5723:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9269,"nodeType":"IfStatement","src":"5719:44:32","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9266,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8943,"src":"5748:13:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5748:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9268,"nodeType":"RevertStatement","src":"5741:22:32"}},{"expression":{"id":9274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9270,"name":"dist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9239,"src":"5782:4:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution storage pointer"}},"id":9272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5787:6:32","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"5782:11:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5796:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5782:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9275,"nodeType":"ExpressionStatement","src":"5782:19:32"}]},"documentation":{"id":9227,"nodeType":"StructuredDocumentation","src":"5368:74:32","text":" @dev Sweep remaining tokens after deadline (admin only)"},"functionSelector":"95130a8b","id":9277,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9234,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"5513:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9235,"kind":"modifierInvocation","modifierName":{"id":9233,"name":"onlyRole","nameLocations":["5504:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5504:8:32"},"nodeType":"ModifierInvocation","src":"5504:28:32"}],"name":"sweepRemainder","nameLocation":"5456:14:32","nodeType":"FunctionDefinition","parameters":{"id":9232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9229,"mutability":"mutable","name":"id","nameLocation":"5479:2:32","nodeType":"VariableDeclaration","scope":9277,"src":"5471:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5471:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9231,"mutability":"mutable","name":"to","nameLocation":"5491:2:32","nodeType":"VariableDeclaration","scope":9277,"src":"5483:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9230,"name":"address","nodeType":"ElementaryTypeName","src":"5483:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5470:24:32"},"returnParameters":{"id":9236,"nodeType":"ParameterList","parameters":[],"src":"5533:0:32"},"scope":9340,"src":"5447:499:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9287,"nodeType":"Block","src":"6051:25:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9284,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6061:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6061:8:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9286,"nodeType":"ExpressionStatement","src":"6061:8:32"}]},"documentation":{"id":9278,"nodeType":"StructuredDocumentation","src":"5952:46:32","text":" @dev Pause/unpause contract"},"functionSelector":"8456cb59","id":9288,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9281,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"6038:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9282,"kind":"modifierInvocation","modifierName":{"id":9280,"name":"onlyRole","nameLocations":["6029:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"6029:8:32"},"nodeType":"ModifierInvocation","src":"6029:21:32"}],"name":"pause","nameLocation":"6012:5:32","nodeType":"FunctionDefinition","parameters":{"id":9279,"nodeType":"ParameterList","parameters":[],"src":"6017:2:32"},"returnParameters":{"id":9283,"nodeType":"ParameterList","parameters":[],"src":"6051:0:32"},"scope":9340,"src":"6003:73:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9297,"nodeType":"Block","src":"6132:27:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9294,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"6142:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6142:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9296,"nodeType":"ExpressionStatement","src":"6142:10:32"}]},"functionSelector":"3f4ba83a","id":9298,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9291,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"6119:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9292,"kind":"modifierInvocation","modifierName":{"id":9290,"name":"onlyRole","nameLocations":["6110:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"6110:8:32"},"nodeType":"ModifierInvocation","src":"6110:21:32"}],"name":"unpause","nameLocation":"6091:7:32","nodeType":"FunctionDefinition","parameters":{"id":9289,"nodeType":"ParameterList","parameters":[],"src":"6098:2:32"},"returnParameters":{"id":9293,"nodeType":"ParameterList","parameters":[],"src":"6132:0:32"},"scope":9340,"src":"6082:77:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9311,"nodeType":"Block","src":"6296:33:32","statements":[{"expression":{"baseExpression":{"id":9307,"name":"dists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"6313:5:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Distribution_$8892_storage_$","typeString":"mapping(uint256 => struct SignedRewardDistributor.Distribution storage ref)"}},"id":9309,"indexExpression":{"id":9308,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9301,"src":"6319:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6313:9:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage","typeString":"struct SignedRewardDistributor.Distribution storage ref"}},"functionReturnParameters":9306,"id":9310,"nodeType":"Return","src":"6306:16:32"}]},"documentation":{"id":9299,"nodeType":"StructuredDocumentation","src":"6165:45:32","text":" @dev Get distribution info"},"functionSelector":"3b345a87","id":9312,"implemented":true,"kind":"function","modifiers":[],"name":"getDistribution","nameLocation":"6224:15:32","nodeType":"FunctionDefinition","parameters":{"id":9302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9301,"mutability":"mutable","name":"id","nameLocation":"6248:2:32","nodeType":"VariableDeclaration","scope":9312,"src":"6240:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9300,"name":"uint256","nodeType":"ElementaryTypeName","src":"6240:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6239:12:32"},"returnParameters":{"id":9306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9312,"src":"6275:19:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_memory_ptr","typeString":"struct SignedRewardDistributor.Distribution"},"typeName":{"id":9304,"nodeType":"UserDefinedTypeName","pathNode":{"id":9303,"name":"Distribution","nameLocations":["6275:12:32"],"nodeType":"IdentifierPath","referencedDeclaration":8892,"src":"6275:12:32"},"referencedDeclaration":8892,"src":"6275:12:32","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$8892_storage_ptr","typeString":"struct SignedRewardDistributor.Distribution"}},"visibility":"internal"}],"src":"6274:21:32"},"scope":9340,"src":"6215:114:32","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9328,"nodeType":"Block","src":"6472:44:32","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":9322,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"6489:7:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":9324,"indexExpression":{"id":9323,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9315,"src":"6497:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6489:11:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9326,"indexExpression":{"id":9325,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9317,"src":"6501:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6489:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9321,"id":9327,"nodeType":"Return","src":"6482:27:32"}]},"documentation":{"id":9313,"nodeType":"StructuredDocumentation","src":"6335:51:32","text":" @dev Get claimed amount for user"},"functionSelector":"e2d80d15","id":9329,"implemented":true,"kind":"function","modifiers":[],"name":"getClaimed","nameLocation":"6400:10:32","nodeType":"FunctionDefinition","parameters":{"id":9318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9315,"mutability":"mutable","name":"id","nameLocation":"6419:2:32","nodeType":"VariableDeclaration","scope":9329,"src":"6411:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9314,"name":"uint256","nodeType":"ElementaryTypeName","src":"6411:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9317,"mutability":"mutable","name":"account","nameLocation":"6431:7:32","nodeType":"VariableDeclaration","scope":9329,"src":"6423:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9316,"name":"address","nodeType":"ElementaryTypeName","src":"6423:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6410:29:32"},"returnParameters":{"id":9321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9329,"src":"6463:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9319,"name":"uint256","nodeType":"ElementaryTypeName","src":"6463:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6462:9:32"},"scope":9340,"src":"6391:125:32","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[768],"body":{"id":9338,"nodeType":"Block","src":"6623:2:32","statements":[]},"id":9339,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9335,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6603:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9336,"kind":"modifierInvocation","modifierName":{"id":9334,"name":"onlyRole","nameLocations":["6594:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"6594:8:32"},"nodeType":"ModifierInvocation","src":"6594:28:32"}],"name":"_authorizeUpgrade","nameLocation":"6531:17:32","nodeType":"FunctionDefinition","overrides":{"id":9333,"nodeType":"OverrideSpecifier","overrides":[],"src":"6585:8:32"},"parameters":{"id":9332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9331,"mutability":"mutable","name":"newImplementation","nameLocation":"6557:17:32","nodeType":"VariableDeclaration","scope":9339,"src":"6549:25:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9330,"name":"address","nodeType":"ElementaryTypeName","src":"6549:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6548:27:32"},"returnParameters":{"id":9337,"nodeType":"ParameterList","parameters":[],"src":"6623:0:32"},"scope":9340,"src":"6522:103:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":9341,"src":"716:5911:32","usedErrors":[381,384,659,664,899,902,1051,1199,1202,1438,1451,2274,2537,2612,2614,4352,4357,4362,8927,8929,8931,8933,8935,8937,8939,8941,8943],"usedEvents":[389,891,896,1211,1220,1229,1366,1388,8915,8925]}],"src":"32:6596:32"},"id":32}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d7a2971376891496b37216d93c14b69d992693a7f65420db0cf49d919e3ce07e64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 LOG2 SWAP8 SGT PUSH23 0x891496B37216D93C14B69D992693A7F65420DB0CF49D91 SWAP15 EXTCODECOPY 0xE0 PUSH31 0x64736F6C634300081800330000000000000000000000000000000000000000 ","sourceMap":"496:5741:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d7a2971376891496b37216d93c14b69d992693a7f65420db0cf49d919e3ce07e64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 LOG2 SWAP8 SGT PUSH23 0x891496B37216D93C14B69D992693A7F65420DB0CF49D91 SWAP15 EXTCODECOPY 0xE0 PUSH31 0x64736F6C634300081800330000000000000000000000000000000000000000 ","sourceMap":"496:5741:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084357816b90296d501277b11e7c3a6593be9f7250bd5f45a8af5c1cf0780a6c664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 CALLDATALOAD PUSH25 0x16B90296D501277B11E7C3A6593BE9F7250BD5F45A8AF5C1CF SMOD DUP1 0xA6 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"698:9376:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084357816b90296d501277b11e7c3a6593be9f7250bd5f45a8af5c1cf0780a6c664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 CALLDATALOAD PUSH25 0x16B90296D501277B11E7C3A6593BE9F7250BD5F45A8AF5C1CF SMOD DUP1 0xA6 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"698:9376:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ceb427b58d6be86075c859cfcb19f1a1a4919378f6ccde5b819117ea6bcba9a964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xB4 0x27 0xB5 DUP14 PUSH12 0xE86075C859CFCB19F1A1A491 SWAP4 PUSH25 0xF6CCDE5B819117EA6BCBA9A964736F6C634300081800330000 ","sourceMap":"233:5762:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5762:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ceb427b58d6be86075c859cfcb19f1a1a4919378f6ccde5b819117ea6bcba9a964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xB4 0x27 0xB5 DUP14 PUSH12 0xE86075C859CFCB19F1A1A491 SWAP4 PUSH25 0xF6CCDE5B819117EA6BCBA9A964736F6C634300081800330000 ","sourceMap":"233:5762:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dcf6fef9bdee0a2c32c287cc6aabdc9ec4f704aea12441fdb62ac7f887c8d75864736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xF6 INVALID 0xF9 0xBD 0xEE EXP 0x2C ORIGIN 0xC2 DUP8 0xCC PUSH11 0xABDC9EC4F704AEA12441FD 0xB6 0x2A 0xC7 0xF8 DUP8 0xC8 0xD7 PC PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"411:484:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dcf6fef9bdee0a2c32c287cc6aabdc9ec4f704aea12441fdb62ac7f887c8d75864736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xF6 INVALID 0xF9 0xBD 0xEE EXP 0x2C ORIGIN 0xC2 DUP8 0xCC PUSH11 0xABDC9EC4F704AEA12441FD 0xB6 0x2A 0xC7 0xF8 DUP8 0xC8 0xD7 PC PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"411:484:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fec73f632edd47d0e7ae9933b51e8f4da78eb465818c4263bebf6623ab05aff164736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xC7 EXTCODEHASH PUSH4 0x2EDD47D0 0xE7 0xAE SWAP10 CALLER 0xB5 0x1E DUP16 0x4D 0xA7 DUP15 0xB4 PUSH6 0x818C4263BEBF PUSH7 0x23AB05AFF16473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"657:1315:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fec73f632edd47d0e7ae9933b51e8f4da78eb465818c4263bebf6623ab05aff164736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xC7 EXTCODEHASH PUSH4 0x2EDD47D0 0xE7 0xAE SWAP10 CALLER 0xB5 0x1E DUP16 0x4D 0xA7 DUP15 0xB4 PUSH6 0x818C4263BEBF PUSH7 0x23AB05AFF16473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"657:1315:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e15b0e899a0629f60a47abe4ceb752ec4265c696ad44bf022922a3963853f8264736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE ISZERO 0xB0 0xE8 SWAP10 LOG0 PUSH3 0x9F60A4 PUSH27 0xBE4CEB752EC4265C696AD44BF022922A3963853F8264736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3046:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3046:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e15b0e899a0629f60a47abe4ceb752ec4265c696ad44bf022922a3963853f8264736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE ISZERO 0xB0 0xE8 SWAP10 LOG0 PUSH3 0x9F60A4 PUSH27 0xBE4CEB752EC4265C696AD44BF022922A3963853F8264736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3046:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d2fe06b1bb59ae338afa04ee6dce686409d6cdc8b507ba3749c3e142db493ae64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x2F 0xE0 PUSH12 0x1BB59AE338AFA04EE6DCE686 BLOCKHASH SWAP14 PUSH13 0xDC8B507BA3749C3E142DB493AE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1407:2774:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d2fe06b1bb59ae338afa04ee6dce686409d6cdc8b507ba3749c3e142db493ae64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x2F 0xE0 PUSH12 0x1BB59AE338AFA04EE6DCE686 BLOCKHASH SWAP14 PUSH13 0xDC8B507BA3749C3E142DB493AE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1407:2774:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3fa6b95cf4f76e64227a9b2373ccb228efd9715fd7983e0646867999cceb9fb64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 STATICCALL PUSH12 0x95CF4F76E64227A9B2373CCB 0x22 DUP15 REVERT SWAP8 ISZERO REVERT PUSH26 0x83E0646867999CCEB9FB64736F6C634300081800330000000000 ","sourceMap":"297:18982:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3fa6b95cf4f76e64227a9b2373ccb228efd9715fd7983e0646867999cceb9fb64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 STATICCALL PUSH12 0x95CF4F76E64227A9B2373CCB 0x22 DUP15 REVERT SWAP8 ISZERO REVERT PUSH26 0x83E0646867999CCEB9FB64736F6C634300081800330000000000 ","sourceMap":"297:18982:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a02ae933cd95f2ee943a9a3e5cbf4c6b7a6f7cc463d2cb58fac8fce23a0ba09464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x2A 0xE9 CALLER 0xCD SWAP6 CALLCODE 0xEE SWAP5 GASPRICE SWAP11 RETURNDATACOPY TLOAD 0xBF 0x4C PUSH12 0x7A6F7CC463D2CB58FAC8FCE2 GASPRICE SIGNEXTEND LOG0 SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"344:7470:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a02ae933cd95f2ee943a9a3e5cbf4c6b7a6f7cc463d2cb58fac8fce23a0ba09464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x2A 0xE9 CALLER 0xCD SWAP6 CALLCODE 0xEE SWAP5 GASPRICE SWAP11 RETURNDATACOPY TLOAD 0xBF 0x4C PUSH12 0x7A6F7CC463D2CB58FAC8FCE2 GASPRICE SIGNEXTEND LOG0 SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"344:7470:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4726,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_nameFallback","offset":0,"slot":"0","type":"t_string_storage"},{"astId":4728,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_versionFallback","offset":0,"slot":"1","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004768bd881d67da99e00ad73ad4392265131c4d4610e2df195f48d6d1cddc06164736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV PUSH23 0x8BD881D67DA99E00AD73AD4392265131C4D4610E2DF195 DELEGATECALL DUP14 PUSH14 0x1CDDC06164736F6C634300081800 CALLER ","sourceMap":"521:3729:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004768bd881d67da99e00ad73ad4392265131c4d4610e2df195f48d6d1cddc06164736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV PUSH23 0x8BD881D67DA99E00AD73AD4392265131C4D4610E2DF195 DELEGATECALL DUP14 PUSH14 0x1CDDC06164736F6C634300081800 CALLER ","sourceMap":"521:3729:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a7690e42315e6899c9737c1a5db38b11240b326a07950b4befbf4ae90b02e56464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 PUSH10 0xE42315E6899C9737C1A TSTORE 0xB3 DUP12 GT 0x24 SIGNEXTEND ORIGIN PUSH11 0x7950B4BEFBF4AE90B02E5 PUSH5 0x64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:31863:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a7690e42315e6899c9737c1a5db38b11240b326a07950b4befbf4ae90b02e56464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 PUSH10 0xE42315E6899C9737C1A TSTORE 0xB3 DUP12 GT 0x24 SIGNEXTEND ORIGIN PUSH11 0x7950B4BEFBF4AE90B02E5 PUSH5 0x64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:31863:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c97bba8d553a67561101942b2a9afa3628667de55efed8df898d3aab783793c64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP8 0xBB 0xA8 0xD5 MSTORE8 0xA6 PUSH22 0x61101942B2A9AFA3628667DE55EFED8DF898D3AAB783 PUSH26 0x3C64736F6C634300081800330000000000000000000000000000 ","sourceMap":"769:34173:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c97bba8d553a67561101942b2a9afa3628667de55efed8df898d3aab783793c64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP8 0xBB 0xA8 0xD5 MSTORE8 0xA6 PUSH22 0x61101942B2A9AFA3628667DE55EFED8DF898D3AAB783 PUSH26 0x3C64736F6C634300081800330000000000000000000000000000 ","sourceMap":"769:34173:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220680917e17f715636462292a9029e0058e294bcd5d4d4fc83a420501ebb37147664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x917E17F7156364622 SWAP3 0xA9 MUL SWAP15 STOP PC 0xE2 SWAP5 0xBC 0xD5 0xD4 0xD4 0xFC DUP4 LOG4 KECCAK256 POP 0x1E 0xBB CALLDATACOPY EQ PUSH23 0x64736F6C63430008180033000000000000000000000000 ","sourceMap":"258:2354:30:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:30;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220680917e17f715636462292a9029e0058e294bcd5d4d4fc83a420501ebb37147664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x917E17F7156364622 SWAP3 0xA9 MUL SWAP15 STOP PC 0xE2 SWAP5 0xBC 0xD5 0xD4 0xD4 0xFC DUP4 LOG4 KECCAK256 POP 0x1E 0xBB CALLDATACOPY EQ PUSH23 0x64736F6C63430008180033000000000000000000000000 ","sourceMap":"258:2354:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/RewardPool.sol":{"RewardPool":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"DistributorNotSet","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"inputs":[],"name":"Unauthorized","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldDistributor","type":"address"},{"indexed":true,"internalType":"address","name":"newDistributor","type":"address"}],"name":"DistributorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Paid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DISTRIBUTOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"distributor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"payTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newDistributor","type":"address"}],"name":"setDistributor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenBalances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_8614":{"entryPoint":null,"id":8614,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_586":{"entryPoint":34,"id":586,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_631":{"entryPoint":null,"id":631,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_617":{"entryPoint":null,"id":617,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:216:33","nodeType":"YulBlock","src":"0:216:33","statements":[{"nativeSrc":"6:3:33","nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nativeSrc":"113:101:33","nodeType":"YulBlock","src":"113:101:33","statements":[{"nativeSrc":"123:26:33","nodeType":"YulAssignment","src":"123:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"135:9:33","nodeType":"YulIdentifier","src":"135:9:33"},{"kind":"number","nativeSrc":"146:2:33","nodeType":"YulLiteral","src":"146:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"131:3:33","nodeType":"YulIdentifier","src":"131:3:33"},"nativeSrc":"131:18:33","nodeType":"YulFunctionCall","src":"131:18:33"},"variableNames":[{"name":"tail","nativeSrc":"123:4:33","nodeType":"YulIdentifier","src":"123:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"165:9:33","nodeType":"YulIdentifier","src":"165:9:33"},{"arguments":[{"name":"value0","nativeSrc":"180:6:33","nodeType":"YulIdentifier","src":"180:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"196:2:33","nodeType":"YulLiteral","src":"196:2:33","type":"","value":"64"},{"kind":"number","nativeSrc":"200:1:33","nodeType":"YulLiteral","src":"200:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"192:3:33","nodeType":"YulIdentifier","src":"192:3:33"},"nativeSrc":"192:10:33","nodeType":"YulFunctionCall","src":"192:10:33"},{"kind":"number","nativeSrc":"204:1:33","nodeType":"YulLiteral","src":"204:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"188:3:33","nodeType":"YulIdentifier","src":"188:3:33"},"nativeSrc":"188:18:33","nodeType":"YulFunctionCall","src":"188:18:33"}],"functionName":{"name":"and","nativeSrc":"176:3:33","nodeType":"YulIdentifier","src":"176:3:33"},"nativeSrc":"176:31:33","nodeType":"YulFunctionCall","src":"176:31:33"}],"functionName":{"name":"mstore","nativeSrc":"158:6:33","nodeType":"YulIdentifier","src":"158:6:33"},"nativeSrc":"158:50:33","nodeType":"YulFunctionCall","src":"158:50:33"},"nativeSrc":"158:50:33","nodeType":"YulExpressionStatement","src":"158:50:33"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"14:200:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"82:9:33","nodeType":"YulTypedName","src":"82:9:33","type":""},{"name":"value0","nativeSrc":"93:6:33","nodeType":"YulTypedName","src":"93:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"104:4:33","nodeType":"YulTypedName","src":"104:4:33","type":""}],"src":"14:200:33"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D PUSH2 0x22 JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x72 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD1 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x12CB PUSH2 0xFD PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xAE6 ADD MSTORE DUP2 DUP2 PUSH2 0xB0F ADD MSTORE PUSH2 0xC5A ADD MSTORE PUSH2 0x12CB PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75619AB5 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xF0BD87CC EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75619AB5 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xBFE10928 EQ PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4026CF23 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x4026CF23 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x523FBA7F EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xF89 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB3 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x19C PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x69B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x787 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x306 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1236 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x41B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1276 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x44C DUP3 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x455 DUP2 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x45F DUP4 DUP4 PUSH2 0x922 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x48E JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x498 DUP3 DUP3 PUSH2 0x9C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1236 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x4B5 DUP2 PUSH2 0x915 JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x55E SWAP1 DUP5 SWAP1 PUSH2 0x11DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x578 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP5 PUSH2 0xA43 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9DEF4E2802183D68CE90A6A226A2962B59298616C27165F12C4FBC5C84CDD778 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D6 DUP2 PUSH2 0x915 JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP6 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x634 SWAP1 DUP5 SWAP1 PUSH2 0x11ED JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x684 PUSH2 0xADB JUMP JUMPDEST PUSH2 0x68D DUP3 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x697 DUP3 DUP3 PUSH2 0xB8D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A5 PUSH2 0xC4F JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1256 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C3 DUP2 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND OR SWAP1 SWAP3 SSTORE AND DUP1 ISZERO PUSH2 0x729 JUMPI PUSH2 0x727 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1236 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x9C7 JUMP JUMPDEST POP JUMPDEST PUSH2 0x741 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1236 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x922 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C6EABD1DB7FE5A1951A7C78767C0E3633C5352578D15D45F99AA4C4DB01C55A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1276 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C9 PUSH2 0xC98 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x80E JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x81C JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x864 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x86C PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x874 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x87F PUSH1 0x0 DUP8 PUSH2 0x922 JUMP JUMPDEST POP PUSH2 0x8AA PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP8 PUSH2 0x922 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x8F1 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x902 DUP3 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x90B DUP2 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x45F DUP4 DUP4 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x91F DUP2 CALLER PUSH2 0xCC9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1276 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x93D DUP5 DUP5 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x9BD JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x973 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x41B JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x41B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1276 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9E2 DUP5 DUP5 PUSH2 0x787 JUMP JUMPDEST ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x498 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x45F SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0xA70 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xB62 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB56 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1256 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x697 DUP2 PUSH2 0x915 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBE7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBE4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1256 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xC45 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x498 DUP4 DUP4 PUSH2 0xD73 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x41B JUMP JUMPDEST PUSH2 0xB80 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xCD3 DUP3 DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xD3D JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC0B JUMP JUMPDEST PUSH2 0xD7C DUP3 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xDC1 JUMPI PUSH2 0x498 DUP3 DUP3 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x697 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0xDD1 PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0xE24 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1256 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xE70 SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEC0 DUP6 DUP4 DUP4 PUSH2 0xF02 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEF2 PUSH2 0xC98 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xF17 JUMPI PUSH2 0xF12 DUP3 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xF2E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC0B JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xF70 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xF5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x100B PUSH1 0x20 DUP5 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1029 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1032 DUP5 PUSH2 0xFCC JUMP JUMPDEST SWAP3 POP PUSH2 0x1040 PUSH1 0x20 DUP6 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x106C DUP4 PUSH2 0xFCC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10AC DUP4 PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x10EF JUMPI PUSH2 0x10EF PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1117 PUSH2 0x107A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5A DUP3 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1188 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1170 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11B0 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x116D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x41B JUMPI PUSH2 0x41B PUSH2 0x11C4 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x41B JUMPI PUSH2 0x41B PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x122B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x116D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID 0xFB 0xD4 SLOAD RETURN PUSH11 0x7E1A388BD6FC3AB10D434A LOG4 JUMPI DUP16 DUP2 BYTE 0xCB 0xBC RETURN GASPRICE 0xFB SHR PUSH10 0x7486313C360894A13BA1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC02DD7BC7DEC4DCEEDDA775 0xE5 DUP14 0xD5 COINBASE 0xE0 DUP11 GT PUSH13 0x6C53815C0BD028192F7B626800 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xED 0xAF 0xEE DUP13 0xDE 0xD0 SELFBALANCE PUSH23 0xCE59EA294E29F5F61A2C8CF5B77052EFD5F9A8231CCFBA PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"592:3442:31:-:0;;;1171:4:2;1128:48;;1342:53:31;;;;;;;;;-1:-1:-1;1366:22:31;:20;:22::i;:::-;592:3442;;7709:422:1;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:1;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:1;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:1;-1:-1:-1;;;;;8033:33:1;;;;;8085:29;;158:50:33;;;8085:29:1;;146:2:33;131:18;8085:29:1;;;;;;;7979:146;7758:373;7709:422::o;14:200:33:-;592:3442:31;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":null,"id":30,"parameterSlots":0,"returnSlots":0},"@DISTRIBUTOR_ROLE_8567":{"entryPoint":null,"id":8567,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_8572":{"entryPoint":null,"id":8572,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_656":{"entryPoint":null,"id":656,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_65":{"entryPoint":3265,"id":65,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_686":{"entryPoint":null,"id":686,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_8839":{"entryPoint":2946,"id":8839,"parameterSlots":1,"returnSlots":0},"@_callOptionalReturn_2222":{"entryPoint":3330,"id":2222,"parameterSlots":2,"returnSlots":0},"@_checkInitializing_540":{"entryPoint":3529,"id":540,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1711":{"entryPoint":3785,"id":1711,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_762":{"entryPoint":3151,"id":762,"parameterSlots":0,"returnSlots":0},"@_checkProxy_746":{"entryPoint":2779,"id":746,"parameterSlots":0,"returnSlots":0},"@_checkRole_131":{"entryPoint":2325,"id":131,"parameterSlots":1,"returnSlots":0},"@_checkRole_152":{"entryPoint":3273,"id":152,"parameterSlots":2,"returnSlots":0},"@_getAccessControlStorage_48":{"entryPoint":null,"id":48,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_631":{"entryPoint":3224,"id":631,"parameterSlots":0,"returnSlots":1},"@_grantRole_317":{"entryPoint":2338,"id":317,"parameterSlots":2,"returnSlots":1},"@_initializableStorageSlot_617":{"entryPoint":null,"id":617,"parameterSlots":0,"returnSlots":1},"@_isInitializing_608":{"entryPoint":3816,"id":608,"parameterSlots":0,"returnSlots":1},"@_msgSender_842":{"entryPoint":null,"id":842,"parameterSlots":0,"returnSlots":1},"@_revert_2523":{"entryPoint":3937,"id":2523,"parameterSlots":1,"returnSlots":0},"@_revokeRole_363":{"entryPoint":2503,"id":363,"parameterSlots":2,"returnSlots":1},"@_setImplementation_1491":{"entryPoint":3566,"id":1491,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_813":{"entryPoint":2957,"id":813,"parameterSlots":2,"returnSlots":0},"@balance_8805":{"entryPoint":null,"id":8805,"parameterSlots":1,"returnSlots":1},"@deposit_8681":{"entryPoint":1483,"id":8681,"parameterSlots":2,"returnSlots":0},"@distributor_8578":{"entryPoint":null,"id":8578,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_2441":{"entryPoint":3667,"id":2441,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2850":{"entryPoint":null,"id":2850,"parameterSlots":1,"returnSlots":1},"@getImplementation_1464":{"entryPoint":null,"id":1464,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_173":{"entryPoint":1057,"id":173,"parameterSlots":1,"returnSlots":1},"@grantRole_192":{"entryPoint":1091,"id":192,"parameterSlots":2,"returnSlots":0},"@hasRole_118":{"entryPoint":1927,"id":118,"parameterSlots":2,"returnSlots":1},"@initialize_8638":{"entryPoint":1983,"id":8638,"parameterSlots":1,"returnSlots":0},"@payTo_8741":{"entryPoint":1181,"id":8741,"parameterSlots":3,"returnSlots":0},"@proxiableUUID_704":{"entryPoint":1691,"id":704,"parameterSlots":0,"returnSlots":1},"@renounceRole_234":{"entryPoint":1125,"id":234,"parameterSlots":2,"returnSlots":0},"@revokeRole_211":{"entryPoint":2297,"id":211,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_1872":{"entryPoint":2722,"id":1872,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1845":{"entryPoint":2627,"id":1845,"parameterSlots":3,"returnSlots":0},"@setDistributor_8792":{"entryPoint":1720,"id":8792,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1188":{"entryPoint":null,"id":1188,"parameterSlots":1,"returnSlots":1},"@supportsInterface_93":{"entryPoint":1002,"id":93,"parameterSlots":1,"returnSlots":1},"@tokenBalances_8576":{"entryPoint":null,"id":8576,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_1527":{"entryPoint":3443,"id":1527,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_724":{"entryPoint":1660,"id":724,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_2481":{"entryPoint":3842,"id":2481,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":4044,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4116,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":4240,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4176,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":4019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":4608,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":4072,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4589,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4570,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4461,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":4548,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4218,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:6287:33","nodeType":"YulBlock","src":"0:6287:33","statements":[{"nativeSrc":"6:3:33","nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nativeSrc":"83:217:33","nodeType":"YulBlock","src":"83:217:33","statements":[{"body":{"nativeSrc":"129:16:33","nodeType":"YulBlock","src":"129:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:33","nodeType":"YulLiteral","src":"138:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:33","nodeType":"YulLiteral","src":"141:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:33","nodeType":"YulIdentifier","src":"131:6:33"},"nativeSrc":"131:12:33","nodeType":"YulFunctionCall","src":"131:12:33"},"nativeSrc":"131:12:33","nodeType":"YulExpressionStatement","src":"131:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:33","nodeType":"YulIdentifier","src":"104:7:33"},{"name":"headStart","nativeSrc":"113:9:33","nodeType":"YulIdentifier","src":"113:9:33"}],"functionName":{"name":"sub","nativeSrc":"100:3:33","nodeType":"YulIdentifier","src":"100:3:33"},"nativeSrc":"100:23:33","nodeType":"YulFunctionCall","src":"100:23:33"},{"kind":"number","nativeSrc":"125:2:33","nodeType":"YulLiteral","src":"125:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:33","nodeType":"YulIdentifier","src":"96:3:33"},"nativeSrc":"96:32:33","nodeType":"YulFunctionCall","src":"96:32:33"},"nativeSrc":"93:52:33","nodeType":"YulIf","src":"93:52:33"},{"nativeSrc":"154:36:33","nodeType":"YulVariableDeclaration","src":"154:36:33","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:33","nodeType":"YulIdentifier","src":"180:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:33","nodeType":"YulIdentifier","src":"167:12:33"},"nativeSrc":"167:23:33","nodeType":"YulFunctionCall","src":"167:23:33"},"variables":[{"name":"value","nativeSrc":"158:5:33","nodeType":"YulTypedName","src":"158:5:33","type":""}]},{"body":{"nativeSrc":"254:16:33","nodeType":"YulBlock","src":"254:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:33","nodeType":"YulLiteral","src":"263:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:33","nodeType":"YulLiteral","src":"266:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:33","nodeType":"YulIdentifier","src":"256:6:33"},"nativeSrc":"256:12:33","nodeType":"YulFunctionCall","src":"256:12:33"},"nativeSrc":"256:12:33","nodeType":"YulExpressionStatement","src":"256:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:33","nodeType":"YulIdentifier","src":"212:5:33"},{"arguments":[{"name":"value","nativeSrc":"223:5:33","nodeType":"YulIdentifier","src":"223:5:33"},{"arguments":[{"kind":"number","nativeSrc":"234:3:33","nodeType":"YulLiteral","src":"234:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"239:10:33","nodeType":"YulLiteral","src":"239:10:33","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"230:3:33","nodeType":"YulIdentifier","src":"230:3:33"},"nativeSrc":"230:20:33","nodeType":"YulFunctionCall","src":"230:20:33"}],"functionName":{"name":"and","nativeSrc":"219:3:33","nodeType":"YulIdentifier","src":"219:3:33"},"nativeSrc":"219:32:33","nodeType":"YulFunctionCall","src":"219:32:33"}],"functionName":{"name":"eq","nativeSrc":"209:2:33","nodeType":"YulIdentifier","src":"209:2:33"},"nativeSrc":"209:43:33","nodeType":"YulFunctionCall","src":"209:43:33"}],"functionName":{"name":"iszero","nativeSrc":"202:6:33","nodeType":"YulIdentifier","src":"202:6:33"},"nativeSrc":"202:51:33","nodeType":"YulFunctionCall","src":"202:51:33"},"nativeSrc":"199:71:33","nodeType":"YulIf","src":"199:71:33"},{"nativeSrc":"279:15:33","nodeType":"YulAssignment","src":"279:15:33","value":{"name":"value","nativeSrc":"289:5:33","nodeType":"YulIdentifier","src":"289:5:33"},"variableNames":[{"name":"value0","nativeSrc":"279:6:33","nodeType":"YulIdentifier","src":"279:6:33"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:286:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:33","nodeType":"YulTypedName","src":"49:9:33","type":""},{"name":"dataEnd","nativeSrc":"60:7:33","nodeType":"YulTypedName","src":"60:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:33","nodeType":"YulTypedName","src":"72:6:33","type":""}],"src":"14:286:33"},{"body":{"nativeSrc":"400:92:33","nodeType":"YulBlock","src":"400:92:33","statements":[{"nativeSrc":"410:26:33","nodeType":"YulAssignment","src":"410:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:33","nodeType":"YulIdentifier","src":"422:9:33"},{"kind":"number","nativeSrc":"433:2:33","nodeType":"YulLiteral","src":"433:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"418:3:33","nodeType":"YulIdentifier","src":"418:3:33"},"nativeSrc":"418:18:33","nodeType":"YulFunctionCall","src":"418:18:33"},"variableNames":[{"name":"tail","nativeSrc":"410:4:33","nodeType":"YulIdentifier","src":"410:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"452:9:33","nodeType":"YulIdentifier","src":"452:9:33"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"477:6:33","nodeType":"YulIdentifier","src":"477:6:33"}],"functionName":{"name":"iszero","nativeSrc":"470:6:33","nodeType":"YulIdentifier","src":"470:6:33"},"nativeSrc":"470:14:33","nodeType":"YulFunctionCall","src":"470:14:33"}],"functionName":{"name":"iszero","nativeSrc":"463:6:33","nodeType":"YulIdentifier","src":"463:6:33"},"nativeSrc":"463:22:33","nodeType":"YulFunctionCall","src":"463:22:33"}],"functionName":{"name":"mstore","nativeSrc":"445:6:33","nodeType":"YulIdentifier","src":"445:6:33"},"nativeSrc":"445:41:33","nodeType":"YulFunctionCall","src":"445:41:33"},"nativeSrc":"445:41:33","nodeType":"YulExpressionStatement","src":"445:41:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"305:187:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"369:9:33","nodeType":"YulTypedName","src":"369:9:33","type":""},{"name":"value0","nativeSrc":"380:6:33","nodeType":"YulTypedName","src":"380:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"391:4:33","nodeType":"YulTypedName","src":"391:4:33","type":""}],"src":"305:187:33"},{"body":{"nativeSrc":"567:110:33","nodeType":"YulBlock","src":"567:110:33","statements":[{"body":{"nativeSrc":"613:16:33","nodeType":"YulBlock","src":"613:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"622:1:33","nodeType":"YulLiteral","src":"622:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"625:1:33","nodeType":"YulLiteral","src":"625:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"615:6:33","nodeType":"YulIdentifier","src":"615:6:33"},"nativeSrc":"615:12:33","nodeType":"YulFunctionCall","src":"615:12:33"},"nativeSrc":"615:12:33","nodeType":"YulExpressionStatement","src":"615:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"588:7:33","nodeType":"YulIdentifier","src":"588:7:33"},{"name":"headStart","nativeSrc":"597:9:33","nodeType":"YulIdentifier","src":"597:9:33"}],"functionName":{"name":"sub","nativeSrc":"584:3:33","nodeType":"YulIdentifier","src":"584:3:33"},"nativeSrc":"584:23:33","nodeType":"YulFunctionCall","src":"584:23:33"},{"kind":"number","nativeSrc":"609:2:33","nodeType":"YulLiteral","src":"609:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"580:3:33","nodeType":"YulIdentifier","src":"580:3:33"},"nativeSrc":"580:32:33","nodeType":"YulFunctionCall","src":"580:32:33"},"nativeSrc":"577:52:33","nodeType":"YulIf","src":"577:52:33"},{"nativeSrc":"638:33:33","nodeType":"YulAssignment","src":"638:33:33","value":{"arguments":[{"name":"headStart","nativeSrc":"661:9:33","nodeType":"YulIdentifier","src":"661:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"648:12:33","nodeType":"YulIdentifier","src":"648:12:33"},"nativeSrc":"648:23:33","nodeType":"YulFunctionCall","src":"648:23:33"},"variableNames":[{"name":"value0","nativeSrc":"638:6:33","nodeType":"YulIdentifier","src":"638:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"497:180:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"533:9:33","nodeType":"YulTypedName","src":"533:9:33","type":""},{"name":"dataEnd","nativeSrc":"544:7:33","nodeType":"YulTypedName","src":"544:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"556:6:33","nodeType":"YulTypedName","src":"556:6:33","type":""}],"src":"497:180:33"},{"body":{"nativeSrc":"783:76:33","nodeType":"YulBlock","src":"783:76:33","statements":[{"nativeSrc":"793:26:33","nodeType":"YulAssignment","src":"793:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"805:9:33","nodeType":"YulIdentifier","src":"805:9:33"},{"kind":"number","nativeSrc":"816:2:33","nodeType":"YulLiteral","src":"816:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"801:3:33","nodeType":"YulIdentifier","src":"801:3:33"},"nativeSrc":"801:18:33","nodeType":"YulFunctionCall","src":"801:18:33"},"variableNames":[{"name":"tail","nativeSrc":"793:4:33","nodeType":"YulIdentifier","src":"793:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"835:9:33","nodeType":"YulIdentifier","src":"835:9:33"},{"name":"value0","nativeSrc":"846:6:33","nodeType":"YulIdentifier","src":"846:6:33"}],"functionName":{"name":"mstore","nativeSrc":"828:6:33","nodeType":"YulIdentifier","src":"828:6:33"},"nativeSrc":"828:25:33","nodeType":"YulFunctionCall","src":"828:25:33"},"nativeSrc":"828:25:33","nodeType":"YulExpressionStatement","src":"828:25:33"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"682:177:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"752:9:33","nodeType":"YulTypedName","src":"752:9:33","type":""},{"name":"value0","nativeSrc":"763:6:33","nodeType":"YulTypedName","src":"763:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"774:4:33","nodeType":"YulTypedName","src":"774:4:33","type":""}],"src":"682:177:33"},{"body":{"nativeSrc":"913:124:33","nodeType":"YulBlock","src":"913:124:33","statements":[{"nativeSrc":"923:29:33","nodeType":"YulAssignment","src":"923:29:33","value":{"arguments":[{"name":"offset","nativeSrc":"945:6:33","nodeType":"YulIdentifier","src":"945:6:33"}],"functionName":{"name":"calldataload","nativeSrc":"932:12:33","nodeType":"YulIdentifier","src":"932:12:33"},"nativeSrc":"932:20:33","nodeType":"YulFunctionCall","src":"932:20:33"},"variableNames":[{"name":"value","nativeSrc":"923:5:33","nodeType":"YulIdentifier","src":"923:5:33"}]},{"body":{"nativeSrc":"1015:16:33","nodeType":"YulBlock","src":"1015:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1024:1:33","nodeType":"YulLiteral","src":"1024:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"1027:1:33","nodeType":"YulLiteral","src":"1027:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1017:6:33","nodeType":"YulIdentifier","src":"1017:6:33"},"nativeSrc":"1017:12:33","nodeType":"YulFunctionCall","src":"1017:12:33"},"nativeSrc":"1017:12:33","nodeType":"YulExpressionStatement","src":"1017:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"974:5:33","nodeType":"YulIdentifier","src":"974:5:33"},{"arguments":[{"name":"value","nativeSrc":"985:5:33","nodeType":"YulIdentifier","src":"985:5:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1000:3:33","nodeType":"YulLiteral","src":"1000:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"1005:1:33","nodeType":"YulLiteral","src":"1005:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"996:3:33","nodeType":"YulIdentifier","src":"996:3:33"},"nativeSrc":"996:11:33","nodeType":"YulFunctionCall","src":"996:11:33"},{"kind":"number","nativeSrc":"1009:1:33","nodeType":"YulLiteral","src":"1009:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"992:3:33","nodeType":"YulIdentifier","src":"992:3:33"},"nativeSrc":"992:19:33","nodeType":"YulFunctionCall","src":"992:19:33"}],"functionName":{"name":"and","nativeSrc":"981:3:33","nodeType":"YulIdentifier","src":"981:3:33"},"nativeSrc":"981:31:33","nodeType":"YulFunctionCall","src":"981:31:33"}],"functionName":{"name":"eq","nativeSrc":"971:2:33","nodeType":"YulIdentifier","src":"971:2:33"},"nativeSrc":"971:42:33","nodeType":"YulFunctionCall","src":"971:42:33"}],"functionName":{"name":"iszero","nativeSrc":"964:6:33","nodeType":"YulIdentifier","src":"964:6:33"},"nativeSrc":"964:50:33","nodeType":"YulFunctionCall","src":"964:50:33"},"nativeSrc":"961:70:33","nodeType":"YulIf","src":"961:70:33"}]},"name":"abi_decode_address","nativeSrc":"864:173:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"892:6:33","nodeType":"YulTypedName","src":"892:6:33","type":""}],"returnVariables":[{"name":"value","nativeSrc":"903:5:33","nodeType":"YulTypedName","src":"903:5:33","type":""}],"src":"864:173:33"},{"body":{"nativeSrc":"1129:167:33","nodeType":"YulBlock","src":"1129:167:33","statements":[{"body":{"nativeSrc":"1175:16:33","nodeType":"YulBlock","src":"1175:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1184:1:33","nodeType":"YulLiteral","src":"1184:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"1187:1:33","nodeType":"YulLiteral","src":"1187:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1177:6:33","nodeType":"YulIdentifier","src":"1177:6:33"},"nativeSrc":"1177:12:33","nodeType":"YulFunctionCall","src":"1177:12:33"},"nativeSrc":"1177:12:33","nodeType":"YulExpressionStatement","src":"1177:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1150:7:33","nodeType":"YulIdentifier","src":"1150:7:33"},{"name":"headStart","nativeSrc":"1159:9:33","nodeType":"YulIdentifier","src":"1159:9:33"}],"functionName":{"name":"sub","nativeSrc":"1146:3:33","nodeType":"YulIdentifier","src":"1146:3:33"},"nativeSrc":"1146:23:33","nodeType":"YulFunctionCall","src":"1146:23:33"},{"kind":"number","nativeSrc":"1171:2:33","nodeType":"YulLiteral","src":"1171:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1142:3:33","nodeType":"YulIdentifier","src":"1142:3:33"},"nativeSrc":"1142:32:33","nodeType":"YulFunctionCall","src":"1142:32:33"},"nativeSrc":"1139:52:33","nodeType":"YulIf","src":"1139:52:33"},{"nativeSrc":"1200:33:33","nodeType":"YulAssignment","src":"1200:33:33","value":{"arguments":[{"name":"headStart","nativeSrc":"1223:9:33","nodeType":"YulIdentifier","src":"1223:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"1210:12:33","nodeType":"YulIdentifier","src":"1210:12:33"},"nativeSrc":"1210:23:33","nodeType":"YulFunctionCall","src":"1210:23:33"},"variableNames":[{"name":"value0","nativeSrc":"1200:6:33","nodeType":"YulIdentifier","src":"1200:6:33"}]},{"nativeSrc":"1242:48:33","nodeType":"YulAssignment","src":"1242:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1275:9:33","nodeType":"YulIdentifier","src":"1275:9:33"},{"kind":"number","nativeSrc":"1286:2:33","nodeType":"YulLiteral","src":"1286:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1271:3:33","nodeType":"YulIdentifier","src":"1271:3:33"},"nativeSrc":"1271:18:33","nodeType":"YulFunctionCall","src":"1271:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1252:18:33","nodeType":"YulIdentifier","src":"1252:18:33"},"nativeSrc":"1252:38:33","nodeType":"YulFunctionCall","src":"1252:38:33"},"variableNames":[{"name":"value1","nativeSrc":"1242:6:33","nodeType":"YulIdentifier","src":"1242:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"1042:254:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1087:9:33","nodeType":"YulTypedName","src":"1087:9:33","type":""},{"name":"dataEnd","nativeSrc":"1098:7:33","nodeType":"YulTypedName","src":"1098:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1110:6:33","nodeType":"YulTypedName","src":"1110:6:33","type":""},{"name":"value1","nativeSrc":"1118:6:33","nodeType":"YulTypedName","src":"1118:6:33","type":""}],"src":"1042:254:33"},{"body":{"nativeSrc":"1405:224:33","nodeType":"YulBlock","src":"1405:224:33","statements":[{"body":{"nativeSrc":"1451:16:33","nodeType":"YulBlock","src":"1451:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1460:1:33","nodeType":"YulLiteral","src":"1460:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"1463:1:33","nodeType":"YulLiteral","src":"1463:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1453:6:33","nodeType":"YulIdentifier","src":"1453:6:33"},"nativeSrc":"1453:12:33","nodeType":"YulFunctionCall","src":"1453:12:33"},"nativeSrc":"1453:12:33","nodeType":"YulExpressionStatement","src":"1453:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1426:7:33","nodeType":"YulIdentifier","src":"1426:7:33"},{"name":"headStart","nativeSrc":"1435:9:33","nodeType":"YulIdentifier","src":"1435:9:33"}],"functionName":{"name":"sub","nativeSrc":"1422:3:33","nodeType":"YulIdentifier","src":"1422:3:33"},"nativeSrc":"1422:23:33","nodeType":"YulFunctionCall","src":"1422:23:33"},{"kind":"number","nativeSrc":"1447:2:33","nodeType":"YulLiteral","src":"1447:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1418:3:33","nodeType":"YulIdentifier","src":"1418:3:33"},"nativeSrc":"1418:32:33","nodeType":"YulFunctionCall","src":"1418:32:33"},"nativeSrc":"1415:52:33","nodeType":"YulIf","src":"1415:52:33"},{"nativeSrc":"1476:39:33","nodeType":"YulAssignment","src":"1476:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"1505:9:33","nodeType":"YulIdentifier","src":"1505:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1486:18:33","nodeType":"YulIdentifier","src":"1486:18:33"},"nativeSrc":"1486:29:33","nodeType":"YulFunctionCall","src":"1486:29:33"},"variableNames":[{"name":"value0","nativeSrc":"1476:6:33","nodeType":"YulIdentifier","src":"1476:6:33"}]},{"nativeSrc":"1524:48:33","nodeType":"YulAssignment","src":"1524:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1557:9:33","nodeType":"YulIdentifier","src":"1557:9:33"},{"kind":"number","nativeSrc":"1568:2:33","nodeType":"YulLiteral","src":"1568:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1553:3:33","nodeType":"YulIdentifier","src":"1553:3:33"},"nativeSrc":"1553:18:33","nodeType":"YulFunctionCall","src":"1553:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1534:18:33","nodeType":"YulIdentifier","src":"1534:18:33"},"nativeSrc":"1534:38:33","nodeType":"YulFunctionCall","src":"1534:38:33"},"variableNames":[{"name":"value1","nativeSrc":"1524:6:33","nodeType":"YulIdentifier","src":"1524:6:33"}]},{"nativeSrc":"1581:42:33","nodeType":"YulAssignment","src":"1581:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1608:9:33","nodeType":"YulIdentifier","src":"1608:9:33"},{"kind":"number","nativeSrc":"1619:2:33","nodeType":"YulLiteral","src":"1619:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1604:3:33","nodeType":"YulIdentifier","src":"1604:3:33"},"nativeSrc":"1604:18:33","nodeType":"YulFunctionCall","src":"1604:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"1591:12:33","nodeType":"YulIdentifier","src":"1591:12:33"},"nativeSrc":"1591:32:33","nodeType":"YulFunctionCall","src":"1591:32:33"},"variableNames":[{"name":"value2","nativeSrc":"1581:6:33","nodeType":"YulIdentifier","src":"1581:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1301:328:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1355:9:33","nodeType":"YulTypedName","src":"1355:9:33","type":""},{"name":"dataEnd","nativeSrc":"1366:7:33","nodeType":"YulTypedName","src":"1366:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1378:6:33","nodeType":"YulTypedName","src":"1378:6:33","type":""},{"name":"value1","nativeSrc":"1386:6:33","nodeType":"YulTypedName","src":"1386:6:33","type":""},{"name":"value2","nativeSrc":"1394:6:33","nodeType":"YulTypedName","src":"1394:6:33","type":""}],"src":"1301:328:33"},{"body":{"nativeSrc":"1721:167:33","nodeType":"YulBlock","src":"1721:167:33","statements":[{"body":{"nativeSrc":"1767:16:33","nodeType":"YulBlock","src":"1767:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1776:1:33","nodeType":"YulLiteral","src":"1776:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"1779:1:33","nodeType":"YulLiteral","src":"1779:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1769:6:33","nodeType":"YulIdentifier","src":"1769:6:33"},"nativeSrc":"1769:12:33","nodeType":"YulFunctionCall","src":"1769:12:33"},"nativeSrc":"1769:12:33","nodeType":"YulExpressionStatement","src":"1769:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1742:7:33","nodeType":"YulIdentifier","src":"1742:7:33"},{"name":"headStart","nativeSrc":"1751:9:33","nodeType":"YulIdentifier","src":"1751:9:33"}],"functionName":{"name":"sub","nativeSrc":"1738:3:33","nodeType":"YulIdentifier","src":"1738:3:33"},"nativeSrc":"1738:23:33","nodeType":"YulFunctionCall","src":"1738:23:33"},{"kind":"number","nativeSrc":"1763:2:33","nodeType":"YulLiteral","src":"1763:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1734:3:33","nodeType":"YulIdentifier","src":"1734:3:33"},"nativeSrc":"1734:32:33","nodeType":"YulFunctionCall","src":"1734:32:33"},"nativeSrc":"1731:52:33","nodeType":"YulIf","src":"1731:52:33"},{"nativeSrc":"1792:39:33","nodeType":"YulAssignment","src":"1792:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"1821:9:33","nodeType":"YulIdentifier","src":"1821:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1802:18:33","nodeType":"YulIdentifier","src":"1802:18:33"},"nativeSrc":"1802:29:33","nodeType":"YulFunctionCall","src":"1802:29:33"},"variableNames":[{"name":"value0","nativeSrc":"1792:6:33","nodeType":"YulIdentifier","src":"1792:6:33"}]},{"nativeSrc":"1840:42:33","nodeType":"YulAssignment","src":"1840:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1867:9:33","nodeType":"YulIdentifier","src":"1867:9:33"},{"kind":"number","nativeSrc":"1878:2:33","nodeType":"YulLiteral","src":"1878:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1863:3:33","nodeType":"YulIdentifier","src":"1863:3:33"},"nativeSrc":"1863:18:33","nodeType":"YulFunctionCall","src":"1863:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"1850:12:33","nodeType":"YulIdentifier","src":"1850:12:33"},"nativeSrc":"1850:32:33","nodeType":"YulFunctionCall","src":"1850:32:33"},"variableNames":[{"name":"value1","nativeSrc":"1840:6:33","nodeType":"YulIdentifier","src":"1840:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1634:254:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1679:9:33","nodeType":"YulTypedName","src":"1679:9:33","type":""},{"name":"dataEnd","nativeSrc":"1690:7:33","nodeType":"YulTypedName","src":"1690:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1702:6:33","nodeType":"YulTypedName","src":"1702:6:33","type":""},{"name":"value1","nativeSrc":"1710:6:33","nodeType":"YulTypedName","src":"1710:6:33","type":""}],"src":"1634:254:33"},{"body":{"nativeSrc":"1925:95:33","nodeType":"YulBlock","src":"1925:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1942:1:33","nodeType":"YulLiteral","src":"1942:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1949:3:33","nodeType":"YulLiteral","src":"1949:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"1954:10:33","nodeType":"YulLiteral","src":"1954:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1945:3:33","nodeType":"YulIdentifier","src":"1945:3:33"},"nativeSrc":"1945:20:33","nodeType":"YulFunctionCall","src":"1945:20:33"}],"functionName":{"name":"mstore","nativeSrc":"1935:6:33","nodeType":"YulIdentifier","src":"1935:6:33"},"nativeSrc":"1935:31:33","nodeType":"YulFunctionCall","src":"1935:31:33"},"nativeSrc":"1935:31:33","nodeType":"YulExpressionStatement","src":"1935:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1982:1:33","nodeType":"YulLiteral","src":"1982:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"1985:4:33","nodeType":"YulLiteral","src":"1985:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1975:6:33","nodeType":"YulIdentifier","src":"1975:6:33"},"nativeSrc":"1975:15:33","nodeType":"YulFunctionCall","src":"1975:15:33"},"nativeSrc":"1975:15:33","nodeType":"YulExpressionStatement","src":"1975:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2006:1:33","nodeType":"YulLiteral","src":"2006:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2009:4:33","nodeType":"YulLiteral","src":"2009:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1999:6:33","nodeType":"YulIdentifier","src":"1999:6:33"},"nativeSrc":"1999:15:33","nodeType":"YulFunctionCall","src":"1999:15:33"},"nativeSrc":"1999:15:33","nodeType":"YulExpressionStatement","src":"1999:15:33"}]},"name":"panic_error_0x41","nativeSrc":"1893:127:33","nodeType":"YulFunctionDefinition","src":"1893:127:33"},{"body":{"nativeSrc":"2121:899:33","nodeType":"YulBlock","src":"2121:899:33","statements":[{"body":{"nativeSrc":"2167:16:33","nodeType":"YulBlock","src":"2167:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2176:1:33","nodeType":"YulLiteral","src":"2176:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2179:1:33","nodeType":"YulLiteral","src":"2179:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2169:6:33","nodeType":"YulIdentifier","src":"2169:6:33"},"nativeSrc":"2169:12:33","nodeType":"YulFunctionCall","src":"2169:12:33"},"nativeSrc":"2169:12:33","nodeType":"YulExpressionStatement","src":"2169:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2142:7:33","nodeType":"YulIdentifier","src":"2142:7:33"},{"name":"headStart","nativeSrc":"2151:9:33","nodeType":"YulIdentifier","src":"2151:9:33"}],"functionName":{"name":"sub","nativeSrc":"2138:3:33","nodeType":"YulIdentifier","src":"2138:3:33"},"nativeSrc":"2138:23:33","nodeType":"YulFunctionCall","src":"2138:23:33"},{"kind":"number","nativeSrc":"2163:2:33","nodeType":"YulLiteral","src":"2163:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2134:3:33","nodeType":"YulIdentifier","src":"2134:3:33"},"nativeSrc":"2134:32:33","nodeType":"YulFunctionCall","src":"2134:32:33"},"nativeSrc":"2131:52:33","nodeType":"YulIf","src":"2131:52:33"},{"nativeSrc":"2192:39:33","nodeType":"YulAssignment","src":"2192:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2221:9:33","nodeType":"YulIdentifier","src":"2221:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2202:18:33","nodeType":"YulIdentifier","src":"2202:18:33"},"nativeSrc":"2202:29:33","nodeType":"YulFunctionCall","src":"2202:29:33"},"variableNames":[{"name":"value0","nativeSrc":"2192:6:33","nodeType":"YulIdentifier","src":"2192:6:33"}]},{"nativeSrc":"2240:46:33","nodeType":"YulVariableDeclaration","src":"2240:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2271:9:33","nodeType":"YulIdentifier","src":"2271:9:33"},{"kind":"number","nativeSrc":"2282:2:33","nodeType":"YulLiteral","src":"2282:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2267:3:33","nodeType":"YulIdentifier","src":"2267:3:33"},"nativeSrc":"2267:18:33","nodeType":"YulFunctionCall","src":"2267:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"2254:12:33","nodeType":"YulIdentifier","src":"2254:12:33"},"nativeSrc":"2254:32:33","nodeType":"YulFunctionCall","src":"2254:32:33"},"variables":[{"name":"offset","nativeSrc":"2244:6:33","nodeType":"YulTypedName","src":"2244:6:33","type":""}]},{"nativeSrc":"2295:28:33","nodeType":"YulVariableDeclaration","src":"2295:28:33","value":{"kind":"number","nativeSrc":"2305:18:33","nodeType":"YulLiteral","src":"2305:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"2299:2:33","nodeType":"YulTypedName","src":"2299:2:33","type":""}]},{"body":{"nativeSrc":"2350:16:33","nodeType":"YulBlock","src":"2350:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2359:1:33","nodeType":"YulLiteral","src":"2359:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2362:1:33","nodeType":"YulLiteral","src":"2362:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2352:6:33","nodeType":"YulIdentifier","src":"2352:6:33"},"nativeSrc":"2352:12:33","nodeType":"YulFunctionCall","src":"2352:12:33"},"nativeSrc":"2352:12:33","nodeType":"YulExpressionStatement","src":"2352:12:33"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2338:6:33","nodeType":"YulIdentifier","src":"2338:6:33"},{"name":"_1","nativeSrc":"2346:2:33","nodeType":"YulIdentifier","src":"2346:2:33"}],"functionName":{"name":"gt","nativeSrc":"2335:2:33","nodeType":"YulIdentifier","src":"2335:2:33"},"nativeSrc":"2335:14:33","nodeType":"YulFunctionCall","src":"2335:14:33"},"nativeSrc":"2332:34:33","nodeType":"YulIf","src":"2332:34:33"},{"nativeSrc":"2375:32:33","nodeType":"YulVariableDeclaration","src":"2375:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2389:9:33","nodeType":"YulIdentifier","src":"2389:9:33"},{"name":"offset","nativeSrc":"2400:6:33","nodeType":"YulIdentifier","src":"2400:6:33"}],"functionName":{"name":"add","nativeSrc":"2385:3:33","nodeType":"YulIdentifier","src":"2385:3:33"},"nativeSrc":"2385:22:33","nodeType":"YulFunctionCall","src":"2385:22:33"},"variables":[{"name":"_2","nativeSrc":"2379:2:33","nodeType":"YulTypedName","src":"2379:2:33","type":""}]},{"body":{"nativeSrc":"2455:16:33","nodeType":"YulBlock","src":"2455:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2464:1:33","nodeType":"YulLiteral","src":"2464:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2467:1:33","nodeType":"YulLiteral","src":"2467:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2457:6:33","nodeType":"YulIdentifier","src":"2457:6:33"},"nativeSrc":"2457:12:33","nodeType":"YulFunctionCall","src":"2457:12:33"},"nativeSrc":"2457:12:33","nodeType":"YulExpressionStatement","src":"2457:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2434:2:33","nodeType":"YulIdentifier","src":"2434:2:33"},{"kind":"number","nativeSrc":"2438:4:33","nodeType":"YulLiteral","src":"2438:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2430:3:33","nodeType":"YulIdentifier","src":"2430:3:33"},"nativeSrc":"2430:13:33","nodeType":"YulFunctionCall","src":"2430:13:33"},{"name":"dataEnd","nativeSrc":"2445:7:33","nodeType":"YulIdentifier","src":"2445:7:33"}],"functionName":{"name":"slt","nativeSrc":"2426:3:33","nodeType":"YulIdentifier","src":"2426:3:33"},"nativeSrc":"2426:27:33","nodeType":"YulFunctionCall","src":"2426:27:33"}],"functionName":{"name":"iszero","nativeSrc":"2419:6:33","nodeType":"YulIdentifier","src":"2419:6:33"},"nativeSrc":"2419:35:33","nodeType":"YulFunctionCall","src":"2419:35:33"},"nativeSrc":"2416:55:33","nodeType":"YulIf","src":"2416:55:33"},{"nativeSrc":"2480:26:33","nodeType":"YulVariableDeclaration","src":"2480:26:33","value":{"arguments":[{"name":"_2","nativeSrc":"2503:2:33","nodeType":"YulIdentifier","src":"2503:2:33"}],"functionName":{"name":"calldataload","nativeSrc":"2490:12:33","nodeType":"YulIdentifier","src":"2490:12:33"},"nativeSrc":"2490:16:33","nodeType":"YulFunctionCall","src":"2490:16:33"},"variables":[{"name":"_3","nativeSrc":"2484:2:33","nodeType":"YulTypedName","src":"2484:2:33","type":""}]},{"body":{"nativeSrc":"2529:22:33","nodeType":"YulBlock","src":"2529:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2531:16:33","nodeType":"YulIdentifier","src":"2531:16:33"},"nativeSrc":"2531:18:33","nodeType":"YulFunctionCall","src":"2531:18:33"},"nativeSrc":"2531:18:33","nodeType":"YulExpressionStatement","src":"2531:18:33"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"2521:2:33","nodeType":"YulIdentifier","src":"2521:2:33"},{"name":"_1","nativeSrc":"2525:2:33","nodeType":"YulIdentifier","src":"2525:2:33"}],"functionName":{"name":"gt","nativeSrc":"2518:2:33","nodeType":"YulIdentifier","src":"2518:2:33"},"nativeSrc":"2518:10:33","nodeType":"YulFunctionCall","src":"2518:10:33"},"nativeSrc":"2515:36:33","nodeType":"YulIf","src":"2515:36:33"},{"nativeSrc":"2560:17:33","nodeType":"YulVariableDeclaration","src":"2560:17:33","value":{"arguments":[{"kind":"number","nativeSrc":"2574:2:33","nodeType":"YulLiteral","src":"2574:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2570:3:33","nodeType":"YulIdentifier","src":"2570:3:33"},"nativeSrc":"2570:7:33","nodeType":"YulFunctionCall","src":"2570:7:33"},"variables":[{"name":"_4","nativeSrc":"2564:2:33","nodeType":"YulTypedName","src":"2564:2:33","type":""}]},{"nativeSrc":"2586:23:33","nodeType":"YulVariableDeclaration","src":"2586:23:33","value":{"arguments":[{"kind":"number","nativeSrc":"2606:2:33","nodeType":"YulLiteral","src":"2606:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2600:5:33","nodeType":"YulIdentifier","src":"2600:5:33"},"nativeSrc":"2600:9:33","nodeType":"YulFunctionCall","src":"2600:9:33"},"variables":[{"name":"memPtr","nativeSrc":"2590:6:33","nodeType":"YulTypedName","src":"2590:6:33","type":""}]},{"nativeSrc":"2618:71:33","nodeType":"YulVariableDeclaration","src":"2618:71:33","value":{"arguments":[{"name":"memPtr","nativeSrc":"2640:6:33","nodeType":"YulIdentifier","src":"2640:6:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2664:2:33","nodeType":"YulIdentifier","src":"2664:2:33"},{"kind":"number","nativeSrc":"2668:4:33","nodeType":"YulLiteral","src":"2668:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2660:3:33","nodeType":"YulIdentifier","src":"2660:3:33"},"nativeSrc":"2660:13:33","nodeType":"YulFunctionCall","src":"2660:13:33"},{"name":"_4","nativeSrc":"2675:2:33","nodeType":"YulIdentifier","src":"2675:2:33"}],"functionName":{"name":"and","nativeSrc":"2656:3:33","nodeType":"YulIdentifier","src":"2656:3:33"},"nativeSrc":"2656:22:33","nodeType":"YulFunctionCall","src":"2656:22:33"},{"kind":"number","nativeSrc":"2680:2:33","nodeType":"YulLiteral","src":"2680:2:33","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"2652:3:33","nodeType":"YulIdentifier","src":"2652:3:33"},"nativeSrc":"2652:31:33","nodeType":"YulFunctionCall","src":"2652:31:33"},{"name":"_4","nativeSrc":"2685:2:33","nodeType":"YulIdentifier","src":"2685:2:33"}],"functionName":{"name":"and","nativeSrc":"2648:3:33","nodeType":"YulIdentifier","src":"2648:3:33"},"nativeSrc":"2648:40:33","nodeType":"YulFunctionCall","src":"2648:40:33"}],"functionName":{"name":"add","nativeSrc":"2636:3:33","nodeType":"YulIdentifier","src":"2636:3:33"},"nativeSrc":"2636:53:33","nodeType":"YulFunctionCall","src":"2636:53:33"},"variables":[{"name":"newFreePtr","nativeSrc":"2622:10:33","nodeType":"YulTypedName","src":"2622:10:33","type":""}]},{"body":{"nativeSrc":"2748:22:33","nodeType":"YulBlock","src":"2748:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2750:16:33","nodeType":"YulIdentifier","src":"2750:16:33"},"nativeSrc":"2750:18:33","nodeType":"YulFunctionCall","src":"2750:18:33"},"nativeSrc":"2750:18:33","nodeType":"YulExpressionStatement","src":"2750:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2707:10:33","nodeType":"YulIdentifier","src":"2707:10:33"},{"name":"_1","nativeSrc":"2719:2:33","nodeType":"YulIdentifier","src":"2719:2:33"}],"functionName":{"name":"gt","nativeSrc":"2704:2:33","nodeType":"YulIdentifier","src":"2704:2:33"},"nativeSrc":"2704:18:33","nodeType":"YulFunctionCall","src":"2704:18:33"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2727:10:33","nodeType":"YulIdentifier","src":"2727:10:33"},{"name":"memPtr","nativeSrc":"2739:6:33","nodeType":"YulIdentifier","src":"2739:6:33"}],"functionName":{"name":"lt","nativeSrc":"2724:2:33","nodeType":"YulIdentifier","src":"2724:2:33"},"nativeSrc":"2724:22:33","nodeType":"YulFunctionCall","src":"2724:22:33"}],"functionName":{"name":"or","nativeSrc":"2701:2:33","nodeType":"YulIdentifier","src":"2701:2:33"},"nativeSrc":"2701:46:33","nodeType":"YulFunctionCall","src":"2701:46:33"},"nativeSrc":"2698:72:33","nodeType":"YulIf","src":"2698:72:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2786:2:33","nodeType":"YulLiteral","src":"2786:2:33","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2790:10:33","nodeType":"YulIdentifier","src":"2790:10:33"}],"functionName":{"name":"mstore","nativeSrc":"2779:6:33","nodeType":"YulIdentifier","src":"2779:6:33"},"nativeSrc":"2779:22:33","nodeType":"YulFunctionCall","src":"2779:22:33"},"nativeSrc":"2779:22:33","nodeType":"YulExpressionStatement","src":"2779:22:33"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2817:6:33","nodeType":"YulIdentifier","src":"2817:6:33"},{"name":"_3","nativeSrc":"2825:2:33","nodeType":"YulIdentifier","src":"2825:2:33"}],"functionName":{"name":"mstore","nativeSrc":"2810:6:33","nodeType":"YulIdentifier","src":"2810:6:33"},"nativeSrc":"2810:18:33","nodeType":"YulFunctionCall","src":"2810:18:33"},"nativeSrc":"2810:18:33","nodeType":"YulExpressionStatement","src":"2810:18:33"},{"body":{"nativeSrc":"2874:16:33","nodeType":"YulBlock","src":"2874:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2883:1:33","nodeType":"YulLiteral","src":"2883:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2886:1:33","nodeType":"YulLiteral","src":"2886:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2876:6:33","nodeType":"YulIdentifier","src":"2876:6:33"},"nativeSrc":"2876:12:33","nodeType":"YulFunctionCall","src":"2876:12:33"},"nativeSrc":"2876:12:33","nodeType":"YulExpressionStatement","src":"2876:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2851:2:33","nodeType":"YulIdentifier","src":"2851:2:33"},{"name":"_3","nativeSrc":"2855:2:33","nodeType":"YulIdentifier","src":"2855:2:33"}],"functionName":{"name":"add","nativeSrc":"2847:3:33","nodeType":"YulIdentifier","src":"2847:3:33"},"nativeSrc":"2847:11:33","nodeType":"YulFunctionCall","src":"2847:11:33"},{"kind":"number","nativeSrc":"2860:2:33","nodeType":"YulLiteral","src":"2860:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2843:3:33","nodeType":"YulIdentifier","src":"2843:3:33"},"nativeSrc":"2843:20:33","nodeType":"YulFunctionCall","src":"2843:20:33"},{"name":"dataEnd","nativeSrc":"2865:7:33","nodeType":"YulIdentifier","src":"2865:7:33"}],"functionName":{"name":"gt","nativeSrc":"2840:2:33","nodeType":"YulIdentifier","src":"2840:2:33"},"nativeSrc":"2840:33:33","nodeType":"YulFunctionCall","src":"2840:33:33"},"nativeSrc":"2837:53:33","nodeType":"YulIf","src":"2837:53:33"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2916:6:33","nodeType":"YulIdentifier","src":"2916:6:33"},{"kind":"number","nativeSrc":"2924:2:33","nodeType":"YulLiteral","src":"2924:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2912:3:33","nodeType":"YulIdentifier","src":"2912:3:33"},"nativeSrc":"2912:15:33","nodeType":"YulFunctionCall","src":"2912:15:33"},{"arguments":[{"name":"_2","nativeSrc":"2933:2:33","nodeType":"YulIdentifier","src":"2933:2:33"},{"kind":"number","nativeSrc":"2937:2:33","nodeType":"YulLiteral","src":"2937:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2929:3:33","nodeType":"YulIdentifier","src":"2929:3:33"},"nativeSrc":"2929:11:33","nodeType":"YulFunctionCall","src":"2929:11:33"},{"name":"_3","nativeSrc":"2942:2:33","nodeType":"YulIdentifier","src":"2942:2:33"}],"functionName":{"name":"calldatacopy","nativeSrc":"2899:12:33","nodeType":"YulIdentifier","src":"2899:12:33"},"nativeSrc":"2899:46:33","nodeType":"YulFunctionCall","src":"2899:46:33"},"nativeSrc":"2899:46:33","nodeType":"YulExpressionStatement","src":"2899:46:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2969:6:33","nodeType":"YulIdentifier","src":"2969:6:33"},{"name":"_3","nativeSrc":"2977:2:33","nodeType":"YulIdentifier","src":"2977:2:33"}],"functionName":{"name":"add","nativeSrc":"2965:3:33","nodeType":"YulIdentifier","src":"2965:3:33"},"nativeSrc":"2965:15:33","nodeType":"YulFunctionCall","src":"2965:15:33"},{"kind":"number","nativeSrc":"2982:2:33","nodeType":"YulLiteral","src":"2982:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2961:3:33","nodeType":"YulIdentifier","src":"2961:3:33"},"nativeSrc":"2961:24:33","nodeType":"YulFunctionCall","src":"2961:24:33"},{"kind":"number","nativeSrc":"2987:1:33","nodeType":"YulLiteral","src":"2987:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2954:6:33","nodeType":"YulIdentifier","src":"2954:6:33"},"nativeSrc":"2954:35:33","nodeType":"YulFunctionCall","src":"2954:35:33"},"nativeSrc":"2954:35:33","nodeType":"YulExpressionStatement","src":"2954:35:33"},{"nativeSrc":"2998:16:33","nodeType":"YulAssignment","src":"2998:16:33","value":{"name":"memPtr","nativeSrc":"3008:6:33","nodeType":"YulIdentifier","src":"3008:6:33"},"variableNames":[{"name":"value1","nativeSrc":"2998:6:33","nodeType":"YulIdentifier","src":"2998:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"2025:995:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2079:9:33","nodeType":"YulTypedName","src":"2079:9:33","type":""},{"name":"dataEnd","nativeSrc":"2090:7:33","nodeType":"YulTypedName","src":"2090:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2102:6:33","nodeType":"YulTypedName","src":"2102:6:33","type":""},{"name":"value1","nativeSrc":"2110:6:33","nodeType":"YulTypedName","src":"2110:6:33","type":""}],"src":"2025:995:33"},{"body":{"nativeSrc":"3095:116:33","nodeType":"YulBlock","src":"3095:116:33","statements":[{"body":{"nativeSrc":"3141:16:33","nodeType":"YulBlock","src":"3141:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3150:1:33","nodeType":"YulLiteral","src":"3150:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3153:1:33","nodeType":"YulLiteral","src":"3153:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3143:6:33","nodeType":"YulIdentifier","src":"3143:6:33"},"nativeSrc":"3143:12:33","nodeType":"YulFunctionCall","src":"3143:12:33"},"nativeSrc":"3143:12:33","nodeType":"YulExpressionStatement","src":"3143:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3116:7:33","nodeType":"YulIdentifier","src":"3116:7:33"},{"name":"headStart","nativeSrc":"3125:9:33","nodeType":"YulIdentifier","src":"3125:9:33"}],"functionName":{"name":"sub","nativeSrc":"3112:3:33","nodeType":"YulIdentifier","src":"3112:3:33"},"nativeSrc":"3112:23:33","nodeType":"YulFunctionCall","src":"3112:23:33"},{"kind":"number","nativeSrc":"3137:2:33","nodeType":"YulLiteral","src":"3137:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3108:3:33","nodeType":"YulIdentifier","src":"3108:3:33"},"nativeSrc":"3108:32:33","nodeType":"YulFunctionCall","src":"3108:32:33"},"nativeSrc":"3105:52:33","nodeType":"YulIf","src":"3105:52:33"},{"nativeSrc":"3166:39:33","nodeType":"YulAssignment","src":"3166:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3195:9:33","nodeType":"YulIdentifier","src":"3195:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3176:18:33","nodeType":"YulIdentifier","src":"3176:18:33"},"nativeSrc":"3176:29:33","nodeType":"YulFunctionCall","src":"3176:29:33"},"variableNames":[{"name":"value0","nativeSrc":"3166:6:33","nodeType":"YulIdentifier","src":"3166:6:33"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3025:186:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3061:9:33","nodeType":"YulTypedName","src":"3061:9:33","type":""},{"name":"dataEnd","nativeSrc":"3072:7:33","nodeType":"YulTypedName","src":"3072:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3084:6:33","nodeType":"YulTypedName","src":"3084:6:33","type":""}],"src":"3025:186:33"},{"body":{"nativeSrc":"3317:76:33","nodeType":"YulBlock","src":"3317:76:33","statements":[{"nativeSrc":"3327:26:33","nodeType":"YulAssignment","src":"3327:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3339:9:33","nodeType":"YulIdentifier","src":"3339:9:33"},{"kind":"number","nativeSrc":"3350:2:33","nodeType":"YulLiteral","src":"3350:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3335:3:33","nodeType":"YulIdentifier","src":"3335:3:33"},"nativeSrc":"3335:18:33","nodeType":"YulFunctionCall","src":"3335:18:33"},"variableNames":[{"name":"tail","nativeSrc":"3327:4:33","nodeType":"YulIdentifier","src":"3327:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3369:9:33","nodeType":"YulIdentifier","src":"3369:9:33"},{"name":"value0","nativeSrc":"3380:6:33","nodeType":"YulIdentifier","src":"3380:6:33"}],"functionName":{"name":"mstore","nativeSrc":"3362:6:33","nodeType":"YulIdentifier","src":"3362:6:33"},"nativeSrc":"3362:25:33","nodeType":"YulFunctionCall","src":"3362:25:33"},"nativeSrc":"3362:25:33","nodeType":"YulExpressionStatement","src":"3362:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3216:177:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3286:9:33","nodeType":"YulTypedName","src":"3286:9:33","type":""},{"name":"value0","nativeSrc":"3297:6:33","nodeType":"YulTypedName","src":"3297:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3308:4:33","nodeType":"YulTypedName","src":"3308:4:33","type":""}],"src":"3216:177:33"},{"body":{"nativeSrc":"3464:184:33","nodeType":"YulBlock","src":"3464:184:33","statements":[{"nativeSrc":"3474:10:33","nodeType":"YulVariableDeclaration","src":"3474:10:33","value":{"kind":"number","nativeSrc":"3483:1:33","nodeType":"YulLiteral","src":"3483:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3478:1:33","nodeType":"YulTypedName","src":"3478:1:33","type":""}]},{"body":{"nativeSrc":"3543:63:33","nodeType":"YulBlock","src":"3543:63:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3568:3:33","nodeType":"YulIdentifier","src":"3568:3:33"},{"name":"i","nativeSrc":"3573:1:33","nodeType":"YulIdentifier","src":"3573:1:33"}],"functionName":{"name":"add","nativeSrc":"3564:3:33","nodeType":"YulIdentifier","src":"3564:3:33"},"nativeSrc":"3564:11:33","nodeType":"YulFunctionCall","src":"3564:11:33"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3587:3:33","nodeType":"YulIdentifier","src":"3587:3:33"},{"name":"i","nativeSrc":"3592:1:33","nodeType":"YulIdentifier","src":"3592:1:33"}],"functionName":{"name":"add","nativeSrc":"3583:3:33","nodeType":"YulIdentifier","src":"3583:3:33"},"nativeSrc":"3583:11:33","nodeType":"YulFunctionCall","src":"3583:11:33"}],"functionName":{"name":"mload","nativeSrc":"3577:5:33","nodeType":"YulIdentifier","src":"3577:5:33"},"nativeSrc":"3577:18:33","nodeType":"YulFunctionCall","src":"3577:18:33"}],"functionName":{"name":"mstore","nativeSrc":"3557:6:33","nodeType":"YulIdentifier","src":"3557:6:33"},"nativeSrc":"3557:39:33","nodeType":"YulFunctionCall","src":"3557:39:33"},"nativeSrc":"3557:39:33","nodeType":"YulExpressionStatement","src":"3557:39:33"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3504:1:33","nodeType":"YulIdentifier","src":"3504:1:33"},{"name":"length","nativeSrc":"3507:6:33","nodeType":"YulIdentifier","src":"3507:6:33"}],"functionName":{"name":"lt","nativeSrc":"3501:2:33","nodeType":"YulIdentifier","src":"3501:2:33"},"nativeSrc":"3501:13:33","nodeType":"YulFunctionCall","src":"3501:13:33"},"nativeSrc":"3493:113:33","nodeType":"YulForLoop","post":{"nativeSrc":"3515:19:33","nodeType":"YulBlock","src":"3515:19:33","statements":[{"nativeSrc":"3517:15:33","nodeType":"YulAssignment","src":"3517:15:33","value":{"arguments":[{"name":"i","nativeSrc":"3526:1:33","nodeType":"YulIdentifier","src":"3526:1:33"},{"kind":"number","nativeSrc":"3529:2:33","nodeType":"YulLiteral","src":"3529:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3522:3:33","nodeType":"YulIdentifier","src":"3522:3:33"},"nativeSrc":"3522:10:33","nodeType":"YulFunctionCall","src":"3522:10:33"},"variableNames":[{"name":"i","nativeSrc":"3517:1:33","nodeType":"YulIdentifier","src":"3517:1:33"}]}]},"pre":{"nativeSrc":"3497:3:33","nodeType":"YulBlock","src":"3497:3:33","statements":[]},"src":"3493:113:33"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3626:3:33","nodeType":"YulIdentifier","src":"3626:3:33"},{"name":"length","nativeSrc":"3631:6:33","nodeType":"YulIdentifier","src":"3631:6:33"}],"functionName":{"name":"add","nativeSrc":"3622:3:33","nodeType":"YulIdentifier","src":"3622:3:33"},"nativeSrc":"3622:16:33","nodeType":"YulFunctionCall","src":"3622:16:33"},{"kind":"number","nativeSrc":"3640:1:33","nodeType":"YulLiteral","src":"3640:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3615:6:33","nodeType":"YulIdentifier","src":"3615:6:33"},"nativeSrc":"3615:27:33","nodeType":"YulFunctionCall","src":"3615:27:33"},"nativeSrc":"3615:27:33","nodeType":"YulExpressionStatement","src":"3615:27:33"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3398:250:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3442:3:33","nodeType":"YulTypedName","src":"3442:3:33","type":""},{"name":"dst","nativeSrc":"3447:3:33","nodeType":"YulTypedName","src":"3447:3:33","type":""},{"name":"length","nativeSrc":"3452:6:33","nodeType":"YulTypedName","src":"3452:6:33","type":""}],"src":"3398:250:33"},{"body":{"nativeSrc":"3774:275:33","nodeType":"YulBlock","src":"3774:275:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3791:9:33","nodeType":"YulIdentifier","src":"3791:9:33"},{"kind":"number","nativeSrc":"3802:2:33","nodeType":"YulLiteral","src":"3802:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3784:6:33","nodeType":"YulIdentifier","src":"3784:6:33"},"nativeSrc":"3784:21:33","nodeType":"YulFunctionCall","src":"3784:21:33"},"nativeSrc":"3784:21:33","nodeType":"YulExpressionStatement","src":"3784:21:33"},{"nativeSrc":"3814:27:33","nodeType":"YulVariableDeclaration","src":"3814:27:33","value":{"arguments":[{"name":"value0","nativeSrc":"3834:6:33","nodeType":"YulIdentifier","src":"3834:6:33"}],"functionName":{"name":"mload","nativeSrc":"3828:5:33","nodeType":"YulIdentifier","src":"3828:5:33"},"nativeSrc":"3828:13:33","nodeType":"YulFunctionCall","src":"3828:13:33"},"variables":[{"name":"length","nativeSrc":"3818:6:33","nodeType":"YulTypedName","src":"3818:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3861:9:33","nodeType":"YulIdentifier","src":"3861:9:33"},{"kind":"number","nativeSrc":"3872:2:33","nodeType":"YulLiteral","src":"3872:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3857:3:33","nodeType":"YulIdentifier","src":"3857:3:33"},"nativeSrc":"3857:18:33","nodeType":"YulFunctionCall","src":"3857:18:33"},{"name":"length","nativeSrc":"3877:6:33","nodeType":"YulIdentifier","src":"3877:6:33"}],"functionName":{"name":"mstore","nativeSrc":"3850:6:33","nodeType":"YulIdentifier","src":"3850:6:33"},"nativeSrc":"3850:34:33","nodeType":"YulFunctionCall","src":"3850:34:33"},"nativeSrc":"3850:34:33","nodeType":"YulExpressionStatement","src":"3850:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"3932:6:33","nodeType":"YulIdentifier","src":"3932:6:33"},{"kind":"number","nativeSrc":"3940:2:33","nodeType":"YulLiteral","src":"3940:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3928:3:33","nodeType":"YulIdentifier","src":"3928:3:33"},"nativeSrc":"3928:15:33","nodeType":"YulFunctionCall","src":"3928:15:33"},{"arguments":[{"name":"headStart","nativeSrc":"3949:9:33","nodeType":"YulIdentifier","src":"3949:9:33"},{"kind":"number","nativeSrc":"3960:2:33","nodeType":"YulLiteral","src":"3960:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3945:3:33","nodeType":"YulIdentifier","src":"3945:3:33"},"nativeSrc":"3945:18:33","nodeType":"YulFunctionCall","src":"3945:18:33"},{"name":"length","nativeSrc":"3965:6:33","nodeType":"YulIdentifier","src":"3965:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3893:34:33","nodeType":"YulIdentifier","src":"3893:34:33"},"nativeSrc":"3893:79:33","nodeType":"YulFunctionCall","src":"3893:79:33"},"nativeSrc":"3893:79:33","nodeType":"YulExpressionStatement","src":"3893:79:33"},{"nativeSrc":"3981:62:33","nodeType":"YulAssignment","src":"3981:62:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3997:9:33","nodeType":"YulIdentifier","src":"3997:9:33"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4016:6:33","nodeType":"YulIdentifier","src":"4016:6:33"},{"kind":"number","nativeSrc":"4024:2:33","nodeType":"YulLiteral","src":"4024:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4012:3:33","nodeType":"YulIdentifier","src":"4012:3:33"},"nativeSrc":"4012:15:33","nodeType":"YulFunctionCall","src":"4012:15:33"},{"arguments":[{"kind":"number","nativeSrc":"4033:2:33","nodeType":"YulLiteral","src":"4033:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4029:3:33","nodeType":"YulIdentifier","src":"4029:3:33"},"nativeSrc":"4029:7:33","nodeType":"YulFunctionCall","src":"4029:7:33"}],"functionName":{"name":"and","nativeSrc":"4008:3:33","nodeType":"YulIdentifier","src":"4008:3:33"},"nativeSrc":"4008:29:33","nodeType":"YulFunctionCall","src":"4008:29:33"}],"functionName":{"name":"add","nativeSrc":"3993:3:33","nodeType":"YulIdentifier","src":"3993:3:33"},"nativeSrc":"3993:45:33","nodeType":"YulFunctionCall","src":"3993:45:33"},{"kind":"number","nativeSrc":"4040:2:33","nodeType":"YulLiteral","src":"4040:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3989:3:33","nodeType":"YulIdentifier","src":"3989:3:33"},"nativeSrc":"3989:54:33","nodeType":"YulFunctionCall","src":"3989:54:33"},"variableNames":[{"name":"tail","nativeSrc":"3981:4:33","nodeType":"YulIdentifier","src":"3981:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3653:396:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3743:9:33","nodeType":"YulTypedName","src":"3743:9:33","type":""},{"name":"value0","nativeSrc":"3754:6:33","nodeType":"YulTypedName","src":"3754:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3765:4:33","nodeType":"YulTypedName","src":"3765:4:33","type":""}],"src":"3653:396:33"},{"body":{"nativeSrc":"4155:102:33","nodeType":"YulBlock","src":"4155:102:33","statements":[{"nativeSrc":"4165:26:33","nodeType":"YulAssignment","src":"4165:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"4177:9:33","nodeType":"YulIdentifier","src":"4177:9:33"},{"kind":"number","nativeSrc":"4188:2:33","nodeType":"YulLiteral","src":"4188:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4173:3:33","nodeType":"YulIdentifier","src":"4173:3:33"},"nativeSrc":"4173:18:33","nodeType":"YulFunctionCall","src":"4173:18:33"},"variableNames":[{"name":"tail","nativeSrc":"4165:4:33","nodeType":"YulIdentifier","src":"4165:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4207:9:33","nodeType":"YulIdentifier","src":"4207:9:33"},{"arguments":[{"name":"value0","nativeSrc":"4222:6:33","nodeType":"YulIdentifier","src":"4222:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4238:3:33","nodeType":"YulLiteral","src":"4238:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"4243:1:33","nodeType":"YulLiteral","src":"4243:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4234:3:33","nodeType":"YulIdentifier","src":"4234:3:33"},"nativeSrc":"4234:11:33","nodeType":"YulFunctionCall","src":"4234:11:33"},{"kind":"number","nativeSrc":"4247:1:33","nodeType":"YulLiteral","src":"4247:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4230:3:33","nodeType":"YulIdentifier","src":"4230:3:33"},"nativeSrc":"4230:19:33","nodeType":"YulFunctionCall","src":"4230:19:33"}],"functionName":{"name":"and","nativeSrc":"4218:3:33","nodeType":"YulIdentifier","src":"4218:3:33"},"nativeSrc":"4218:32:33","nodeType":"YulFunctionCall","src":"4218:32:33"}],"functionName":{"name":"mstore","nativeSrc":"4200:6:33","nodeType":"YulIdentifier","src":"4200:6:33"},"nativeSrc":"4200:51:33","nodeType":"YulFunctionCall","src":"4200:51:33"},"nativeSrc":"4200:51:33","nodeType":"YulExpressionStatement","src":"4200:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4054:203:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4124:9:33","nodeType":"YulTypedName","src":"4124:9:33","type":""},{"name":"value0","nativeSrc":"4135:6:33","nodeType":"YulTypedName","src":"4135:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4146:4:33","nodeType":"YulTypedName","src":"4146:4:33","type":""}],"src":"4054:203:33"},{"body":{"nativeSrc":"4294:95:33","nodeType":"YulBlock","src":"4294:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4311:1:33","nodeType":"YulLiteral","src":"4311:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4318:3:33","nodeType":"YulLiteral","src":"4318:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"4323:10:33","nodeType":"YulLiteral","src":"4323:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4314:3:33","nodeType":"YulIdentifier","src":"4314:3:33"},"nativeSrc":"4314:20:33","nodeType":"YulFunctionCall","src":"4314:20:33"}],"functionName":{"name":"mstore","nativeSrc":"4304:6:33","nodeType":"YulIdentifier","src":"4304:6:33"},"nativeSrc":"4304:31:33","nodeType":"YulFunctionCall","src":"4304:31:33"},"nativeSrc":"4304:31:33","nodeType":"YulExpressionStatement","src":"4304:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4351:1:33","nodeType":"YulLiteral","src":"4351:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"4354:4:33","nodeType":"YulLiteral","src":"4354:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"4344:6:33","nodeType":"YulIdentifier","src":"4344:6:33"},"nativeSrc":"4344:15:33","nodeType":"YulFunctionCall","src":"4344:15:33"},"nativeSrc":"4344:15:33","nodeType":"YulExpressionStatement","src":"4344:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4375:1:33","nodeType":"YulLiteral","src":"4375:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"4378:4:33","nodeType":"YulLiteral","src":"4378:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4368:6:33","nodeType":"YulIdentifier","src":"4368:6:33"},"nativeSrc":"4368:15:33","nodeType":"YulFunctionCall","src":"4368:15:33"},"nativeSrc":"4368:15:33","nodeType":"YulExpressionStatement","src":"4368:15:33"}]},"name":"panic_error_0x11","nativeSrc":"4262:127:33","nodeType":"YulFunctionDefinition","src":"4262:127:33"},{"body":{"nativeSrc":"4443:79:33","nodeType":"YulBlock","src":"4443:79:33","statements":[{"nativeSrc":"4453:17:33","nodeType":"YulAssignment","src":"4453:17:33","value":{"arguments":[{"name":"x","nativeSrc":"4465:1:33","nodeType":"YulIdentifier","src":"4465:1:33"},{"name":"y","nativeSrc":"4468:1:33","nodeType":"YulIdentifier","src":"4468:1:33"}],"functionName":{"name":"sub","nativeSrc":"4461:3:33","nodeType":"YulIdentifier","src":"4461:3:33"},"nativeSrc":"4461:9:33","nodeType":"YulFunctionCall","src":"4461:9:33"},"variableNames":[{"name":"diff","nativeSrc":"4453:4:33","nodeType":"YulIdentifier","src":"4453:4:33"}]},{"body":{"nativeSrc":"4494:22:33","nodeType":"YulBlock","src":"4494:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4496:16:33","nodeType":"YulIdentifier","src":"4496:16:33"},"nativeSrc":"4496:18:33","nodeType":"YulFunctionCall","src":"4496:18:33"},"nativeSrc":"4496:18:33","nodeType":"YulExpressionStatement","src":"4496:18:33"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"4485:4:33","nodeType":"YulIdentifier","src":"4485:4:33"},{"name":"x","nativeSrc":"4491:1:33","nodeType":"YulIdentifier","src":"4491:1:33"}],"functionName":{"name":"gt","nativeSrc":"4482:2:33","nodeType":"YulIdentifier","src":"4482:2:33"},"nativeSrc":"4482:11:33","nodeType":"YulFunctionCall","src":"4482:11:33"},"nativeSrc":"4479:37:33","nodeType":"YulIf","src":"4479:37:33"}]},"name":"checked_sub_t_uint256","nativeSrc":"4394:128:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4425:1:33","nodeType":"YulTypedName","src":"4425:1:33","type":""},{"name":"y","nativeSrc":"4428:1:33","nodeType":"YulTypedName","src":"4428:1:33","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"4434:4:33","nodeType":"YulTypedName","src":"4434:4:33","type":""}],"src":"4394:128:33"},{"body":{"nativeSrc":"4575:77:33","nodeType":"YulBlock","src":"4575:77:33","statements":[{"nativeSrc":"4585:16:33","nodeType":"YulAssignment","src":"4585:16:33","value":{"arguments":[{"name":"x","nativeSrc":"4596:1:33","nodeType":"YulIdentifier","src":"4596:1:33"},{"name":"y","nativeSrc":"4599:1:33","nodeType":"YulIdentifier","src":"4599:1:33"}],"functionName":{"name":"add","nativeSrc":"4592:3:33","nodeType":"YulIdentifier","src":"4592:3:33"},"nativeSrc":"4592:9:33","nodeType":"YulFunctionCall","src":"4592:9:33"},"variableNames":[{"name":"sum","nativeSrc":"4585:3:33","nodeType":"YulIdentifier","src":"4585:3:33"}]},{"body":{"nativeSrc":"4624:22:33","nodeType":"YulBlock","src":"4624:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4626:16:33","nodeType":"YulIdentifier","src":"4626:16:33"},"nativeSrc":"4626:18:33","nodeType":"YulFunctionCall","src":"4626:18:33"},"nativeSrc":"4626:18:33","nodeType":"YulExpressionStatement","src":"4626:18:33"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"4616:1:33","nodeType":"YulIdentifier","src":"4616:1:33"},{"name":"sum","nativeSrc":"4619:3:33","nodeType":"YulIdentifier","src":"4619:3:33"}],"functionName":{"name":"gt","nativeSrc":"4613:2:33","nodeType":"YulIdentifier","src":"4613:2:33"},"nativeSrc":"4613:10:33","nodeType":"YulFunctionCall","src":"4613:10:33"},"nativeSrc":"4610:36:33","nodeType":"YulIf","src":"4610:36:33"}]},"name":"checked_add_t_uint256","nativeSrc":"4527:125:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4558:1:33","nodeType":"YulTypedName","src":"4558:1:33","type":""},{"name":"y","nativeSrc":"4561:1:33","nodeType":"YulTypedName","src":"4561:1:33","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"4567:3:33","nodeType":"YulTypedName","src":"4567:3:33","type":""}],"src":"4527:125:33"},{"body":{"nativeSrc":"4765:101:33","nodeType":"YulBlock","src":"4765:101:33","statements":[{"nativeSrc":"4775:26:33","nodeType":"YulAssignment","src":"4775:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"4787:9:33","nodeType":"YulIdentifier","src":"4787:9:33"},{"kind":"number","nativeSrc":"4798:2:33","nodeType":"YulLiteral","src":"4798:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4783:3:33","nodeType":"YulIdentifier","src":"4783:3:33"},"nativeSrc":"4783:18:33","nodeType":"YulFunctionCall","src":"4783:18:33"},"variableNames":[{"name":"tail","nativeSrc":"4775:4:33","nodeType":"YulIdentifier","src":"4775:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4817:9:33","nodeType":"YulIdentifier","src":"4817:9:33"},{"arguments":[{"name":"value0","nativeSrc":"4832:6:33","nodeType":"YulIdentifier","src":"4832:6:33"},{"kind":"number","nativeSrc":"4840:18:33","nodeType":"YulLiteral","src":"4840:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4828:3:33","nodeType":"YulIdentifier","src":"4828:3:33"},"nativeSrc":"4828:31:33","nodeType":"YulFunctionCall","src":"4828:31:33"}],"functionName":{"name":"mstore","nativeSrc":"4810:6:33","nodeType":"YulIdentifier","src":"4810:6:33"},"nativeSrc":"4810:50:33","nodeType":"YulFunctionCall","src":"4810:50:33"},"nativeSrc":"4810:50:33","nodeType":"YulExpressionStatement","src":"4810:50:33"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"4657:209:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4734:9:33","nodeType":"YulTypedName","src":"4734:9:33","type":""},{"name":"value0","nativeSrc":"4745:6:33","nodeType":"YulTypedName","src":"4745:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4756:4:33","nodeType":"YulTypedName","src":"4756:4:33","type":""}],"src":"4657:209:33"},{"body":{"nativeSrc":"5000:145:33","nodeType":"YulBlock","src":"5000:145:33","statements":[{"nativeSrc":"5010:26:33","nodeType":"YulAssignment","src":"5010:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"5022:9:33","nodeType":"YulIdentifier","src":"5022:9:33"},{"kind":"number","nativeSrc":"5033:2:33","nodeType":"YulLiteral","src":"5033:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5018:3:33","nodeType":"YulIdentifier","src":"5018:3:33"},"nativeSrc":"5018:18:33","nodeType":"YulFunctionCall","src":"5018:18:33"},"variableNames":[{"name":"tail","nativeSrc":"5010:4:33","nodeType":"YulIdentifier","src":"5010:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5052:9:33","nodeType":"YulIdentifier","src":"5052:9:33"},{"arguments":[{"name":"value0","nativeSrc":"5067:6:33","nodeType":"YulIdentifier","src":"5067:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5083:3:33","nodeType":"YulLiteral","src":"5083:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"5088:1:33","nodeType":"YulLiteral","src":"5088:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5079:3:33","nodeType":"YulIdentifier","src":"5079:3:33"},"nativeSrc":"5079:11:33","nodeType":"YulFunctionCall","src":"5079:11:33"},{"kind":"number","nativeSrc":"5092:1:33","nodeType":"YulLiteral","src":"5092:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5075:3:33","nodeType":"YulIdentifier","src":"5075:3:33"},"nativeSrc":"5075:19:33","nodeType":"YulFunctionCall","src":"5075:19:33"}],"functionName":{"name":"and","nativeSrc":"5063:3:33","nodeType":"YulIdentifier","src":"5063:3:33"},"nativeSrc":"5063:32:33","nodeType":"YulFunctionCall","src":"5063:32:33"}],"functionName":{"name":"mstore","nativeSrc":"5045:6:33","nodeType":"YulIdentifier","src":"5045:6:33"},"nativeSrc":"5045:51:33","nodeType":"YulFunctionCall","src":"5045:51:33"},"nativeSrc":"5045:51:33","nodeType":"YulExpressionStatement","src":"5045:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5116:9:33","nodeType":"YulIdentifier","src":"5116:9:33"},{"kind":"number","nativeSrc":"5127:2:33","nodeType":"YulLiteral","src":"5127:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5112:3:33","nodeType":"YulIdentifier","src":"5112:3:33"},"nativeSrc":"5112:18:33","nodeType":"YulFunctionCall","src":"5112:18:33"},{"name":"value1","nativeSrc":"5132:6:33","nodeType":"YulIdentifier","src":"5132:6:33"}],"functionName":{"name":"mstore","nativeSrc":"5105:6:33","nodeType":"YulIdentifier","src":"5105:6:33"},"nativeSrc":"5105:34:33","nodeType":"YulFunctionCall","src":"5105:34:33"},"nativeSrc":"5105:34:33","nodeType":"YulExpressionStatement","src":"5105:34:33"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"4871:274:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4961:9:33","nodeType":"YulTypedName","src":"4961:9:33","type":""},{"name":"value1","nativeSrc":"4972:6:33","nodeType":"YulTypedName","src":"4972:6:33","type":""},{"name":"value0","nativeSrc":"4980:6:33","nodeType":"YulTypedName","src":"4980:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4991:4:33","nodeType":"YulTypedName","src":"4991:4:33","type":""}],"src":"4871:274:33"},{"body":{"nativeSrc":"5307:218:33","nodeType":"YulBlock","src":"5307:218:33","statements":[{"nativeSrc":"5317:26:33","nodeType":"YulAssignment","src":"5317:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"5329:9:33","nodeType":"YulIdentifier","src":"5329:9:33"},{"kind":"number","nativeSrc":"5340:2:33","nodeType":"YulLiteral","src":"5340:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5325:3:33","nodeType":"YulIdentifier","src":"5325:3:33"},"nativeSrc":"5325:18:33","nodeType":"YulFunctionCall","src":"5325:18:33"},"variableNames":[{"name":"tail","nativeSrc":"5317:4:33","nodeType":"YulIdentifier","src":"5317:4:33"}]},{"nativeSrc":"5352:29:33","nodeType":"YulVariableDeclaration","src":"5352:29:33","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5370:3:33","nodeType":"YulLiteral","src":"5370:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"5375:1:33","nodeType":"YulLiteral","src":"5375:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5366:3:33","nodeType":"YulIdentifier","src":"5366:3:33"},"nativeSrc":"5366:11:33","nodeType":"YulFunctionCall","src":"5366:11:33"},{"kind":"number","nativeSrc":"5379:1:33","nodeType":"YulLiteral","src":"5379:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5362:3:33","nodeType":"YulIdentifier","src":"5362:3:33"},"nativeSrc":"5362:19:33","nodeType":"YulFunctionCall","src":"5362:19:33"},"variables":[{"name":"_1","nativeSrc":"5356:2:33","nodeType":"YulTypedName","src":"5356:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5397:9:33","nodeType":"YulIdentifier","src":"5397:9:33"},{"arguments":[{"name":"value0","nativeSrc":"5412:6:33","nodeType":"YulIdentifier","src":"5412:6:33"},{"name":"_1","nativeSrc":"5420:2:33","nodeType":"YulIdentifier","src":"5420:2:33"}],"functionName":{"name":"and","nativeSrc":"5408:3:33","nodeType":"YulIdentifier","src":"5408:3:33"},"nativeSrc":"5408:15:33","nodeType":"YulFunctionCall","src":"5408:15:33"}],"functionName":{"name":"mstore","nativeSrc":"5390:6:33","nodeType":"YulIdentifier","src":"5390:6:33"},"nativeSrc":"5390:34:33","nodeType":"YulFunctionCall","src":"5390:34:33"},"nativeSrc":"5390:34:33","nodeType":"YulExpressionStatement","src":"5390:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5444:9:33","nodeType":"YulIdentifier","src":"5444:9:33"},{"kind":"number","nativeSrc":"5455:2:33","nodeType":"YulLiteral","src":"5455:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5440:3:33","nodeType":"YulIdentifier","src":"5440:3:33"},"nativeSrc":"5440:18:33","nodeType":"YulFunctionCall","src":"5440:18:33"},{"arguments":[{"name":"value1","nativeSrc":"5464:6:33","nodeType":"YulIdentifier","src":"5464:6:33"},{"name":"_1","nativeSrc":"5472:2:33","nodeType":"YulIdentifier","src":"5472:2:33"}],"functionName":{"name":"and","nativeSrc":"5460:3:33","nodeType":"YulIdentifier","src":"5460:3:33"},"nativeSrc":"5460:15:33","nodeType":"YulFunctionCall","src":"5460:15:33"}],"functionName":{"name":"mstore","nativeSrc":"5433:6:33","nodeType":"YulIdentifier","src":"5433:6:33"},"nativeSrc":"5433:43:33","nodeType":"YulFunctionCall","src":"5433:43:33"},"nativeSrc":"5433:43:33","nodeType":"YulExpressionStatement","src":"5433:43:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5496:9:33","nodeType":"YulIdentifier","src":"5496:9:33"},{"kind":"number","nativeSrc":"5507:2:33","nodeType":"YulLiteral","src":"5507:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5492:3:33","nodeType":"YulIdentifier","src":"5492:3:33"},"nativeSrc":"5492:18:33","nodeType":"YulFunctionCall","src":"5492:18:33"},{"name":"value2","nativeSrc":"5512:6:33","nodeType":"YulIdentifier","src":"5512:6:33"}],"functionName":{"name":"mstore","nativeSrc":"5485:6:33","nodeType":"YulIdentifier","src":"5485:6:33"},"nativeSrc":"5485:34:33","nodeType":"YulFunctionCall","src":"5485:34:33"},"nativeSrc":"5485:34:33","nodeType":"YulExpressionStatement","src":"5485:34:33"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"5150:375:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5260:9:33","nodeType":"YulTypedName","src":"5260:9:33","type":""},{"name":"value2","nativeSrc":"5271:6:33","nodeType":"YulTypedName","src":"5271:6:33","type":""},{"name":"value1","nativeSrc":"5279:6:33","nodeType":"YulTypedName","src":"5279:6:33","type":""},{"name":"value0","nativeSrc":"5287:6:33","nodeType":"YulTypedName","src":"5287:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5298:4:33","nodeType":"YulTypedName","src":"5298:4:33","type":""}],"src":"5150:375:33"},{"body":{"nativeSrc":"5611:103:33","nodeType":"YulBlock","src":"5611:103:33","statements":[{"body":{"nativeSrc":"5657:16:33","nodeType":"YulBlock","src":"5657:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5666:1:33","nodeType":"YulLiteral","src":"5666:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"5669:1:33","nodeType":"YulLiteral","src":"5669:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5659:6:33","nodeType":"YulIdentifier","src":"5659:6:33"},"nativeSrc":"5659:12:33","nodeType":"YulFunctionCall","src":"5659:12:33"},"nativeSrc":"5659:12:33","nodeType":"YulExpressionStatement","src":"5659:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5632:7:33","nodeType":"YulIdentifier","src":"5632:7:33"},{"name":"headStart","nativeSrc":"5641:9:33","nodeType":"YulIdentifier","src":"5641:9:33"}],"functionName":{"name":"sub","nativeSrc":"5628:3:33","nodeType":"YulIdentifier","src":"5628:3:33"},"nativeSrc":"5628:23:33","nodeType":"YulFunctionCall","src":"5628:23:33"},{"kind":"number","nativeSrc":"5653:2:33","nodeType":"YulLiteral","src":"5653:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5624:3:33","nodeType":"YulIdentifier","src":"5624:3:33"},"nativeSrc":"5624:32:33","nodeType":"YulFunctionCall","src":"5624:32:33"},"nativeSrc":"5621:52:33","nodeType":"YulIf","src":"5621:52:33"},{"nativeSrc":"5682:26:33","nodeType":"YulAssignment","src":"5682:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"5698:9:33","nodeType":"YulIdentifier","src":"5698:9:33"}],"functionName":{"name":"mload","nativeSrc":"5692:5:33","nodeType":"YulIdentifier","src":"5692:5:33"},"nativeSrc":"5692:16:33","nodeType":"YulFunctionCall","src":"5692:16:33"},"variableNames":[{"name":"value0","nativeSrc":"5682:6:33","nodeType":"YulIdentifier","src":"5682:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"5530:184:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5577:9:33","nodeType":"YulTypedName","src":"5577:9:33","type":""},{"name":"dataEnd","nativeSrc":"5588:7:33","nodeType":"YulTypedName","src":"5588:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5600:6:33","nodeType":"YulTypedName","src":"5600:6:33","type":""}],"src":"5530:184:33"},{"body":{"nativeSrc":"5848:145:33","nodeType":"YulBlock","src":"5848:145:33","statements":[{"nativeSrc":"5858:26:33","nodeType":"YulAssignment","src":"5858:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"5870:9:33","nodeType":"YulIdentifier","src":"5870:9:33"},{"kind":"number","nativeSrc":"5881:2:33","nodeType":"YulLiteral","src":"5881:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5866:3:33","nodeType":"YulIdentifier","src":"5866:3:33"},"nativeSrc":"5866:18:33","nodeType":"YulFunctionCall","src":"5866:18:33"},"variableNames":[{"name":"tail","nativeSrc":"5858:4:33","nodeType":"YulIdentifier","src":"5858:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5900:9:33","nodeType":"YulIdentifier","src":"5900:9:33"},{"arguments":[{"name":"value0","nativeSrc":"5915:6:33","nodeType":"YulIdentifier","src":"5915:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5931:3:33","nodeType":"YulLiteral","src":"5931:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"5936:1:33","nodeType":"YulLiteral","src":"5936:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5927:3:33","nodeType":"YulIdentifier","src":"5927:3:33"},"nativeSrc":"5927:11:33","nodeType":"YulFunctionCall","src":"5927:11:33"},{"kind":"number","nativeSrc":"5940:1:33","nodeType":"YulLiteral","src":"5940:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5923:3:33","nodeType":"YulIdentifier","src":"5923:3:33"},"nativeSrc":"5923:19:33","nodeType":"YulFunctionCall","src":"5923:19:33"}],"functionName":{"name":"and","nativeSrc":"5911:3:33","nodeType":"YulIdentifier","src":"5911:3:33"},"nativeSrc":"5911:32:33","nodeType":"YulFunctionCall","src":"5911:32:33"}],"functionName":{"name":"mstore","nativeSrc":"5893:6:33","nodeType":"YulIdentifier","src":"5893:6:33"},"nativeSrc":"5893:51:33","nodeType":"YulFunctionCall","src":"5893:51:33"},"nativeSrc":"5893:51:33","nodeType":"YulExpressionStatement","src":"5893:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5964:9:33","nodeType":"YulIdentifier","src":"5964:9:33"},{"kind":"number","nativeSrc":"5975:2:33","nodeType":"YulLiteral","src":"5975:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5960:3:33","nodeType":"YulIdentifier","src":"5960:3:33"},"nativeSrc":"5960:18:33","nodeType":"YulFunctionCall","src":"5960:18:33"},{"name":"value1","nativeSrc":"5980:6:33","nodeType":"YulIdentifier","src":"5980:6:33"}],"functionName":{"name":"mstore","nativeSrc":"5953:6:33","nodeType":"YulIdentifier","src":"5953:6:33"},"nativeSrc":"5953:34:33","nodeType":"YulFunctionCall","src":"5953:34:33"},"nativeSrc":"5953:34:33","nodeType":"YulExpressionStatement","src":"5953:34:33"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"5719:274:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5809:9:33","nodeType":"YulTypedName","src":"5809:9:33","type":""},{"name":"value1","nativeSrc":"5820:6:33","nodeType":"YulTypedName","src":"5820:6:33","type":""},{"name":"value0","nativeSrc":"5828:6:33","nodeType":"YulTypedName","src":"5828:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5839:4:33","nodeType":"YulTypedName","src":"5839:4:33","type":""}],"src":"5719:274:33"},{"body":{"nativeSrc":"6135:150:33","nodeType":"YulBlock","src":"6135:150:33","statements":[{"nativeSrc":"6145:27:33","nodeType":"YulVariableDeclaration","src":"6145:27:33","value":{"arguments":[{"name":"value0","nativeSrc":"6165:6:33","nodeType":"YulIdentifier","src":"6165:6:33"}],"functionName":{"name":"mload","nativeSrc":"6159:5:33","nodeType":"YulIdentifier","src":"6159:5:33"},"nativeSrc":"6159:13:33","nodeType":"YulFunctionCall","src":"6159:13:33"},"variables":[{"name":"length","nativeSrc":"6149:6:33","nodeType":"YulTypedName","src":"6149:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"6220:6:33","nodeType":"YulIdentifier","src":"6220:6:33"},{"kind":"number","nativeSrc":"6228:4:33","nodeType":"YulLiteral","src":"6228:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6216:3:33","nodeType":"YulIdentifier","src":"6216:3:33"},"nativeSrc":"6216:17:33","nodeType":"YulFunctionCall","src":"6216:17:33"},{"name":"pos","nativeSrc":"6235:3:33","nodeType":"YulIdentifier","src":"6235:3:33"},{"name":"length","nativeSrc":"6240:6:33","nodeType":"YulIdentifier","src":"6240:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6181:34:33","nodeType":"YulIdentifier","src":"6181:34:33"},"nativeSrc":"6181:66:33","nodeType":"YulFunctionCall","src":"6181:66:33"},"nativeSrc":"6181:66:33","nodeType":"YulExpressionStatement","src":"6181:66:33"},{"nativeSrc":"6256:23:33","nodeType":"YulAssignment","src":"6256:23:33","value":{"arguments":[{"name":"pos","nativeSrc":"6267:3:33","nodeType":"YulIdentifier","src":"6267:3:33"},{"name":"length","nativeSrc":"6272:6:33","nodeType":"YulIdentifier","src":"6272:6:33"}],"functionName":{"name":"add","nativeSrc":"6263:3:33","nodeType":"YulIdentifier","src":"6263:3:33"},"nativeSrc":"6263:16:33","nodeType":"YulFunctionCall","src":"6263:16:33"},"variableNames":[{"name":"end","nativeSrc":"6256:3:33","nodeType":"YulIdentifier","src":"6256:3:33"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"5998:287:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6111:3:33","nodeType":"YulTypedName","src":"6111:3:33","type":""},{"name":"value0","nativeSrc":"6116:6:33","nodeType":"YulTypedName","src":"6116:6:33","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6127:3:33","nodeType":"YulTypedName","src":"6127:3:33","type":""}],"src":"5998:287:33"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"652":[{"length":32,"start":2790},{"length":32,"start":2831},{"length":32,"start":3162}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75619AB5 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xF0BD87CC EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75619AB5 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xBFE10928 EQ PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4026CF23 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x4026CF23 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x523FBA7F EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xF89 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB3 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x19C PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x69B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x787 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x306 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1236 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x41B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1276 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x44C DUP3 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x455 DUP2 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x45F DUP4 DUP4 PUSH2 0x922 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x48E JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x498 DUP3 DUP3 PUSH2 0x9C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1236 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x4B5 DUP2 PUSH2 0x915 JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x55E SWAP1 DUP5 SWAP1 PUSH2 0x11DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x578 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP5 PUSH2 0xA43 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9DEF4E2802183D68CE90A6A226A2962B59298616C27165F12C4FBC5C84CDD778 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D6 DUP2 PUSH2 0x915 JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP6 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x634 SWAP1 DUP5 SWAP1 PUSH2 0x11ED JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x684 PUSH2 0xADB JUMP JUMPDEST PUSH2 0x68D DUP3 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x697 DUP3 DUP3 PUSH2 0xB8D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A5 PUSH2 0xC4F JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1256 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C3 DUP2 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND OR SWAP1 SWAP3 SSTORE AND DUP1 ISZERO PUSH2 0x729 JUMPI PUSH2 0x727 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1236 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x9C7 JUMP JUMPDEST POP JUMPDEST PUSH2 0x741 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1236 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x922 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C6EABD1DB7FE5A1951A7C78767C0E3633C5352578D15D45F99AA4C4DB01C55A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1276 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C9 PUSH2 0xC98 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x80E JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x81C JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x864 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x86C PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x874 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x87F PUSH1 0x0 DUP8 PUSH2 0x922 JUMP JUMPDEST POP PUSH2 0x8AA PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP8 PUSH2 0x922 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x8F1 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x902 DUP3 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x90B DUP2 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x45F DUP4 DUP4 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x91F DUP2 CALLER PUSH2 0xCC9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1276 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x93D DUP5 DUP5 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x9BD JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x973 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x41B JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x41B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1276 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9E2 DUP5 DUP5 PUSH2 0x787 JUMP JUMPDEST ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x498 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x45F SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0xA70 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xB62 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB56 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1256 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x697 DUP2 PUSH2 0x915 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBE7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBE4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1256 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xC45 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x498 DUP4 DUP4 PUSH2 0xD73 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x41B JUMP JUMPDEST PUSH2 0xB80 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xCD3 DUP3 DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xD3D JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC0B JUMP JUMPDEST PUSH2 0xD7C DUP3 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xDC1 JUMPI PUSH2 0x498 DUP3 DUP3 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x697 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0xDD1 PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0xE24 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1256 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xE70 SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEC0 DUP6 DUP4 DUP4 PUSH2 0xF02 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEF2 PUSH2 0xC98 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xF17 JUMPI PUSH2 0xF12 DUP3 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xF2E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC0B JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xF70 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xF5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x100B PUSH1 0x20 DUP5 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1029 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1032 DUP5 PUSH2 0xFCC JUMP JUMPDEST SWAP3 POP PUSH2 0x1040 PUSH1 0x20 DUP6 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x106C DUP4 PUSH2 0xFCC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10AC DUP4 PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x10EF JUMPI PUSH2 0x10EF PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1117 PUSH2 0x107A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5A DUP3 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1188 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1170 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11B0 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x116D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x41B JUMPI PUSH2 0x41B PUSH2 0x11C4 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x41B JUMPI PUSH2 0x41B PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x122B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x116D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID 0xFB 0xD4 SLOAD RETURN PUSH11 0x7E1A388BD6FC3AB10D434A LOG4 JUMPI DUP16 DUP2 BYTE 0xCB 0xBC RETURN GASPRICE 0xFB SHR PUSH10 0x7486313C360894A13BA1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC02DD7BC7DEC4DCEEDDA775 0xE5 DUP14 0xD5 COINBASE 0xE0 DUP11 GT PUSH13 0x6C53815C0BD028192F7B626800 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xED 0xAF 0xEE DUP13 0xDE 0xD0 SELFBALANCE PUSH23 0xCE59EA294E29F5F61A2C8CF5B77052EFD5F9A8231CCFBA PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"592:3442:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:202:0;;;;;;;;;;-1:-1:-1;3491:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:33;;463:22;445:41;;433:2;418:18;3491:202:0;;;;;;;;4807:191;;;;;;;;;;-1:-1:-1;4807:191:0;;;;;:::i;:::-;;:::i;:::-;;;828:25:33;;;816:2;801:18;4807:191:0;682:177:33;5294:136:0;;;;;;;;;;-1:-1:-1;5294:136:0;;;;;:::i;:::-;;:::i;:::-;;6396:245;;;;;;;;;;-1:-1:-1;6396:245:0;;;;;:::i;:::-;;:::i;2284:421:31:-;;;;;;;;;;-1:-1:-1;2284:421:31;;;;;:::i;:::-;;:::i;1780:314::-;;;;;;;;;;-1:-1:-1;1780:314:31;;;;;:::i;:::-;;:::i;4161:214:2:-;;;;;;:::i;:::-;;:::i;858:48:31:-;;;;;;;;;;-1:-1:-1;858:48:31;;;;;:::i;:::-;;;;;;;;;;;;;;;3708:134:2;;;;;;;;;;;;;:::i;2833:507:31:-;;;;;;;;;;-1:-1:-1;2833:507:31;;;;;:::i;:::-;;:::i;3780:207:0:-;;;;;;;;;;-1:-1:-1;3780:207:0;;;;;:::i;:::-;;:::i;2398:49::-;;;;;;;;;;-1:-1:-1;2398:49:0;2443:4;2398:49;;1819:58:2;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;912:26:31:-;;;;;;;;;;-1:-1:-1;912:26:31;;;;-1:-1:-1;;;;;912:26:31;;;;;;-1:-1:-1;;;;;4218:32:33;;;4200:51;;4188:2;4173:18;912:26:31;4054:203:33;1401:223:31;;;;;;;;;;-1:-1:-1;1401:223:31;;;;;:::i;:::-;;:::i;5710:138:0:-;;;;;;;;;;-1:-1:-1;5710:138:0;;;;;:::i;:::-;;:::i;3476:108:31:-;;;;;;;;;;-1:-1:-1;3476:108:31;;;;;:::i;:::-;-1:-1:-1;;;;;3557:20:31;3531:7;3557:20;;;;;;;;;;;;3476:108;789:62;;;;;;;;;;;;827:24;789:62;;711:72;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;711:72:31;;3491:202:0;3576:4;-1:-1:-1;;;;;;3599:47:0;;-1:-1:-1;;;3599:47:0;;:87;;-1:-1:-1;;;;;;;;;;1101:40:6;;;3650:36:0;3592:94;3491:202;-1:-1:-1;;3491:202:0:o;4807:191::-;4872:7;4967:14;;;-1:-1:-1;;;;;;;;;;;4967:14:0;;;;;:24;;;;4807:191::o;5294:136::-;5368:18;5381:4;5368:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5398:25:::1;5409:4;5415:7;5398:10;:25::i;:::-;;5294:136:::0;;;:::o;6396:245::-;-1:-1:-1;;;;;6489:34:0;;966:10:3;6489:34:0;6485:102;;6546:30;;-1:-1:-1;;;6546:30:0;;;;;;;;;;;6485:102;6597:37;6609:4;6615:18;6597:11;:37::i;:::-;;6396:245;;:::o;2284:421:31:-;-1:-1:-1;;;;;;;;;;;3272:16:0;3283:4;3272:10;:16::i;:::-;2392:6:31::1;2402:1;2392:11:::0;2388:39:::1;;2412:15;;-1:-1:-1::0;;;2412:15:31::1;;;;;;;;;;;2388:39;-1:-1:-1::0;;;;;2441:16:31;::::1;2437:44;;2466:15;;-1:-1:-1::0;;;2466:15:31::1;;;;;;;;;;;2437:44;-1:-1:-1::0;;;;;2495:20:31;::::1;:13;:20:::0;;;::::1;::::0;;;;;;;:29;-1:-1:-1;2491:63:31::1;;;2533:21;;-1:-1:-1::0;;;2533:21:31::1;;;;;;;;;;;2491:63;-1:-1:-1::0;;;;;2573:20:31;::::1;:13;:20:::0;;;::::1;::::0;;;;;;:30;;2597:6;;2573:13;:30:::1;::::0;2597:6;;2573:30:::1;:::i;:::-;::::0;;;-1:-1:-1;2613:38:31::1;::::0;-1:-1:-1;;;;;;2613:26:31;::::1;2640:2:::0;2644:6;2613:26:::1;:38::i;:::-;2687:2;-1:-1:-1::0;;;;;2675:23:31::1;2680:5;-1:-1:-1::0;;;;;2675:23:31::1;;2691:6;2675:23;;;;828:25:33::0;;816:2;801:18;;682:177;2675:23:31::1;;;;;;;;2284:421:::0;;;;:::o;1780:314::-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;1880:6:31::1;1890:1;1880:11:::0;1876:39:::1;;1900:15;;-1:-1:-1::0;;;1900:15:31::1;;;;;;;;;;;1876:39;1934:65;-1:-1:-1::0;;;;;1934:30:31;::::1;1965:10;1985:4;1992:6:::0;1934:30:::1;:65::i;:::-;-1:-1:-1::0;;;;;2009:20:31;::::1;:13;:20:::0;;;::::1;::::0;;;;;;:30;;2033:6;;2009:13;:30:::1;::::0;2033:6;;2009:30:::1;:::i;:::-;::::0;;;-1:-1:-1;;2063:24:31::1;::::0;828:25:33;;;-1:-1:-1;;;;;2063:24:31;::::1;::::0;::::1;::::0;816:2:33;801:18;2063:24:31::1;;;;;;;1780:314:::0;;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;2833:507:31:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;-1:-1:-1;;;;;2933:28:31;::::1;2929:56;;2970:15;;-1:-1:-1::0;;;2970:15:31::1;;;;;;;;;;;2929:56;3029:11;::::0;;-1:-1:-1;;;;;3050:28:31;;::::1;-1:-1:-1::0;;;;;;3050:28:31;::::1;;::::0;;;3029:11:::1;3101:28:::0;;3097:104:::1;;3145:45;-1:-1:-1::0;;;;;;;;;;;3175:14:31::1;3145:11;:45::i;:::-;;3097:104;3219:44;-1:-1:-1::0;;;;;;;;;;;3248:14:31::1;3219:10;:44::i;:::-;;3318:14;-1:-1:-1::0;;;;;3287:46:31::1;3302:14;-1:-1:-1::0;;;;;3287:46:31::1;;;;;;;;;;;2919:421;2833:507:::0;;:::o;3780:207:0:-;3857:4;3949:14;;;-1:-1:-1;;;;;;;;;;;3949:14:0;;;;;;;;-1:-1:-1;;;;;3949:31:0;;;;;;;;;;;;;;;3780:207::o;1401:223:31:-;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;1465:22:31::1;:20;:22::i;:::-;1497:24;:22;:24::i;:::-;1540:37;2443:4:0;1571:5:31::0;1540:10:::1;:37::i;:::-;;1587:30;827:24;1611:5;1587:10;:30::i;:::-;;5068:14:1::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;4810:50:33;;5140:14:1;;4798:2:33;4783:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;1401:223:31;:::o;5710:138:0:-;5785:18;5798:4;5785:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5815:26:::1;5827:4;5833:7;5815:11;:26::i;4196:103::-:0;4262:30;4273:4;966:10:3;4262::0;:30::i;:::-;4196:103;:::o;7318:387::-;7395:4;-1:-1:-1;;;;;;;;;;;7485:22:0;7493:4;7499:7;7485;:22::i;:::-;7480:219;;7523:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7523:31:0;;;;;;;;;:38;;-1:-1:-1;;7523:38:0;7557:4;7523:38;;;7607:12;966:10:3;;887:96;7607:12:0;-1:-1:-1;;;;;7580:40:0;7598:7;-1:-1:-1;;;;;7580:40:0;7592:4;7580:40;;;;;;;;;;7641:4;7634:11;;;;;7480:219;7683:5;7676:12;;;;;7942:388;8020:4;-1:-1:-1;;;;;;;;;;;8109:22:0;8117:4;8123:7;8109;:22::i;:::-;8105:219;;;8181:5;8147:14;;;;;;;;;;;-1:-1:-1;;;;;8147:31:0;;;;;;;;;;:39;;-1:-1:-1;;8147:39:0;;;8205:40;966:10:3;;8147:14:0;;8205:40;;8181:5;8205:40;8266:4;8259:11;;;;;1219:160:17;1328:43;;-1:-1:-1;;;;;5063:32:33;;;1328:43:17;;;5045:51:33;5112:18;;;5105:34;;;1301:71:17;;1321:5;;1343:14;;;;;5018:18:33;;1328:43:17;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:17;;;;;;;;;;;1301:19;:71::i;1618:188::-;1745:53;;-1:-1:-1;;;;;5408:15:33;;;1745:53:17;;;5390:34:33;5460:15;;;5440:18;;;5433:43;5492:18;;;5485:34;;;1718:81:17;;1738:5;;1760:18;;;;;5325::33;;1745:53:17;5150:375:33;4578:312:2;4658:4;-1:-1:-1;;;;;4667:6:2;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:14;-1:-1:-1;;;;;1519:53:14;;1441:138;4728:32:2;-1:-1:-1;;;;;4728:42:2;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:2;;;;;;;;;;;4633:251;4578:312::o;3929:103:31:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;6032:538:2:-;6149:17;-1:-1:-1;;;;;6131:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:2;;;;;;;;-1:-1:-1;;6131:52:2;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:2;;-1:-1:-1;;;;;4218:32:33;;6493:60:2;;;4200:51:33;4173:18;;6493:60:2;;;;;;;;6127:437;-1:-1:-1;;;;;;;;;;;6225:40:2;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:2;;;;;828:25:33;;;801:18;;6292:34:2;682:177:33;6221:120:2;6354:54;6384:17;6403:4;6354:29;:54::i;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:2;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:2;;;;;;;;;;;9071:205:1;9129:30;;3147:66;9186:27;8819:122;3312:65:0;6929:20:1;:18;:20::i;4429:197:0:-;4517:22;4525:4;4531:7;4517;:22::i;:::-;4512:108;;4562:47;;-1:-1:-1;;;4562:47:0;;-1:-1:-1;;;;;5063:32:33;;4562:47:0;;;5045:51:33;5112:18;;;5105:34;;;5018:18;;4562:47:0;4871:274:33;8370:720:17;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:17;8910:8;8866:16;;-1:-1:-1;8942:15:17;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:17;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:17;;-1:-1:-1;;;;;4218:32:33;;9033:40:17;;;4200:51:33;4173:18;;9033:40:17;4054:203:33;2264:344:14;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:14;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;7082:141:1:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;1671:281:14;1748:17;-1:-1:-1;;;;;1748:29:14;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:14;;-1:-1:-1;;;;;4218:32:33;;1805:47:14;;;4200:51:33;4173:18;;1805:47:14;4054:203:33;1744:119:14;-1:-1:-1;;;;;;;;;;;1872:73:14;;-1:-1:-1;;;;;;1872:73:14;-1:-1:-1;;;;;1872:73:14;;;;;;;;;;1671:281::o;3916:253:18:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:18;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:18:o;6113:122:14:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:14;;;;;;;;;;;8485:120:1;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;4437:582:18:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:18;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:18;;-1:-1:-1;;;;;4218:32:33;;4933:24:18;;;4200:51:33;4173:18;;4933:24:18;4054:203:33;4853:119:18;-1:-1:-1;4992:10:18;4605:408;4437:582;;;;;:::o;5559:434::-;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:18;;;;;;;;;;;14:286:33;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:33;;209:43;;199:71;;266:1;263;256:12;497:180;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:33;;497:180;-1:-1:-1;497:180:33:o;864:173::-;932:20;;-1:-1:-1;;;;;981:31:33;;971:42;;961:70;;1027:1;1024;1017:12;961:70;864:173;;;:::o;1042:254::-;1110:6;1118;1171:2;1159:9;1150:7;1146:23;1142:32;1139:52;;;1187:1;1184;1177:12;1139:52;1223:9;1210:23;1200:33;;1252:38;1286:2;1275:9;1271:18;1252:38;:::i;:::-;1242:48;;1042:254;;;;;:::o;1301:328::-;1378:6;1386;1394;1447:2;1435:9;1426:7;1422:23;1418:32;1415:52;;;1463:1;1460;1453:12;1415:52;1486:29;1505:9;1486:29;:::i;:::-;1476:39;;1534:38;1568:2;1557:9;1553:18;1534:38;:::i;:::-;1524:48;;1619:2;1608:9;1604:18;1591:32;1581:42;;1301:328;;;;;:::o;1634:254::-;1702:6;1710;1763:2;1751:9;1742:7;1738:23;1734:32;1731:52;;;1779:1;1776;1769:12;1731:52;1802:29;1821:9;1802:29;:::i;:::-;1792:39;1878:2;1863:18;;;;1850:32;;-1:-1:-1;;;1634:254:33:o;1893:127::-;1954:10;1949:3;1945:20;1942:1;1935:31;1985:4;1982:1;1975:15;2009:4;2006:1;1999:15;2025:995;2102:6;2110;2163:2;2151:9;2142:7;2138:23;2134:32;2131:52;;;2179:1;2176;2169:12;2131:52;2202:29;2221:9;2202:29;:::i;:::-;2192:39;;2282:2;2271:9;2267:18;2254:32;2305:18;2346:2;2338:6;2335:14;2332:34;;;2362:1;2359;2352:12;2332:34;2400:6;2389:9;2385:22;2375:32;;2445:7;2438:4;2434:2;2430:13;2426:27;2416:55;;2467:1;2464;2457:12;2416:55;2503:2;2490:16;2525:2;2521;2518:10;2515:36;;;2531:18;;:::i;:::-;2606:2;2600:9;2574:2;2660:13;;-1:-1:-1;;2656:22:33;;;2680:2;2652:31;2648:40;2636:53;;;2704:18;;;2724:22;;;2701:46;2698:72;;;2750:18;;:::i;:::-;2790:10;2786:2;2779:22;2825:2;2817:6;2810:18;2865:7;2860:2;2855;2851;2847:11;2843:20;2840:33;2837:53;;;2886:1;2883;2876:12;2837:53;2942:2;2937;2933;2929:11;2924:2;2916:6;2912:15;2899:46;2987:1;2982:2;2977;2969:6;2965:15;2961:24;2954:35;3008:6;2998:16;;;;;;;2025:995;;;;;:::o;3025:186::-;3084:6;3137:2;3125:9;3116:7;3112:23;3108:32;3105:52;;;3153:1;3150;3143:12;3105:52;3176:29;3195:9;3176:29;:::i;3398:250::-;3483:1;3493:113;3507:6;3504:1;3501:13;3493:113;;;3583:11;;;3577:18;3564:11;;;3557:39;3529:2;3522:10;3493:113;;;-1:-1:-1;;3640:1:33;3622:16;;3615:27;3398:250::o;3653:396::-;3802:2;3791:9;3784:21;3765:4;3834:6;3828:13;3877:6;3872:2;3861:9;3857:18;3850:34;3893:79;3965:6;3960:2;3949:9;3945:18;3940:2;3932:6;3928:15;3893:79;:::i;:::-;4033:2;4012:15;-1:-1:-1;;4008:29:33;3993:45;;;;4040:2;3989:54;;3653:396;-1:-1:-1;;3653:396:33:o;4262:127::-;4323:10;4318:3;4314:20;4311:1;4304:31;4354:4;4351:1;4344:15;4378:4;4375:1;4368:15;4394:128;4461:9;;;4482:11;;;4479:37;;;4496:18;;:::i;4527:125::-;4592:9;;;4613:10;;;4610:36;;;4626:18;;:::i;5530:184::-;5600:6;5653:2;5641:9;5632:7;5628:23;5624:32;5621:52;;;5669:1;5666;5659:12;5621:52;-1:-1:-1;5692:16:33;;5530:184;-1:-1:-1;5530:184:33:o;5998:287::-;6127:3;6165:6;6159:13;6181:66;6240:6;6235:3;6228:4;6220:6;6216:17;6181:66;:::i;:::-;6263:16;;;;;5998:287;-1:-1:-1;;5998:287:33:o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DISTRIBUTOR_ROLE()":"f0bd87cc","PAUSER_ROLE()":"e63ab1e9","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","balance(address)":"e3d670d7","deposit(address,uint256)":"47e7ef24","distributor()":"bfe10928","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address)":"c4d66de8","payTo(address,address,uint256)":"4026cf23","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setDistributor(address)":"75619ab5","supportsInterface(bytes4)":"01ffc9a7","tokenBalances(address)":"523fba7f","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DistributorNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldDistributor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"DistributorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISTRIBUTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"payTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"setDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Pre-funded vault that holds ERC-20 tokens for reward distributions Only the authorized Distributor can withdraw tokens to pay rewards\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"balance(address)\":{\"details\":\"Get token balance in the pool\",\"params\":{\"token\":\"ERC-20 token address\"},\"returns\":{\"_0\":\"Current balance\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"deposit(address,uint256)\":{\"details\":\"Deposit tokens into the pool (admin only)\",\"params\":{\"amount\":\"Amount to deposit\",\"token\":\"ERC-20 token address\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"payTo(address,address,uint256)\":{\"details\":\"Pay tokens to a recipient (distributor only)\",\"params\":{\"amount\":\"Amount to pay\",\"to\":\"Recipient address\",\"token\":\"ERC-20 token address\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setDistributor(address)\":{\"details\":\"Set the distributor address (admin only)\",\"params\":{\"newDistributor\":\"New distributor address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"RewardPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardPool.sol\":\"RewardPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/RewardPool.sol\":{\"keccak256\":\"0x511a2760886d6e2559295956d4558eb8d032942f8a2e013c3312e7ff95c48219\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4f8af341d79966b05a9d245b0395d6bf28205a7d3db849d284d9e1ef7f01d5a\",\"dweb:/ipfs/QmVnBQcqunpMEUA8hevXkDUj8SBfB1bX1BeSimvZRnpkuy\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8576,"contract":"contracts/RewardPool.sol:RewardPool","label":"tokenBalances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":8578,"contract":"contracts/RewardPool.sol:RewardPool","label":"distributor","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/SignedRewardDistributor.sol":{"SignedRewardDistributor":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"DeadlineExpired","type":"error"},{"inputs":[],"name":"DistributionInactive","type":"error"},{"inputs":[],"name":"DistributionNotFound","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InsufficientRemaining","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidDeadline","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"NoAmountToClaim","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"inputs":[],"name":"UnauthorizedSigner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newClaimedTotal","type":"uint256"}],"name":"Claimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"snapshotBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"DistributionCreated","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SIGNER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"distributionId","type":"uint256"},{"internalType":"bytes32","name":"postId","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"authorizedAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"total","type":"uint256"},{"internalType":"uint256","name":"snapshotBlock","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"createDistribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"dists","outputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"total","type":"uint256"},{"internalType":"uint256","name":"remaining","type":"uint256"},{"internalType":"uint256","name":"snapshotBlock","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"getClaimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getDistribution","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"total","type":"uint256"},{"internalType":"uint256","name":"remaining","type":"uint256"},{"internalType":"uint256","name":"snapshotBlock","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"internalType":"struct SignedRewardDistributor.Distribution","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardPool","type":"address"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"address","name":"signer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardPool","outputs":[{"internalType":"contract RewardPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"sweepRemainder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4786":{"entryPoint":null,"id":4786,"parameterSlots":2,"returnSlots":0},"@_8955":{"entryPoint":null,"id":8955,"parameterSlots":0,"returnSlots":0},"@_buildDomainSeparator_4833":{"entryPoint":null,"id":4833,"parameterSlots":0,"returnSlots":1},"@_disableInitializers_586":{"entryPoint":356,"id":586,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_631":{"entryPoint":594,"id":631,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_617":{"entryPoint":null,"id":617,"parameterSlots":0,"returnSlots":1},"@getStringSlot_2916":{"entryPoint":null,"id":2916,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2756":{"entryPoint":299,"id":2756,"parameterSlots":2,"returnSlots":1},"@toShortString_2658":{"entryPoint":518,"id":2658,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":718,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1088,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":803,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":658,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":636,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4277:33","nodeType":"YulBlock","src":"0:4277:33","statements":[{"nativeSrc":"6:3:33","nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nativeSrc":"46:95:33","nodeType":"YulBlock","src":"46:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:33","nodeType":"YulLiteral","src":"63:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:33","nodeType":"YulLiteral","src":"70:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:33","nodeType":"YulLiteral","src":"75:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:33","nodeType":"YulIdentifier","src":"66:3:33"},"nativeSrc":"66:20:33","nodeType":"YulFunctionCall","src":"66:20:33"}],"functionName":{"name":"mstore","nativeSrc":"56:6:33","nodeType":"YulIdentifier","src":"56:6:33"},"nativeSrc":"56:31:33","nodeType":"YulFunctionCall","src":"56:31:33"},"nativeSrc":"56:31:33","nodeType":"YulExpressionStatement","src":"56:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:33","nodeType":"YulLiteral","src":"103:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:33","nodeType":"YulLiteral","src":"106:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:33","nodeType":"YulIdentifier","src":"96:6:33"},"nativeSrc":"96:15:33","nodeType":"YulFunctionCall","src":"96:15:33"},"nativeSrc":"96:15:33","nodeType":"YulExpressionStatement","src":"96:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:33","nodeType":"YulLiteral","src":"127:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:33","nodeType":"YulLiteral","src":"130:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:33","nodeType":"YulIdentifier","src":"120:6:33"},"nativeSrc":"120:15:33","nodeType":"YulFunctionCall","src":"120:15:33"},"nativeSrc":"120:15:33","nodeType":"YulExpressionStatement","src":"120:15:33"}]},"name":"panic_error_0x41","nativeSrc":"14:127:33","nodeType":"YulFunctionDefinition","src":"14:127:33"},{"body":{"nativeSrc":"201:325:33","nodeType":"YulBlock","src":"201:325:33","statements":[{"nativeSrc":"211:22:33","nodeType":"YulAssignment","src":"211:22:33","value":{"arguments":[{"kind":"number","nativeSrc":"225:1:33","nodeType":"YulLiteral","src":"225:1:33","type":"","value":"1"},{"name":"data","nativeSrc":"228:4:33","nodeType":"YulIdentifier","src":"228:4:33"}],"functionName":{"name":"shr","nativeSrc":"221:3:33","nodeType":"YulIdentifier","src":"221:3:33"},"nativeSrc":"221:12:33","nodeType":"YulFunctionCall","src":"221:12:33"},"variableNames":[{"name":"length","nativeSrc":"211:6:33","nodeType":"YulIdentifier","src":"211:6:33"}]},{"nativeSrc":"242:38:33","nodeType":"YulVariableDeclaration","src":"242:38:33","value":{"arguments":[{"name":"data","nativeSrc":"272:4:33","nodeType":"YulIdentifier","src":"272:4:33"},{"kind":"number","nativeSrc":"278:1:33","nodeType":"YulLiteral","src":"278:1:33","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"268:3:33","nodeType":"YulIdentifier","src":"268:3:33"},"nativeSrc":"268:12:33","nodeType":"YulFunctionCall","src":"268:12:33"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"246:18:33","nodeType":"YulTypedName","src":"246:18:33","type":""}]},{"body":{"nativeSrc":"319:31:33","nodeType":"YulBlock","src":"319:31:33","statements":[{"nativeSrc":"321:27:33","nodeType":"YulAssignment","src":"321:27:33","value":{"arguments":[{"name":"length","nativeSrc":"335:6:33","nodeType":"YulIdentifier","src":"335:6:33"},{"kind":"number","nativeSrc":"343:4:33","nodeType":"YulLiteral","src":"343:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"331:3:33","nodeType":"YulIdentifier","src":"331:3:33"},"nativeSrc":"331:17:33","nodeType":"YulFunctionCall","src":"331:17:33"},"variableNames":[{"name":"length","nativeSrc":"321:6:33","nodeType":"YulIdentifier","src":"321:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"299:18:33","nodeType":"YulIdentifier","src":"299:18:33"}],"functionName":{"name":"iszero","nativeSrc":"292:6:33","nodeType":"YulIdentifier","src":"292:6:33"},"nativeSrc":"292:26:33","nodeType":"YulFunctionCall","src":"292:26:33"},"nativeSrc":"289:61:33","nodeType":"YulIf","src":"289:61:33"},{"body":{"nativeSrc":"409:111:33","nodeType":"YulBlock","src":"409:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"430:1:33","nodeType":"YulLiteral","src":"430:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"437:3:33","nodeType":"YulLiteral","src":"437:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"442:10:33","nodeType":"YulLiteral","src":"442:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"433:3:33","nodeType":"YulIdentifier","src":"433:3:33"},"nativeSrc":"433:20:33","nodeType":"YulFunctionCall","src":"433:20:33"}],"functionName":{"name":"mstore","nativeSrc":"423:6:33","nodeType":"YulIdentifier","src":"423:6:33"},"nativeSrc":"423:31:33","nodeType":"YulFunctionCall","src":"423:31:33"},"nativeSrc":"423:31:33","nodeType":"YulExpressionStatement","src":"423:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"474:1:33","nodeType":"YulLiteral","src":"474:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"477:4:33","nodeType":"YulLiteral","src":"477:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"467:6:33","nodeType":"YulIdentifier","src":"467:6:33"},"nativeSrc":"467:15:33","nodeType":"YulFunctionCall","src":"467:15:33"},"nativeSrc":"467:15:33","nodeType":"YulExpressionStatement","src":"467:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"502:1:33","nodeType":"YulLiteral","src":"502:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"505:4:33","nodeType":"YulLiteral","src":"505:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"495:6:33","nodeType":"YulIdentifier","src":"495:6:33"},"nativeSrc":"495:15:33","nodeType":"YulFunctionCall","src":"495:15:33"},"nativeSrc":"495:15:33","nodeType":"YulExpressionStatement","src":"495:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"365:18:33","nodeType":"YulIdentifier","src":"365:18:33"},{"arguments":[{"name":"length","nativeSrc":"388:6:33","nodeType":"YulIdentifier","src":"388:6:33"},{"kind":"number","nativeSrc":"396:2:33","nodeType":"YulLiteral","src":"396:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"385:2:33","nodeType":"YulIdentifier","src":"385:2:33"},"nativeSrc":"385:14:33","nodeType":"YulFunctionCall","src":"385:14:33"}],"functionName":{"name":"eq","nativeSrc":"362:2:33","nodeType":"YulIdentifier","src":"362:2:33"},"nativeSrc":"362:38:33","nodeType":"YulFunctionCall","src":"362:38:33"},"nativeSrc":"359:161:33","nodeType":"YulIf","src":"359:161:33"}]},"name":"extract_byte_array_length","nativeSrc":"146:380:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"181:4:33","nodeType":"YulTypedName","src":"181:4:33","type":""}],"returnVariables":[{"name":"length","nativeSrc":"190:6:33","nodeType":"YulTypedName","src":"190:6:33","type":""}],"src":"146:380:33"},{"body":{"nativeSrc":"587:65:33","nodeType":"YulBlock","src":"587:65:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"604:1:33","nodeType":"YulLiteral","src":"604:1:33","type":"","value":"0"},{"name":"ptr","nativeSrc":"607:3:33","nodeType":"YulIdentifier","src":"607:3:33"}],"functionName":{"name":"mstore","nativeSrc":"597:6:33","nodeType":"YulIdentifier","src":"597:6:33"},"nativeSrc":"597:14:33","nodeType":"YulFunctionCall","src":"597:14:33"},"nativeSrc":"597:14:33","nodeType":"YulExpressionStatement","src":"597:14:33"},{"nativeSrc":"620:26:33","nodeType":"YulAssignment","src":"620:26:33","value":{"arguments":[{"kind":"number","nativeSrc":"638:1:33","nodeType":"YulLiteral","src":"638:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"641:4:33","nodeType":"YulLiteral","src":"641:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"628:9:33","nodeType":"YulIdentifier","src":"628:9:33"},"nativeSrc":"628:18:33","nodeType":"YulFunctionCall","src":"628:18:33"},"variableNames":[{"name":"data","nativeSrc":"620:4:33","nodeType":"YulIdentifier","src":"620:4:33"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"531:121:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"570:3:33","nodeType":"YulTypedName","src":"570:3:33","type":""}],"returnVariables":[{"name":"data","nativeSrc":"578:4:33","nodeType":"YulTypedName","src":"578:4:33","type":""}],"src":"531:121:33"},{"body":{"nativeSrc":"738:462:33","nodeType":"YulBlock","src":"738:462:33","statements":[{"body":{"nativeSrc":"771:423:33","nodeType":"YulBlock","src":"771:423:33","statements":[{"nativeSrc":"785:11:33","nodeType":"YulVariableDeclaration","src":"785:11:33","value":{"kind":"number","nativeSrc":"795:1:33","nodeType":"YulLiteral","src":"795:1:33","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"789:2:33","nodeType":"YulTypedName","src":"789:2:33","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"816:1:33","nodeType":"YulLiteral","src":"816:1:33","type":"","value":"0"},{"name":"array","nativeSrc":"819:5:33","nodeType":"YulIdentifier","src":"819:5:33"}],"functionName":{"name":"mstore","nativeSrc":"809:6:33","nodeType":"YulIdentifier","src":"809:6:33"},"nativeSrc":"809:16:33","nodeType":"YulFunctionCall","src":"809:16:33"},"nativeSrc":"809:16:33","nodeType":"YulExpressionStatement","src":"809:16:33"},{"nativeSrc":"838:30:33","nodeType":"YulVariableDeclaration","src":"838:30:33","value":{"arguments":[{"kind":"number","nativeSrc":"860:1:33","nodeType":"YulLiteral","src":"860:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"863:4:33","nodeType":"YulLiteral","src":"863:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"850:9:33","nodeType":"YulIdentifier","src":"850:9:33"},"nativeSrc":"850:18:33","nodeType":"YulFunctionCall","src":"850:18:33"},"variables":[{"name":"data","nativeSrc":"842:4:33","nodeType":"YulTypedName","src":"842:4:33","type":""}]},{"nativeSrc":"881:57:33","nodeType":"YulVariableDeclaration","src":"881:57:33","value":{"arguments":[{"name":"data","nativeSrc":"904:4:33","nodeType":"YulIdentifier","src":"904:4:33"},{"arguments":[{"kind":"number","nativeSrc":"914:1:33","nodeType":"YulLiteral","src":"914:1:33","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"921:10:33","nodeType":"YulIdentifier","src":"921:10:33"},{"kind":"number","nativeSrc":"933:2:33","nodeType":"YulLiteral","src":"933:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"917:3:33","nodeType":"YulIdentifier","src":"917:3:33"},"nativeSrc":"917:19:33","nodeType":"YulFunctionCall","src":"917:19:33"}],"functionName":{"name":"shr","nativeSrc":"910:3:33","nodeType":"YulIdentifier","src":"910:3:33"},"nativeSrc":"910:27:33","nodeType":"YulFunctionCall","src":"910:27:33"}],"functionName":{"name":"add","nativeSrc":"900:3:33","nodeType":"YulIdentifier","src":"900:3:33"},"nativeSrc":"900:38:33","nodeType":"YulFunctionCall","src":"900:38:33"},"variables":[{"name":"deleteStart","nativeSrc":"885:11:33","nodeType":"YulTypedName","src":"885:11:33","type":""}]},{"body":{"nativeSrc":"975:23:33","nodeType":"YulBlock","src":"975:23:33","statements":[{"nativeSrc":"977:19:33","nodeType":"YulAssignment","src":"977:19:33","value":{"name":"data","nativeSrc":"992:4:33","nodeType":"YulIdentifier","src":"992:4:33"},"variableNames":[{"name":"deleteStart","nativeSrc":"977:11:33","nodeType":"YulIdentifier","src":"977:11:33"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"957:10:33","nodeType":"YulIdentifier","src":"957:10:33"},{"kind":"number","nativeSrc":"969:4:33","nodeType":"YulLiteral","src":"969:4:33","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"954:2:33","nodeType":"YulIdentifier","src":"954:2:33"},"nativeSrc":"954:20:33","nodeType":"YulFunctionCall","src":"954:20:33"},"nativeSrc":"951:47:33","nodeType":"YulIf","src":"951:47:33"},{"nativeSrc":"1011:41:33","nodeType":"YulVariableDeclaration","src":"1011:41:33","value":{"arguments":[{"name":"data","nativeSrc":"1025:4:33","nodeType":"YulIdentifier","src":"1025:4:33"},{"arguments":[{"kind":"number","nativeSrc":"1035:1:33","nodeType":"YulLiteral","src":"1035:1:33","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1042:3:33","nodeType":"YulIdentifier","src":"1042:3:33"},{"kind":"number","nativeSrc":"1047:2:33","nodeType":"YulLiteral","src":"1047:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1038:3:33","nodeType":"YulIdentifier","src":"1038:3:33"},"nativeSrc":"1038:12:33","nodeType":"YulFunctionCall","src":"1038:12:33"}],"functionName":{"name":"shr","nativeSrc":"1031:3:33","nodeType":"YulIdentifier","src":"1031:3:33"},"nativeSrc":"1031:20:33","nodeType":"YulFunctionCall","src":"1031:20:33"}],"functionName":{"name":"add","nativeSrc":"1021:3:33","nodeType":"YulIdentifier","src":"1021:3:33"},"nativeSrc":"1021:31:33","nodeType":"YulFunctionCall","src":"1021:31:33"},"variables":[{"name":"_2","nativeSrc":"1015:2:33","nodeType":"YulTypedName","src":"1015:2:33","type":""}]},{"nativeSrc":"1065:24:33","nodeType":"YulVariableDeclaration","src":"1065:24:33","value":{"name":"deleteStart","nativeSrc":"1078:11:33","nodeType":"YulIdentifier","src":"1078:11:33"},"variables":[{"name":"start","nativeSrc":"1069:5:33","nodeType":"YulTypedName","src":"1069:5:33","type":""}]},{"body":{"nativeSrc":"1163:21:33","nodeType":"YulBlock","src":"1163:21:33","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1172:5:33","nodeType":"YulIdentifier","src":"1172:5:33"},{"name":"_1","nativeSrc":"1179:2:33","nodeType":"YulIdentifier","src":"1179:2:33"}],"functionName":{"name":"sstore","nativeSrc":"1165:6:33","nodeType":"YulIdentifier","src":"1165:6:33"},"nativeSrc":"1165:17:33","nodeType":"YulFunctionCall","src":"1165:17:33"},"nativeSrc":"1165:17:33","nodeType":"YulExpressionStatement","src":"1165:17:33"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1113:5:33","nodeType":"YulIdentifier","src":"1113:5:33"},{"name":"_2","nativeSrc":"1120:2:33","nodeType":"YulIdentifier","src":"1120:2:33"}],"functionName":{"name":"lt","nativeSrc":"1110:2:33","nodeType":"YulIdentifier","src":"1110:2:33"},"nativeSrc":"1110:13:33","nodeType":"YulFunctionCall","src":"1110:13:33"},"nativeSrc":"1102:82:33","nodeType":"YulForLoop","post":{"nativeSrc":"1124:26:33","nodeType":"YulBlock","src":"1124:26:33","statements":[{"nativeSrc":"1126:22:33","nodeType":"YulAssignment","src":"1126:22:33","value":{"arguments":[{"name":"start","nativeSrc":"1139:5:33","nodeType":"YulIdentifier","src":"1139:5:33"},{"kind":"number","nativeSrc":"1146:1:33","nodeType":"YulLiteral","src":"1146:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1135:3:33","nodeType":"YulIdentifier","src":"1135:3:33"},"nativeSrc":"1135:13:33","nodeType":"YulFunctionCall","src":"1135:13:33"},"variableNames":[{"name":"start","nativeSrc":"1126:5:33","nodeType":"YulIdentifier","src":"1126:5:33"}]}]},"pre":{"nativeSrc":"1106:3:33","nodeType":"YulBlock","src":"1106:3:33","statements":[]},"src":"1102:82:33"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"754:3:33","nodeType":"YulIdentifier","src":"754:3:33"},{"kind":"number","nativeSrc":"759:2:33","nodeType":"YulLiteral","src":"759:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"751:2:33","nodeType":"YulIdentifier","src":"751:2:33"},"nativeSrc":"751:11:33","nodeType":"YulFunctionCall","src":"751:11:33"},"nativeSrc":"748:446:33","nodeType":"YulIf","src":"748:446:33"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"657:543:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"710:5:33","nodeType":"YulTypedName","src":"710:5:33","type":""},{"name":"len","nativeSrc":"717:3:33","nodeType":"YulTypedName","src":"717:3:33","type":""},{"name":"startIndex","nativeSrc":"722:10:33","nodeType":"YulTypedName","src":"722:10:33","type":""}],"src":"657:543:33"},{"body":{"nativeSrc":"1290:81:33","nodeType":"YulBlock","src":"1290:81:33","statements":[{"nativeSrc":"1300:65:33","nodeType":"YulAssignment","src":"1300:65:33","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1315:4:33","nodeType":"YulIdentifier","src":"1315:4:33"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1333:1:33","nodeType":"YulLiteral","src":"1333:1:33","type":"","value":"3"},{"name":"len","nativeSrc":"1336:3:33","nodeType":"YulIdentifier","src":"1336:3:33"}],"functionName":{"name":"shl","nativeSrc":"1329:3:33","nodeType":"YulIdentifier","src":"1329:3:33"},"nativeSrc":"1329:11:33","nodeType":"YulFunctionCall","src":"1329:11:33"},{"arguments":[{"kind":"number","nativeSrc":"1346:1:33","nodeType":"YulLiteral","src":"1346:1:33","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1342:3:33","nodeType":"YulIdentifier","src":"1342:3:33"},"nativeSrc":"1342:6:33","nodeType":"YulFunctionCall","src":"1342:6:33"}],"functionName":{"name":"shr","nativeSrc":"1325:3:33","nodeType":"YulIdentifier","src":"1325:3:33"},"nativeSrc":"1325:24:33","nodeType":"YulFunctionCall","src":"1325:24:33"}],"functionName":{"name":"not","nativeSrc":"1321:3:33","nodeType":"YulIdentifier","src":"1321:3:33"},"nativeSrc":"1321:29:33","nodeType":"YulFunctionCall","src":"1321:29:33"}],"functionName":{"name":"and","nativeSrc":"1311:3:33","nodeType":"YulIdentifier","src":"1311:3:33"},"nativeSrc":"1311:40:33","nodeType":"YulFunctionCall","src":"1311:40:33"},{"arguments":[{"kind":"number","nativeSrc":"1357:1:33","nodeType":"YulLiteral","src":"1357:1:33","type":"","value":"1"},{"name":"len","nativeSrc":"1360:3:33","nodeType":"YulIdentifier","src":"1360:3:33"}],"functionName":{"name":"shl","nativeSrc":"1353:3:33","nodeType":"YulIdentifier","src":"1353:3:33"},"nativeSrc":"1353:11:33","nodeType":"YulFunctionCall","src":"1353:11:33"}],"functionName":{"name":"or","nativeSrc":"1308:2:33","nodeType":"YulIdentifier","src":"1308:2:33"},"nativeSrc":"1308:57:33","nodeType":"YulFunctionCall","src":"1308:57:33"},"variableNames":[{"name":"used","nativeSrc":"1300:4:33","nodeType":"YulIdentifier","src":"1300:4:33"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1205:166:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1267:4:33","nodeType":"YulTypedName","src":"1267:4:33","type":""},{"name":"len","nativeSrc":"1273:3:33","nodeType":"YulTypedName","src":"1273:3:33","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1281:4:33","nodeType":"YulTypedName","src":"1281:4:33","type":""}],"src":"1205:166:33"},{"body":{"nativeSrc":"1472:1249:33","nodeType":"YulBlock","src":"1472:1249:33","statements":[{"nativeSrc":"1482:24:33","nodeType":"YulVariableDeclaration","src":"1482:24:33","value":{"arguments":[{"name":"src","nativeSrc":"1502:3:33","nodeType":"YulIdentifier","src":"1502:3:33"}],"functionName":{"name":"mload","nativeSrc":"1496:5:33","nodeType":"YulIdentifier","src":"1496:5:33"},"nativeSrc":"1496:10:33","nodeType":"YulFunctionCall","src":"1496:10:33"},"variables":[{"name":"newLen","nativeSrc":"1486:6:33","nodeType":"YulTypedName","src":"1486:6:33","type":""}]},{"body":{"nativeSrc":"1549:22:33","nodeType":"YulBlock","src":"1549:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1551:16:33","nodeType":"YulIdentifier","src":"1551:16:33"},"nativeSrc":"1551:18:33","nodeType":"YulFunctionCall","src":"1551:18:33"},"nativeSrc":"1551:18:33","nodeType":"YulExpressionStatement","src":"1551:18:33"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1521:6:33","nodeType":"YulIdentifier","src":"1521:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1537:2:33","nodeType":"YulLiteral","src":"1537:2:33","type":"","value":"64"},{"kind":"number","nativeSrc":"1541:1:33","nodeType":"YulLiteral","src":"1541:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1533:3:33","nodeType":"YulIdentifier","src":"1533:3:33"},"nativeSrc":"1533:10:33","nodeType":"YulFunctionCall","src":"1533:10:33"},{"kind":"number","nativeSrc":"1545:1:33","nodeType":"YulLiteral","src":"1545:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1529:3:33","nodeType":"YulIdentifier","src":"1529:3:33"},"nativeSrc":"1529:18:33","nodeType":"YulFunctionCall","src":"1529:18:33"}],"functionName":{"name":"gt","nativeSrc":"1518:2:33","nodeType":"YulIdentifier","src":"1518:2:33"},"nativeSrc":"1518:30:33","nodeType":"YulFunctionCall","src":"1518:30:33"},"nativeSrc":"1515:56:33","nodeType":"YulIf","src":"1515:56:33"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1624:4:33","nodeType":"YulIdentifier","src":"1624:4:33"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1662:4:33","nodeType":"YulIdentifier","src":"1662:4:33"}],"functionName":{"name":"sload","nativeSrc":"1656:5:33","nodeType":"YulIdentifier","src":"1656:5:33"},"nativeSrc":"1656:11:33","nodeType":"YulFunctionCall","src":"1656:11:33"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1630:25:33","nodeType":"YulIdentifier","src":"1630:25:33"},"nativeSrc":"1630:38:33","nodeType":"YulFunctionCall","src":"1630:38:33"},{"name":"newLen","nativeSrc":"1670:6:33","nodeType":"YulIdentifier","src":"1670:6:33"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1580:43:33","nodeType":"YulIdentifier","src":"1580:43:33"},"nativeSrc":"1580:97:33","nodeType":"YulFunctionCall","src":"1580:97:33"},"nativeSrc":"1580:97:33","nodeType":"YulExpressionStatement","src":"1580:97:33"},{"nativeSrc":"1686:18:33","nodeType":"YulVariableDeclaration","src":"1686:18:33","value":{"kind":"number","nativeSrc":"1703:1:33","nodeType":"YulLiteral","src":"1703:1:33","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1690:9:33","nodeType":"YulTypedName","src":"1690:9:33","type":""}]},{"nativeSrc":"1713:23:33","nodeType":"YulVariableDeclaration","src":"1713:23:33","value":{"kind":"number","nativeSrc":"1732:4:33","nodeType":"YulLiteral","src":"1732:4:33","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"1717:11:33","nodeType":"YulTypedName","src":"1717:11:33","type":""}]},{"nativeSrc":"1745:17:33","nodeType":"YulAssignment","src":"1745:17:33","value":{"kind":"number","nativeSrc":"1758:4:33","nodeType":"YulLiteral","src":"1758:4:33","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1745:9:33","nodeType":"YulIdentifier","src":"1745:9:33"}]},{"cases":[{"body":{"nativeSrc":"1808:656:33","nodeType":"YulBlock","src":"1808:656:33","statements":[{"nativeSrc":"1822:35:33","nodeType":"YulVariableDeclaration","src":"1822:35:33","value":{"arguments":[{"name":"newLen","nativeSrc":"1841:6:33","nodeType":"YulIdentifier","src":"1841:6:33"},{"arguments":[{"kind":"number","nativeSrc":"1853:2:33","nodeType":"YulLiteral","src":"1853:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1849:3:33","nodeType":"YulIdentifier","src":"1849:3:33"},"nativeSrc":"1849:7:33","nodeType":"YulFunctionCall","src":"1849:7:33"}],"functionName":{"name":"and","nativeSrc":"1837:3:33","nodeType":"YulIdentifier","src":"1837:3:33"},"nativeSrc":"1837:20:33","nodeType":"YulFunctionCall","src":"1837:20:33"},"variables":[{"name":"loopEnd","nativeSrc":"1826:7:33","nodeType":"YulTypedName","src":"1826:7:33","type":""}]},{"nativeSrc":"1870:49:33","nodeType":"YulVariableDeclaration","src":"1870:49:33","value":{"arguments":[{"name":"slot","nativeSrc":"1914:4:33","nodeType":"YulIdentifier","src":"1914:4:33"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"1884:29:33","nodeType":"YulIdentifier","src":"1884:29:33"},"nativeSrc":"1884:35:33","nodeType":"YulFunctionCall","src":"1884:35:33"},"variables":[{"name":"dstPtr","nativeSrc":"1874:6:33","nodeType":"YulTypedName","src":"1874:6:33","type":""}]},{"nativeSrc":"1932:10:33","nodeType":"YulVariableDeclaration","src":"1932:10:33","value":{"kind":"number","nativeSrc":"1941:1:33","nodeType":"YulLiteral","src":"1941:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1936:1:33","nodeType":"YulTypedName","src":"1936:1:33","type":""}]},{"body":{"nativeSrc":"2019:172:33","nodeType":"YulBlock","src":"2019:172:33","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2044:6:33","nodeType":"YulIdentifier","src":"2044:6:33"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2062:3:33","nodeType":"YulIdentifier","src":"2062:3:33"},{"name":"srcOffset","nativeSrc":"2067:9:33","nodeType":"YulIdentifier","src":"2067:9:33"}],"functionName":{"name":"add","nativeSrc":"2058:3:33","nodeType":"YulIdentifier","src":"2058:3:33"},"nativeSrc":"2058:19:33","nodeType":"YulFunctionCall","src":"2058:19:33"}],"functionName":{"name":"mload","nativeSrc":"2052:5:33","nodeType":"YulIdentifier","src":"2052:5:33"},"nativeSrc":"2052:26:33","nodeType":"YulFunctionCall","src":"2052:26:33"}],"functionName":{"name":"sstore","nativeSrc":"2037:6:33","nodeType":"YulIdentifier","src":"2037:6:33"},"nativeSrc":"2037:42:33","nodeType":"YulFunctionCall","src":"2037:42:33"},"nativeSrc":"2037:42:33","nodeType":"YulExpressionStatement","src":"2037:42:33"},{"nativeSrc":"2096:24:33","nodeType":"YulAssignment","src":"2096:24:33","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2110:6:33","nodeType":"YulIdentifier","src":"2110:6:33"},{"kind":"number","nativeSrc":"2118:1:33","nodeType":"YulLiteral","src":"2118:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2106:3:33","nodeType":"YulIdentifier","src":"2106:3:33"},"nativeSrc":"2106:14:33","nodeType":"YulFunctionCall","src":"2106:14:33"},"variableNames":[{"name":"dstPtr","nativeSrc":"2096:6:33","nodeType":"YulIdentifier","src":"2096:6:33"}]},{"nativeSrc":"2137:40:33","nodeType":"YulAssignment","src":"2137:40:33","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2154:9:33","nodeType":"YulIdentifier","src":"2154:9:33"},{"name":"srcOffset_1","nativeSrc":"2165:11:33","nodeType":"YulIdentifier","src":"2165:11:33"}],"functionName":{"name":"add","nativeSrc":"2150:3:33","nodeType":"YulIdentifier","src":"2150:3:33"},"nativeSrc":"2150:27:33","nodeType":"YulFunctionCall","src":"2150:27:33"},"variableNames":[{"name":"srcOffset","nativeSrc":"2137:9:33","nodeType":"YulIdentifier","src":"2137:9:33"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1966:1:33","nodeType":"YulIdentifier","src":"1966:1:33"},{"name":"loopEnd","nativeSrc":"1969:7:33","nodeType":"YulIdentifier","src":"1969:7:33"}],"functionName":{"name":"lt","nativeSrc":"1963:2:33","nodeType":"YulIdentifier","src":"1963:2:33"},"nativeSrc":"1963:14:33","nodeType":"YulFunctionCall","src":"1963:14:33"},"nativeSrc":"1955:236:33","nodeType":"YulForLoop","post":{"nativeSrc":"1978:28:33","nodeType":"YulBlock","src":"1978:28:33","statements":[{"nativeSrc":"1980:24:33","nodeType":"YulAssignment","src":"1980:24:33","value":{"arguments":[{"name":"i","nativeSrc":"1989:1:33","nodeType":"YulIdentifier","src":"1989:1:33"},{"name":"srcOffset_1","nativeSrc":"1992:11:33","nodeType":"YulIdentifier","src":"1992:11:33"}],"functionName":{"name":"add","nativeSrc":"1985:3:33","nodeType":"YulIdentifier","src":"1985:3:33"},"nativeSrc":"1985:19:33","nodeType":"YulFunctionCall","src":"1985:19:33"},"variableNames":[{"name":"i","nativeSrc":"1980:1:33","nodeType":"YulIdentifier","src":"1980:1:33"}]}]},"pre":{"nativeSrc":"1959:3:33","nodeType":"YulBlock","src":"1959:3:33","statements":[]},"src":"1955:236:33"},{"body":{"nativeSrc":"2239:166:33","nodeType":"YulBlock","src":"2239:166:33","statements":[{"nativeSrc":"2257:43:33","nodeType":"YulVariableDeclaration","src":"2257:43:33","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2284:3:33","nodeType":"YulIdentifier","src":"2284:3:33"},{"name":"srcOffset","nativeSrc":"2289:9:33","nodeType":"YulIdentifier","src":"2289:9:33"}],"functionName":{"name":"add","nativeSrc":"2280:3:33","nodeType":"YulIdentifier","src":"2280:3:33"},"nativeSrc":"2280:19:33","nodeType":"YulFunctionCall","src":"2280:19:33"}],"functionName":{"name":"mload","nativeSrc":"2274:5:33","nodeType":"YulIdentifier","src":"2274:5:33"},"nativeSrc":"2274:26:33","nodeType":"YulFunctionCall","src":"2274:26:33"},"variables":[{"name":"lastValue","nativeSrc":"2261:9:33","nodeType":"YulTypedName","src":"2261:9:33","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2324:6:33","nodeType":"YulIdentifier","src":"2324:6:33"},{"arguments":[{"name":"lastValue","nativeSrc":"2336:9:33","nodeType":"YulIdentifier","src":"2336:9:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2363:1:33","nodeType":"YulLiteral","src":"2363:1:33","type":"","value":"3"},{"name":"newLen","nativeSrc":"2366:6:33","nodeType":"YulIdentifier","src":"2366:6:33"}],"functionName":{"name":"shl","nativeSrc":"2359:3:33","nodeType":"YulIdentifier","src":"2359:3:33"},"nativeSrc":"2359:14:33","nodeType":"YulFunctionCall","src":"2359:14:33"},{"kind":"number","nativeSrc":"2375:3:33","nodeType":"YulLiteral","src":"2375:3:33","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2355:3:33","nodeType":"YulIdentifier","src":"2355:3:33"},"nativeSrc":"2355:24:33","nodeType":"YulFunctionCall","src":"2355:24:33"},{"arguments":[{"kind":"number","nativeSrc":"2385:1:33","nodeType":"YulLiteral","src":"2385:1:33","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2381:3:33","nodeType":"YulIdentifier","src":"2381:3:33"},"nativeSrc":"2381:6:33","nodeType":"YulFunctionCall","src":"2381:6:33"}],"functionName":{"name":"shr","nativeSrc":"2351:3:33","nodeType":"YulIdentifier","src":"2351:3:33"},"nativeSrc":"2351:37:33","nodeType":"YulFunctionCall","src":"2351:37:33"}],"functionName":{"name":"not","nativeSrc":"2347:3:33","nodeType":"YulIdentifier","src":"2347:3:33"},"nativeSrc":"2347:42:33","nodeType":"YulFunctionCall","src":"2347:42:33"}],"functionName":{"name":"and","nativeSrc":"2332:3:33","nodeType":"YulIdentifier","src":"2332:3:33"},"nativeSrc":"2332:58:33","nodeType":"YulFunctionCall","src":"2332:58:33"}],"functionName":{"name":"sstore","nativeSrc":"2317:6:33","nodeType":"YulIdentifier","src":"2317:6:33"},"nativeSrc":"2317:74:33","nodeType":"YulFunctionCall","src":"2317:74:33"},"nativeSrc":"2317:74:33","nodeType":"YulExpressionStatement","src":"2317:74:33"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2210:7:33","nodeType":"YulIdentifier","src":"2210:7:33"},{"name":"newLen","nativeSrc":"2219:6:33","nodeType":"YulIdentifier","src":"2219:6:33"}],"functionName":{"name":"lt","nativeSrc":"2207:2:33","nodeType":"YulIdentifier","src":"2207:2:33"},"nativeSrc":"2207:19:33","nodeType":"YulFunctionCall","src":"2207:19:33"},"nativeSrc":"2204:201:33","nodeType":"YulIf","src":"2204:201:33"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2425:4:33","nodeType":"YulIdentifier","src":"2425:4:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2439:1:33","nodeType":"YulLiteral","src":"2439:1:33","type":"","value":"1"},{"name":"newLen","nativeSrc":"2442:6:33","nodeType":"YulIdentifier","src":"2442:6:33"}],"functionName":{"name":"shl","nativeSrc":"2435:3:33","nodeType":"YulIdentifier","src":"2435:3:33"},"nativeSrc":"2435:14:33","nodeType":"YulFunctionCall","src":"2435:14:33"},{"kind":"number","nativeSrc":"2451:1:33","nodeType":"YulLiteral","src":"2451:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2431:3:33","nodeType":"YulIdentifier","src":"2431:3:33"},"nativeSrc":"2431:22:33","nodeType":"YulFunctionCall","src":"2431:22:33"}],"functionName":{"name":"sstore","nativeSrc":"2418:6:33","nodeType":"YulIdentifier","src":"2418:6:33"},"nativeSrc":"2418:36:33","nodeType":"YulFunctionCall","src":"2418:36:33"},"nativeSrc":"2418:36:33","nodeType":"YulExpressionStatement","src":"2418:36:33"}]},"nativeSrc":"1801:663:33","nodeType":"YulCase","src":"1801:663:33","value":{"kind":"number","nativeSrc":"1806:1:33","nodeType":"YulLiteral","src":"1806:1:33","type":"","value":"1"}},{"body":{"nativeSrc":"2481:234:33","nodeType":"YulBlock","src":"2481:234:33","statements":[{"nativeSrc":"2495:14:33","nodeType":"YulVariableDeclaration","src":"2495:14:33","value":{"kind":"number","nativeSrc":"2508:1:33","nodeType":"YulLiteral","src":"2508:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2499:5:33","nodeType":"YulTypedName","src":"2499:5:33","type":""}]},{"body":{"nativeSrc":"2544:67:33","nodeType":"YulBlock","src":"2544:67:33","statements":[{"nativeSrc":"2562:35:33","nodeType":"YulAssignment","src":"2562:35:33","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2581:3:33","nodeType":"YulIdentifier","src":"2581:3:33"},{"name":"srcOffset","nativeSrc":"2586:9:33","nodeType":"YulIdentifier","src":"2586:9:33"}],"functionName":{"name":"add","nativeSrc":"2577:3:33","nodeType":"YulIdentifier","src":"2577:3:33"},"nativeSrc":"2577:19:33","nodeType":"YulFunctionCall","src":"2577:19:33"}],"functionName":{"name":"mload","nativeSrc":"2571:5:33","nodeType":"YulIdentifier","src":"2571:5:33"},"nativeSrc":"2571:26:33","nodeType":"YulFunctionCall","src":"2571:26:33"},"variableNames":[{"name":"value","nativeSrc":"2562:5:33","nodeType":"YulIdentifier","src":"2562:5:33"}]}]},"condition":{"name":"newLen","nativeSrc":"2525:6:33","nodeType":"YulIdentifier","src":"2525:6:33"},"nativeSrc":"2522:89:33","nodeType":"YulIf","src":"2522:89:33"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2631:4:33","nodeType":"YulIdentifier","src":"2631:4:33"},{"arguments":[{"name":"value","nativeSrc":"2690:5:33","nodeType":"YulIdentifier","src":"2690:5:33"},{"name":"newLen","nativeSrc":"2697:6:33","nodeType":"YulIdentifier","src":"2697:6:33"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2637:52:33","nodeType":"YulIdentifier","src":"2637:52:33"},"nativeSrc":"2637:67:33","nodeType":"YulFunctionCall","src":"2637:67:33"}],"functionName":{"name":"sstore","nativeSrc":"2624:6:33","nodeType":"YulIdentifier","src":"2624:6:33"},"nativeSrc":"2624:81:33","nodeType":"YulFunctionCall","src":"2624:81:33"},"nativeSrc":"2624:81:33","nodeType":"YulExpressionStatement","src":"2624:81:33"}]},"nativeSrc":"2473:242:33","nodeType":"YulCase","src":"2473:242:33","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"1781:6:33","nodeType":"YulIdentifier","src":"1781:6:33"},{"kind":"number","nativeSrc":"1789:2:33","nodeType":"YulLiteral","src":"1789:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1778:2:33","nodeType":"YulIdentifier","src":"1778:2:33"},"nativeSrc":"1778:14:33","nodeType":"YulFunctionCall","src":"1778:14:33"},"nativeSrc":"1771:944:33","nodeType":"YulSwitch","src":"1771:944:33"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1376:1345:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1457:4:33","nodeType":"YulTypedName","src":"1457:4:33","type":""},{"name":"src","nativeSrc":"1463:3:33","nodeType":"YulTypedName","src":"1463:3:33","type":""}],"src":"1376:1345:33"},{"body":{"nativeSrc":"2939:276:33","nodeType":"YulBlock","src":"2939:276:33","statements":[{"nativeSrc":"2949:27:33","nodeType":"YulAssignment","src":"2949:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2961:9:33","nodeType":"YulIdentifier","src":"2961:9:33"},{"kind":"number","nativeSrc":"2972:3:33","nodeType":"YulLiteral","src":"2972:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"2957:3:33","nodeType":"YulIdentifier","src":"2957:3:33"},"nativeSrc":"2957:19:33","nodeType":"YulFunctionCall","src":"2957:19:33"},"variableNames":[{"name":"tail","nativeSrc":"2949:4:33","nodeType":"YulIdentifier","src":"2949:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2992:9:33","nodeType":"YulIdentifier","src":"2992:9:33"},{"name":"value0","nativeSrc":"3003:6:33","nodeType":"YulIdentifier","src":"3003:6:33"}],"functionName":{"name":"mstore","nativeSrc":"2985:6:33","nodeType":"YulIdentifier","src":"2985:6:33"},"nativeSrc":"2985:25:33","nodeType":"YulFunctionCall","src":"2985:25:33"},"nativeSrc":"2985:25:33","nodeType":"YulExpressionStatement","src":"2985:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3030:9:33","nodeType":"YulIdentifier","src":"3030:9:33"},{"kind":"number","nativeSrc":"3041:2:33","nodeType":"YulLiteral","src":"3041:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3026:3:33","nodeType":"YulIdentifier","src":"3026:3:33"},"nativeSrc":"3026:18:33","nodeType":"YulFunctionCall","src":"3026:18:33"},{"name":"value1","nativeSrc":"3046:6:33","nodeType":"YulIdentifier","src":"3046:6:33"}],"functionName":{"name":"mstore","nativeSrc":"3019:6:33","nodeType":"YulIdentifier","src":"3019:6:33"},"nativeSrc":"3019:34:33","nodeType":"YulFunctionCall","src":"3019:34:33"},"nativeSrc":"3019:34:33","nodeType":"YulExpressionStatement","src":"3019:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3073:9:33","nodeType":"YulIdentifier","src":"3073:9:33"},{"kind":"number","nativeSrc":"3084:2:33","nodeType":"YulLiteral","src":"3084:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3069:3:33","nodeType":"YulIdentifier","src":"3069:3:33"},"nativeSrc":"3069:18:33","nodeType":"YulFunctionCall","src":"3069:18:33"},{"name":"value2","nativeSrc":"3089:6:33","nodeType":"YulIdentifier","src":"3089:6:33"}],"functionName":{"name":"mstore","nativeSrc":"3062:6:33","nodeType":"YulIdentifier","src":"3062:6:33"},"nativeSrc":"3062:34:33","nodeType":"YulFunctionCall","src":"3062:34:33"},"nativeSrc":"3062:34:33","nodeType":"YulExpressionStatement","src":"3062:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3116:9:33","nodeType":"YulIdentifier","src":"3116:9:33"},{"kind":"number","nativeSrc":"3127:2:33","nodeType":"YulLiteral","src":"3127:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3112:3:33","nodeType":"YulIdentifier","src":"3112:3:33"},"nativeSrc":"3112:18:33","nodeType":"YulFunctionCall","src":"3112:18:33"},{"name":"value3","nativeSrc":"3132:6:33","nodeType":"YulIdentifier","src":"3132:6:33"}],"functionName":{"name":"mstore","nativeSrc":"3105:6:33","nodeType":"YulIdentifier","src":"3105:6:33"},"nativeSrc":"3105:34:33","nodeType":"YulFunctionCall","src":"3105:34:33"},"nativeSrc":"3105:34:33","nodeType":"YulExpressionStatement","src":"3105:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3159:9:33","nodeType":"YulIdentifier","src":"3159:9:33"},{"kind":"number","nativeSrc":"3170:3:33","nodeType":"YulLiteral","src":"3170:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3155:3:33","nodeType":"YulIdentifier","src":"3155:3:33"},"nativeSrc":"3155:19:33","nodeType":"YulFunctionCall","src":"3155:19:33"},{"arguments":[{"name":"value4","nativeSrc":"3180:6:33","nodeType":"YulIdentifier","src":"3180:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3196:3:33","nodeType":"YulLiteral","src":"3196:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"3201:1:33","nodeType":"YulLiteral","src":"3201:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3192:3:33","nodeType":"YulIdentifier","src":"3192:3:33"},"nativeSrc":"3192:11:33","nodeType":"YulFunctionCall","src":"3192:11:33"},{"kind":"number","nativeSrc":"3205:1:33","nodeType":"YulLiteral","src":"3205:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3188:3:33","nodeType":"YulIdentifier","src":"3188:3:33"},"nativeSrc":"3188:19:33","nodeType":"YulFunctionCall","src":"3188:19:33"}],"functionName":{"name":"and","nativeSrc":"3176:3:33","nodeType":"YulIdentifier","src":"3176:3:33"},"nativeSrc":"3176:32:33","nodeType":"YulFunctionCall","src":"3176:32:33"}],"functionName":{"name":"mstore","nativeSrc":"3148:6:33","nodeType":"YulIdentifier","src":"3148:6:33"},"nativeSrc":"3148:61:33","nodeType":"YulFunctionCall","src":"3148:61:33"},"nativeSrc":"3148:61:33","nodeType":"YulExpressionStatement","src":"3148:61:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"2726:489:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2876:9:33","nodeType":"YulTypedName","src":"2876:9:33","type":""},{"name":"value4","nativeSrc":"2887:6:33","nodeType":"YulTypedName","src":"2887:6:33","type":""},{"name":"value3","nativeSrc":"2895:6:33","nodeType":"YulTypedName","src":"2895:6:33","type":""},{"name":"value2","nativeSrc":"2903:6:33","nodeType":"YulTypedName","src":"2903:6:33","type":""},{"name":"value1","nativeSrc":"2911:6:33","nodeType":"YulTypedName","src":"2911:6:33","type":""},{"name":"value0","nativeSrc":"2919:6:33","nodeType":"YulTypedName","src":"2919:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2930:4:33","nodeType":"YulTypedName","src":"2930:4:33","type":""}],"src":"2726:489:33"},{"body":{"nativeSrc":"3319:101:33","nodeType":"YulBlock","src":"3319:101:33","statements":[{"nativeSrc":"3329:26:33","nodeType":"YulAssignment","src":"3329:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3341:9:33","nodeType":"YulIdentifier","src":"3341:9:33"},{"kind":"number","nativeSrc":"3352:2:33","nodeType":"YulLiteral","src":"3352:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3337:3:33","nodeType":"YulIdentifier","src":"3337:3:33"},"nativeSrc":"3337:18:33","nodeType":"YulFunctionCall","src":"3337:18:33"},"variableNames":[{"name":"tail","nativeSrc":"3329:4:33","nodeType":"YulIdentifier","src":"3329:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3371:9:33","nodeType":"YulIdentifier","src":"3371:9:33"},{"arguments":[{"name":"value0","nativeSrc":"3386:6:33","nodeType":"YulIdentifier","src":"3386:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3402:2:33","nodeType":"YulLiteral","src":"3402:2:33","type":"","value":"64"},{"kind":"number","nativeSrc":"3406:1:33","nodeType":"YulLiteral","src":"3406:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3398:3:33","nodeType":"YulIdentifier","src":"3398:3:33"},"nativeSrc":"3398:10:33","nodeType":"YulFunctionCall","src":"3398:10:33"},{"kind":"number","nativeSrc":"3410:1:33","nodeType":"YulLiteral","src":"3410:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3394:3:33","nodeType":"YulIdentifier","src":"3394:3:33"},"nativeSrc":"3394:18:33","nodeType":"YulFunctionCall","src":"3394:18:33"}],"functionName":{"name":"and","nativeSrc":"3382:3:33","nodeType":"YulIdentifier","src":"3382:3:33"},"nativeSrc":"3382:31:33","nodeType":"YulFunctionCall","src":"3382:31:33"}],"functionName":{"name":"mstore","nativeSrc":"3364:6:33","nodeType":"YulIdentifier","src":"3364:6:33"},"nativeSrc":"3364:50:33","nodeType":"YulFunctionCall","src":"3364:50:33"},"nativeSrc":"3364:50:33","nodeType":"YulExpressionStatement","src":"3364:50:33"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"3220:200:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3288:9:33","nodeType":"YulTypedName","src":"3288:9:33","type":""},{"name":"value0","nativeSrc":"3299:6:33","nodeType":"YulTypedName","src":"3299:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3310:4:33","nodeType":"YulTypedName","src":"3310:4:33","type":""}],"src":"3220:200:33"},{"body":{"nativeSrc":"3546:427:33","nodeType":"YulBlock","src":"3546:427:33","statements":[{"nativeSrc":"3556:12:33","nodeType":"YulVariableDeclaration","src":"3556:12:33","value":{"kind":"number","nativeSrc":"3566:2:33","nodeType":"YulLiteral","src":"3566:2:33","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"3560:2:33","nodeType":"YulTypedName","src":"3560:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3584:9:33","nodeType":"YulIdentifier","src":"3584:9:33"},{"kind":"number","nativeSrc":"3595:2:33","nodeType":"YulLiteral","src":"3595:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3577:6:33","nodeType":"YulIdentifier","src":"3577:6:33"},"nativeSrc":"3577:21:33","nodeType":"YulFunctionCall","src":"3577:21:33"},"nativeSrc":"3577:21:33","nodeType":"YulExpressionStatement","src":"3577:21:33"},{"nativeSrc":"3607:27:33","nodeType":"YulVariableDeclaration","src":"3607:27:33","value":{"arguments":[{"name":"value0","nativeSrc":"3627:6:33","nodeType":"YulIdentifier","src":"3627:6:33"}],"functionName":{"name":"mload","nativeSrc":"3621:5:33","nodeType":"YulIdentifier","src":"3621:5:33"},"nativeSrc":"3621:13:33","nodeType":"YulFunctionCall","src":"3621:13:33"},"variables":[{"name":"length","nativeSrc":"3611:6:33","nodeType":"YulTypedName","src":"3611:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3654:9:33","nodeType":"YulIdentifier","src":"3654:9:33"},{"kind":"number","nativeSrc":"3665:2:33","nodeType":"YulLiteral","src":"3665:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3650:3:33","nodeType":"YulIdentifier","src":"3650:3:33"},"nativeSrc":"3650:18:33","nodeType":"YulFunctionCall","src":"3650:18:33"},{"name":"length","nativeSrc":"3670:6:33","nodeType":"YulIdentifier","src":"3670:6:33"}],"functionName":{"name":"mstore","nativeSrc":"3643:6:33","nodeType":"YulIdentifier","src":"3643:6:33"},"nativeSrc":"3643:34:33","nodeType":"YulFunctionCall","src":"3643:34:33"},"nativeSrc":"3643:34:33","nodeType":"YulExpressionStatement","src":"3643:34:33"},{"nativeSrc":"3686:10:33","nodeType":"YulVariableDeclaration","src":"3686:10:33","value":{"kind":"number","nativeSrc":"3695:1:33","nodeType":"YulLiteral","src":"3695:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3690:1:33","nodeType":"YulTypedName","src":"3690:1:33","type":""}]},{"body":{"nativeSrc":"3755:90:33","nodeType":"YulBlock","src":"3755:90:33","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3784:9:33","nodeType":"YulIdentifier","src":"3784:9:33"},{"name":"i","nativeSrc":"3795:1:33","nodeType":"YulIdentifier","src":"3795:1:33"}],"functionName":{"name":"add","nativeSrc":"3780:3:33","nodeType":"YulIdentifier","src":"3780:3:33"},"nativeSrc":"3780:17:33","nodeType":"YulFunctionCall","src":"3780:17:33"},{"kind":"number","nativeSrc":"3799:2:33","nodeType":"YulLiteral","src":"3799:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3776:3:33","nodeType":"YulIdentifier","src":"3776:3:33"},"nativeSrc":"3776:26:33","nodeType":"YulFunctionCall","src":"3776:26:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"3818:6:33","nodeType":"YulIdentifier","src":"3818:6:33"},{"name":"i","nativeSrc":"3826:1:33","nodeType":"YulIdentifier","src":"3826:1:33"}],"functionName":{"name":"add","nativeSrc":"3814:3:33","nodeType":"YulIdentifier","src":"3814:3:33"},"nativeSrc":"3814:14:33","nodeType":"YulFunctionCall","src":"3814:14:33"},{"name":"_1","nativeSrc":"3830:2:33","nodeType":"YulIdentifier","src":"3830:2:33"}],"functionName":{"name":"add","nativeSrc":"3810:3:33","nodeType":"YulIdentifier","src":"3810:3:33"},"nativeSrc":"3810:23:33","nodeType":"YulFunctionCall","src":"3810:23:33"}],"functionName":{"name":"mload","nativeSrc":"3804:5:33","nodeType":"YulIdentifier","src":"3804:5:33"},"nativeSrc":"3804:30:33","nodeType":"YulFunctionCall","src":"3804:30:33"}],"functionName":{"name":"mstore","nativeSrc":"3769:6:33","nodeType":"YulIdentifier","src":"3769:6:33"},"nativeSrc":"3769:66:33","nodeType":"YulFunctionCall","src":"3769:66:33"},"nativeSrc":"3769:66:33","nodeType":"YulExpressionStatement","src":"3769:66:33"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3716:1:33","nodeType":"YulIdentifier","src":"3716:1:33"},{"name":"length","nativeSrc":"3719:6:33","nodeType":"YulIdentifier","src":"3719:6:33"}],"functionName":{"name":"lt","nativeSrc":"3713:2:33","nodeType":"YulIdentifier","src":"3713:2:33"},"nativeSrc":"3713:13:33","nodeType":"YulFunctionCall","src":"3713:13:33"},"nativeSrc":"3705:140:33","nodeType":"YulForLoop","post":{"nativeSrc":"3727:19:33","nodeType":"YulBlock","src":"3727:19:33","statements":[{"nativeSrc":"3729:15:33","nodeType":"YulAssignment","src":"3729:15:33","value":{"arguments":[{"name":"i","nativeSrc":"3738:1:33","nodeType":"YulIdentifier","src":"3738:1:33"},{"name":"_1","nativeSrc":"3741:2:33","nodeType":"YulIdentifier","src":"3741:2:33"}],"functionName":{"name":"add","nativeSrc":"3734:3:33","nodeType":"YulIdentifier","src":"3734:3:33"},"nativeSrc":"3734:10:33","nodeType":"YulFunctionCall","src":"3734:10:33"},"variableNames":[{"name":"i","nativeSrc":"3729:1:33","nodeType":"YulIdentifier","src":"3729:1:33"}]}]},"pre":{"nativeSrc":"3709:3:33","nodeType":"YulBlock","src":"3709:3:33","statements":[]},"src":"3705:140:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3869:9:33","nodeType":"YulIdentifier","src":"3869:9:33"},{"name":"length","nativeSrc":"3880:6:33","nodeType":"YulIdentifier","src":"3880:6:33"}],"functionName":{"name":"add","nativeSrc":"3865:3:33","nodeType":"YulIdentifier","src":"3865:3:33"},"nativeSrc":"3865:22:33","nodeType":"YulFunctionCall","src":"3865:22:33"},{"kind":"number","nativeSrc":"3889:2:33","nodeType":"YulLiteral","src":"3889:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3861:3:33","nodeType":"YulIdentifier","src":"3861:3:33"},"nativeSrc":"3861:31:33","nodeType":"YulFunctionCall","src":"3861:31:33"},{"kind":"number","nativeSrc":"3894:1:33","nodeType":"YulLiteral","src":"3894:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3854:6:33","nodeType":"YulIdentifier","src":"3854:6:33"},"nativeSrc":"3854:42:33","nodeType":"YulFunctionCall","src":"3854:42:33"},"nativeSrc":"3854:42:33","nodeType":"YulExpressionStatement","src":"3854:42:33"},{"nativeSrc":"3905:62:33","nodeType":"YulAssignment","src":"3905:62:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3921:9:33","nodeType":"YulIdentifier","src":"3921:9:33"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3940:6:33","nodeType":"YulIdentifier","src":"3940:6:33"},{"kind":"number","nativeSrc":"3948:2:33","nodeType":"YulLiteral","src":"3948:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3936:3:33","nodeType":"YulIdentifier","src":"3936:3:33"},"nativeSrc":"3936:15:33","nodeType":"YulFunctionCall","src":"3936:15:33"},{"arguments":[{"kind":"number","nativeSrc":"3957:2:33","nodeType":"YulLiteral","src":"3957:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3953:3:33","nodeType":"YulIdentifier","src":"3953:3:33"},"nativeSrc":"3953:7:33","nodeType":"YulFunctionCall","src":"3953:7:33"}],"functionName":{"name":"and","nativeSrc":"3932:3:33","nodeType":"YulIdentifier","src":"3932:3:33"},"nativeSrc":"3932:29:33","nodeType":"YulFunctionCall","src":"3932:29:33"}],"functionName":{"name":"add","nativeSrc":"3917:3:33","nodeType":"YulIdentifier","src":"3917:3:33"},"nativeSrc":"3917:45:33","nodeType":"YulFunctionCall","src":"3917:45:33"},{"kind":"number","nativeSrc":"3964:2:33","nodeType":"YulLiteral","src":"3964:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3913:3:33","nodeType":"YulIdentifier","src":"3913:3:33"},"nativeSrc":"3913:54:33","nodeType":"YulFunctionCall","src":"3913:54:33"},"variableNames":[{"name":"tail","nativeSrc":"3905:4:33","nodeType":"YulIdentifier","src":"3905:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3425:548:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3515:9:33","nodeType":"YulTypedName","src":"3515:9:33","type":""},{"name":"value0","nativeSrc":"3526:6:33","nodeType":"YulTypedName","src":"3526:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3537:4:33","nodeType":"YulTypedName","src":"3537:4:33","type":""}],"src":"3425:548:33"},{"body":{"nativeSrc":"4072:203:33","nodeType":"YulBlock","src":"4072:203:33","statements":[{"nativeSrc":"4082:26:33","nodeType":"YulVariableDeclaration","src":"4082:26:33","value":{"arguments":[{"name":"array","nativeSrc":"4102:5:33","nodeType":"YulIdentifier","src":"4102:5:33"}],"functionName":{"name":"mload","nativeSrc":"4096:5:33","nodeType":"YulIdentifier","src":"4096:5:33"},"nativeSrc":"4096:12:33","nodeType":"YulFunctionCall","src":"4096:12:33"},"variables":[{"name":"length","nativeSrc":"4086:6:33","nodeType":"YulTypedName","src":"4086:6:33","type":""}]},{"nativeSrc":"4117:32:33","nodeType":"YulAssignment","src":"4117:32:33","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"4136:5:33","nodeType":"YulIdentifier","src":"4136:5:33"},{"kind":"number","nativeSrc":"4143:4:33","nodeType":"YulLiteral","src":"4143:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4132:3:33","nodeType":"YulIdentifier","src":"4132:3:33"},"nativeSrc":"4132:16:33","nodeType":"YulFunctionCall","src":"4132:16:33"}],"functionName":{"name":"mload","nativeSrc":"4126:5:33","nodeType":"YulIdentifier","src":"4126:5:33"},"nativeSrc":"4126:23:33","nodeType":"YulFunctionCall","src":"4126:23:33"},"variableNames":[{"name":"value","nativeSrc":"4117:5:33","nodeType":"YulIdentifier","src":"4117:5:33"}]},{"body":{"nativeSrc":"4186:83:33","nodeType":"YulBlock","src":"4186:83:33","statements":[{"nativeSrc":"4200:59:33","nodeType":"YulAssignment","src":"4200:59:33","value":{"arguments":[{"name":"value","nativeSrc":"4213:5:33","nodeType":"YulIdentifier","src":"4213:5:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4228:1:33","nodeType":"YulLiteral","src":"4228:1:33","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"4235:4:33","nodeType":"YulLiteral","src":"4235:4:33","type":"","value":"0x20"},{"name":"length","nativeSrc":"4241:6:33","nodeType":"YulIdentifier","src":"4241:6:33"}],"functionName":{"name":"sub","nativeSrc":"4231:3:33","nodeType":"YulIdentifier","src":"4231:3:33"},"nativeSrc":"4231:17:33","nodeType":"YulFunctionCall","src":"4231:17:33"}],"functionName":{"name":"shl","nativeSrc":"4224:3:33","nodeType":"YulIdentifier","src":"4224:3:33"},"nativeSrc":"4224:25:33","nodeType":"YulFunctionCall","src":"4224:25:33"},{"arguments":[{"kind":"number","nativeSrc":"4255:1:33","nodeType":"YulLiteral","src":"4255:1:33","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4251:3:33","nodeType":"YulIdentifier","src":"4251:3:33"},"nativeSrc":"4251:6:33","nodeType":"YulFunctionCall","src":"4251:6:33"}],"functionName":{"name":"shl","nativeSrc":"4220:3:33","nodeType":"YulIdentifier","src":"4220:3:33"},"nativeSrc":"4220:38:33","nodeType":"YulFunctionCall","src":"4220:38:33"}],"functionName":{"name":"and","nativeSrc":"4209:3:33","nodeType":"YulIdentifier","src":"4209:3:33"},"nativeSrc":"4209:50:33","nodeType":"YulFunctionCall","src":"4209:50:33"},"variableNames":[{"name":"value","nativeSrc":"4200:5:33","nodeType":"YulIdentifier","src":"4200:5:33"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4164:6:33","nodeType":"YulIdentifier","src":"4164:6:33"},{"kind":"number","nativeSrc":"4172:4:33","nodeType":"YulLiteral","src":"4172:4:33","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"4161:2:33","nodeType":"YulIdentifier","src":"4161:2:33"},"nativeSrc":"4161:16:33","nodeType":"YulFunctionCall","src":"4161:16:33"},"nativeSrc":"4158:111:33","nodeType":"YulIf","src":"4158:111:33"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"3978:297:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4052:5:33","nodeType":"YulTypedName","src":"4052:5:33","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4062:5:33","nodeType":"YulTypedName","src":"4062:5:33","type":""}],"src":"3978:297:33"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"610180604052306080523480156200001657600080fd5b50604080518082018252601781527f5369676e65645265776172644469737472696275746f72000000000000000000602080830191909152825180840190935260018352603160f81b9083015290620000718260006200012b565b61014052620000828160016200012b565b61016052815160208084019190912061010052815190820120610120524660c052620001126101005161012051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60a05250503060e0526200012562000164565b62000465565b60006020835110156200014b57620001438362000206565b90506200015e565b8162000158848262000323565b5060ff90505b92915050565b60006200017062000252565b805490915068010000000000000000900460ff1615620001a35760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620002035780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b600080829050601f815111156200023d578260405163305a27a960e01b8152600401620002349190620003ef565b60405180910390fd5b80516200024a8262000440565b179392505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006200015e565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002a757607f821691505b602082108103620002c857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031e576000816000526020600020601f850160051c81016020861015620002f95750805b601f850160051c820191505b818110156200031a5782815560010162000305565b5050505b505050565b81516001600160401b038111156200033f576200033f6200027c565b620003578162000350845462000292565b84620002ce565b602080601f8311600181146200038f5760008415620003765750858301515b600019600386901b1c1916600185901b1785556200031a565b600085815260208120601f198616915b82811015620003c0578886015182559484019460019091019084016200039f565b5085821015620003df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b818110156200041f5785810183015185820160400152820162000401565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620002c85760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051612034620004d9600039600061134e0152600061131c0152600061171e015260006116f6015260006116510152600061167b015260006116a501526000818161111a01528181611143015261128e01526120346000f3fe6080604052600436106101665760003560e01c806384b0196e116100d1578063c0c53b8b1161008a578063dba2844b11610064578063dba2844b146104b8578063dc8999b4146104d8578063e2d80d1514610571578063e63ab1e9146105b457600080fd5b8063c0c53b8b14610458578063c32dcd8d14610478578063d547741f1461049857600080fd5b806384b0196e1461036957806391d148541461039157806395130a8b146103b1578063a1ebf35d146103d1578063a217fddf14610405578063ad3cb1cc1461041a57600080fd5b80633f4ba83a116101235780633f4ba83a146102ba5780634f1ef286146102cf57806352d1902d146102e25780635c975abb146102f757806366666aa91461031c5780638456cb591461035457600080fd5b806301ffc9a71461016b578063120aa877146101a0578063248a9ca3146101e65780632f2ff15d1461020657806336568abe146102285780633b345a8714610248575b600080fd5b34801561017757600080fd5b5061018b610186366004611b46565b6105d6565b60405190151581526020015b60405180910390f35b3480156101ac57600080fd5b506101d86101bb366004611b8c565b600460209081526000928352604080842090915290825290205481565b604051908152602001610197565b3480156101f257600080fd5b506101d8610201366004611bb8565b61060d565b34801561021257600080fd5b50610226610221366004611b8c565b61062f565b005b34801561023457600080fd5b50610226610243366004611b8c565b610651565b34801561025457600080fd5b50610268610263366004611bb8565b610689565b604051610197919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a09182015115159181019190915260c00190565b3480156102c657600080fd5b50610226610733565b6102266102dd366004611be7565b610756565b3480156102ee57600080fd5b506101d8610775565b34801561030357600080fd5b50600080516020611fdf8339815191525460ff1661018b565b34801561032857600080fd5b5060025461033c906001600160a01b031681565b6040516001600160a01b039091168152602001610197565b34801561036057600080fd5b50610226610792565b34801561037557600080fd5b5061037e6107b2565b6040516101979796959493929190611cf9565b34801561039d57600080fd5b5061018b6103ac366004611b8c565b6107f8565b3480156103bd57600080fd5b506102266103cc366004611b8c565b610830565b3480156103dd57600080fd5b506101d87fe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f7081565b34801561041157600080fd5b506101d8600081565b34801561042657600080fd5b5061044b604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101979190611d92565b34801561046457600080fd5b50610226610473366004611da5565b6108c9565b34801561048457600080fd5b50610226610493366004611de8565b610a49565b3480156104a457600080fd5b506102266104b3366004611b8c565b610d9f565b3480156104c457600080fd5b506102266104d3366004611e92565b610dbb565b3480156104e457600080fd5b506105386104f3366004611bb8565b60036020819052600091825260409091208054600182015460028301549383015460048401546005909401546001600160a01b03909316949193919290919060ff1686565b604080516001600160a01b03909716875260208701959095529385019290925260608401526080830152151560a082015260c001610197565b34801561057d57600080fd5b506101d861058c366004611b8c565b60009182526004602090815260408084206001600160a01b0393909316845291905290205490565b3480156105c057600080fd5b506101d8600080516020611f9f83398151915281565b60006001600160e01b03198216637965db0b60e01b148061060757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000908152600080516020611fbf833981519152602052604090206001015490565b6106388261060d565b61064181610f84565b61064b8383610f8e565b50505050565b6001600160a01b038116331461067a5760405163334bd91960e11b815260040160405180910390fd5b6106848282611033565b505050565b6106cd6040518060c0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b50600090815260036020818152604092839020835160c08101855281546001600160a01b031681526001820154928101929092526002810154938201939093529082015460608201526004820154608082015260059091015460ff16151560a082015290565b600080516020611f9f83398151915261074b81610f84565b6107536110af565b50565b61075e61110f565b610767826111b6565b61077182826111c1565b5050565b600061077f611283565b50600080516020611f7f83398151915290565b600080516020611f9f8339815191526107aa81610f84565b6107536112cc565b6000606080600080600060606107c6611315565b6107ce611347565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000918252600080516020611fbf833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600061083b81610f84565b6000838152600360205260409020600581015460ff1661086e576040516392ad298360e01b815260040160405180910390fd5b8060040154421161089257604051631ab7da6b60e01b815260040160405180910390fd5b6001600160a01b0383166108b95760405163162908e360e11b815260040160405180910390fd5b600501805460ff19169055505050565b60006108d3611374565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156108fb5750825b905060008267ffffffffffffffff1660011480156109185750303b155b905081158015610926575080155b156109445760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561096e57845460ff60401b1916600160401b1785555b61097661139d565b61097e61139d565b6109866113a5565b61098e61139d565b600280546001600160a01b0319166001600160a01b038a161790556109b4600088610f8e565b506109cd600080516020611f9f83398151915288610f8e565b506109f87fe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f7087610f8e565b508315610a3f57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b610a516113b5565b610a596113ff565b6001600160a01b038516610a805760405163162908e360e11b815260040160405180910390fd5b428311610aa057604051631ab7da6b60e01b815260040160405180910390fd5b6000878152600360205260409020600581015460ff16610ad3576040516392ad298360e01b815260040160405180910390fd5b8060040154841115610af857604051631ab7da6b60e01b815260040160405180910390fd5b604080517fe3f1b81f38aed56d9d50835cd8510e70aff243bef2f53673805bc198203518a96020820152908101899052606081018890526001600160a01b038716608082015260a0810186905260c08101859052600090610b719060e00160405160208183030381529060405280519060200120611430565b90506000610bb785858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250869392505061145d9050565b9050610be37fe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70826107f8565b610c0057604051636518c33d60e11b815260040160405180910390fd5b60008a81526004602090815260408083206001600160a01b038c168452909152902054808811610c425760405162fc559f60e81b815260040160405180910390fd5b6000610c4e828a611ed8565b90508085600201541015610c75576040516304fce4c160e21b815260040160405180910390fd5b60008c81526004602090815260408083206001600160a01b038e16845290915281208a9055600286018054839290610cae908490611ed8565b90915550506002548554604051634026cf2360e01b81526001600160a01b0391821660048201528c8216602482015260448101849052911690634026cf2390606401600060405180830381600087803b158015610d0a57600080fd5b505af1158015610d1e573d6000803e3d6000fd5b505060408051848152602081018d90526001600160a01b038e1693508f92507fd9cb1e2714d65a111c0f20f060176ad657496bd47a3de04ec7c3d4ca232112ac910160405180910390a35050505050610d9660017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b50505050505050565b610da88261060d565b610db181610f84565b61064b8383611033565b6000610dc681610f84565b6001600160a01b038516610ded5760405163162908e360e11b815260040160405180910390fd5b83600003610e0e5760405163162908e360e11b815260040160405180910390fd5b428211610e2e57604051631da7447960e21b815260040160405180910390fd5b60008681526003602052604090206005015460ff1615610e6157604051633a35c2f960e01b815260040160405180910390fd5b6040518060c00160405280866001600160a01b03168152602001858152602001858152602001848152602001838152602001600115158152506003600088815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550905050846001600160a01b0316867fe27e5a775a199e96de84d4ca626ac186c4bbc03163b3d525ea3ad4098b1f25d5868686604051610f74939291909283526020830191909152604082015260600190565b60405180910390a3505050505050565b61075381336114ad565b6000600080516020611fbf833981519152610fa984846107f8565b611029576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055610fdf3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610607565b6000915050610607565b6000600080516020611fbf83398151915261104e84846107f8565b15611029576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610607565b6110b76114e6565b600080516020611fdf833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061119657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661118a600080516020611f7f833981519152546001600160a01b031690565b6001600160a01b031614155b156111b45760405163703e46dd60e11b815260040160405180910390fd5b565b600061077181610f84565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561121b575060408051601f3d908101601f1916820190925261121891810190611ef9565b60015b61124857604051634c9c8ce360e01b81526001600160a01b03831660048201526024015b60405180910390fd5b600080516020611f7f833981519152811461127957604051632a87526960e21b81526004810182905260240161123f565b6106848383611516565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111b45760405163703e46dd60e11b815260040160405180910390fd5b6112d46113ff565b600080516020611fdf833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336110f1565b60606113427f0000000000000000000000000000000000000000000000000000000000000000600061156c565b905090565b60606113427f0000000000000000000000000000000000000000000000000000000000000000600161156c565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610607565b6111b4611617565b6113ad611617565b6111b461163c565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f008054600119016113f957604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b600080516020611fdf8339815191525460ff16156111b45760405163d93c066560e01b815260040160405180910390fd5b600061060761143d611644565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061146d868661176f565b92509250925061147d82826117bc565b5090949350505050565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b6114b782826107f8565b6107715760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161123f565b600080516020611fdf8339815191525460ff166111b457604051638dfc202b60e01b815260040160405180910390fd5b61151f82611875565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156115645761068482826118da565b610771611950565b606060ff83146115865761157f8361196f565b9050610607565b81805461159290611f12565b80601f01602080910402602001604051908101604052809291908181526020018280546115be90611f12565b801561160b5780601f106115e05761010080835404028352916020019161160b565b820191906000526020600020905b8154815290600101906020018083116115ee57829003601f168201915b50505050509050610607565b61161f6119ae565b6111b457604051631afcd79f60e31b815260040160405180910390fd5b611487611617565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561169d57507f000000000000000000000000000000000000000000000000000000000000000046145b156116c757507f000000000000000000000000000000000000000000000000000000000000000090565b611342604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080600083516041036117a95760208401516040850151606086015160001a61179b888285856119c8565b9550955095505050506117b5565b50508151600091506002905b9250925092565b60008260038111156117d0576117d0611f4c565b036117d9575050565b60018260038111156117ed576117ed611f4c565b0361180b5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561181f5761181f611f4c565b036118405760405163fce698f760e01b81526004810182905260240161123f565b600382600381111561185457611854611f4c565b03610771576040516335e2f38360e21b81526004810182905260240161123f565b806001600160a01b03163b6000036118ab57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161123f565b600080516020611f7f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516118f79190611f62565b600060405180830381855af49150503d8060008114611932576040519150601f19603f3d011682016040523d82523d6000602084013e611937565b606091505b5091509150611947858383611a97565b95945050505050565b34156111b45760405163b398979f60e01b815260040160405180910390fd5b6060600061197c83611af6565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60006119b8611374565b54600160401b900460ff16919050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611a035750600091506003905082611a8d565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611a57573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a8357506000925060019150829050611a8d565b9250600091508190505b9450945094915050565b606082611aac57611aa782611b1e565b611aef565b8151158015611ac357506001600160a01b0384163b155b15611aec57604051639996b31560e01b81526001600160a01b038516600482015260240161123f565b50805b9392505050565b600060ff8216601f81111561060757604051632cd44ac360e21b815260040160405180910390fd5b805115611b2d57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b600060208284031215611b5857600080fd5b81356001600160e01b031981168114611aef57600080fd5b80356001600160a01b0381168114611b8757600080fd5b919050565b60008060408385031215611b9f57600080fd5b82359150611baf60208401611b70565b90509250929050565b600060208284031215611bca57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611bfa57600080fd5b611c0383611b70565b9150602083013567ffffffffffffffff80821115611c2057600080fd5b818501915085601f830112611c3457600080fd5b813581811115611c4657611c46611bd1565b604051601f8201601f19908116603f01168101908382118183101715611c6e57611c6e611bd1565b81604052828152886020848701011115611c8757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b83811015611cc4578181015183820152602001611cac565b50506000910152565b60008151808452611ce5816020860160208601611ca9565b601f01601f19169290920160200192915050565b60ff60f81b881681526000602060e06020840152611d1a60e084018a611ccd565b8381036040850152611d2c818a611ccd565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015611d8057835183529284019291840191600101611d64565b50909c9b505050505050505050505050565b602081526000611aef6020830184611ccd565b600080600060608486031215611dba57600080fd5b611dc384611b70565b9250611dd160208501611b70565b9150611ddf60408501611b70565b90509250925092565b600080600080600080600060c0888a031215611e0357600080fd5b8735965060208801359550611e1a60408901611b70565b9450606088013593506080880135925060a088013567ffffffffffffffff80821115611e4557600080fd5b818a0191508a601f830112611e5957600080fd5b813581811115611e6857600080fd5b8b6020828501011115611e7a57600080fd5b60208301945080935050505092959891949750929550565b600080600080600060a08688031215611eaa57600080fd5b85359450611eba60208701611b70565b94979496505050506040830135926060810135926080909101359150565b8181038181111561060757634e487b7160e01b600052601160045260246000fd5b600060208284031215611f0b57600080fd5b5051919050565b600181811c90821680611f2657607f821691505b602082108103611f4657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60008251611f74818460208701611ca9565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220a60c16a02e9fe686923f2172ffb3264d4f8f5e4ac133c11911fc34f2aa7fb50264736f6c63430008180033","opcodes":"PUSH2 0x180 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH32 0x5369676E65645265776172644469737472696275746F72000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP4 ADD MSTORE SWAP1 PUSH3 0x71 DUP3 PUSH1 0x0 PUSH3 0x12B JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH3 0x82 DUP2 PUSH1 0x1 PUSH3 0x12B JUMP JUMPDEST PUSH2 0x160 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x100 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x120 MSTORE CHAINID PUSH1 0xC0 MSTORE PUSH3 0x112 PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA0 MSTORE POP POP ADDRESS PUSH1 0xE0 MSTORE PUSH3 0x125 PUSH3 0x164 JUMP JUMPDEST PUSH3 0x465 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x14B JUMPI PUSH3 0x143 DUP4 PUSH3 0x206 JUMP JUMPDEST SWAP1 POP PUSH3 0x15E JUMP JUMPDEST DUP2 PUSH3 0x158 DUP5 DUP3 PUSH3 0x323 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x170 PUSH3 0x252 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH3 0x203 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x23D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x234 SWAP2 SWAP1 PUSH3 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH3 0x24A DUP3 PUSH3 0x440 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH3 0x15E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x31E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2F9 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x31A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x305 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x33F JUMPI PUSH3 0x33F PUSH3 0x27C JUMP JUMPDEST PUSH3 0x357 DUP2 PUSH3 0x350 DUP5 SLOAD PUSH3 0x292 JUMP JUMPDEST DUP5 PUSH3 0x2CE JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x38F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x376 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x31A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3C0 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x39F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3DF JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x41F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH3 0x401 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x2C8 JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x2034 PUSH3 0x4D9 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x134E ADD MSTORE PUSH1 0x0 PUSH2 0x131C ADD MSTORE PUSH1 0x0 PUSH2 0x171E ADD MSTORE PUSH1 0x0 PUSH2 0x16F6 ADD MSTORE PUSH1 0x0 PUSH2 0x1651 ADD MSTORE PUSH1 0x0 PUSH2 0x167B ADD MSTORE PUSH1 0x0 PUSH2 0x16A5 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x111A ADD MSTORE DUP2 DUP2 PUSH2 0x1143 ADD MSTORE PUSH2 0x128E ADD MSTORE PUSH2 0x2034 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x166 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84B0196E GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC0C53B8B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDBA2844B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBA2844B EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0xDC8999B4 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xE2D80D15 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xC32DCD8D EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x95130A8B EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xA1EBF35D EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x66666AA9 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x120AA877 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x3B345A87 EQ PUSH2 0x248 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x775 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x33C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x792 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37E PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA5 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0xA49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0xD9F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0xDBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x538 PUSH2 0x4F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x58C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x607 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x638 DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x641 DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x64B DUP4 DUP4 PUSH2 0xF8E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x684 DUP3 DUP3 PUSH2 0x1033 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6CD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xC0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x74B DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x753 PUSH2 0x10AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x75E PUSH2 0x110F JUMP JUMPDEST PUSH2 0x767 DUP3 PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0x771 DUP3 DUP3 PUSH2 0x11C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F PUSH2 0x1283 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x7AA DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x753 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x7C6 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83B DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH4 0x92AD2983 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D3 PUSH2 0x1374 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x8FB JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x918 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x926 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x96E JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x976 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x97E PUSH2 0x139D JUMP JUMPDEST PUSH2 0x986 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x98E PUSH2 0x139D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE PUSH2 0x9B4 PUSH1 0x0 DUP9 PUSH2 0xF8E JUMP JUMPDEST POP PUSH2 0x9CD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 PUSH2 0xF8E JUMP JUMPDEST POP PUSH2 0x9F8 PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP8 PUSH2 0xF8E JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xA3F JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA51 PUSH2 0x13B5 JUMP JUMPDEST PUSH2 0xA59 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xA80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP4 GT PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x92AD2983 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD DUP5 GT ISZERO PUSH2 0xAF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE3F1B81F38AED56D9D50835CD8510E70AFF243BEF2F53673805BC198203518A9 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xB71 SWAP1 PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBB7 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP4 SWAP3 POP POP PUSH2 0x145D SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH2 0xBE3 PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP3 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6518C33D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 DUP9 GT PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH3 0xFC559F PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC4E DUP3 DUP11 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4FCE4C1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP11 SWAP1 SSTORE PUSH1 0x2 DUP7 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xCAE SWAP1 DUP5 SWAP1 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD DUP6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4026CF23 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP13 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x4026CF23 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP4 POP DUP16 SWAP3 POP PUSH32 0xD9CB1E2714D65A111C0F20F060176AD657496BD47A3DE04EC7C3D4CA232112AC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH2 0xD96 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDA8 DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0xDB1 DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x64B DUP4 DUP4 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC6 DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xDED JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 SUB PUSH2 0xE0E JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 GT PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DA74479 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A35C2F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH32 0xE27E5A775A199E96DE84D4CA626AC186C4BBC03163B3D525EA3AD4098B1F25D5 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF74 SWAP4 SWAP3 SWAP2 SWAP1 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x753 DUP2 CALLER PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xFA9 DUP5 DUP5 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x1029 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xFDF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x607 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x607 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x104E DUP5 DUP5 PUSH2 0x7F8 JUMP JUMPDEST ISZERO PUSH2 0x1029 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x607 JUMP JUMPDEST PUSH2 0x10B7 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1196 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x118A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP2 PUSH2 0xF84 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x121B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1218 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x123F JUMP JUMPDEST PUSH2 0x684 DUP4 DUP4 PUSH2 0x1516 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D4 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1342 PUSH32 0x0 PUSH1 0x0 PUSH2 0x156C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1342 PUSH32 0x0 PUSH1 0x1 PUSH2 0x156C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x11B4 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x13AD PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x11B4 PUSH2 0x163C JUMP JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0x13F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x607 PUSH2 0x143D PUSH2 0x1644 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x146D DUP7 DUP7 PUSH2 0x176F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x147D DUP3 DUP3 PUSH2 0x17BC JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH2 0x14B7 DUP3 DUP3 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x123F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x151F DUP3 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1564 JUMPI PUSH2 0x684 DUP3 DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x771 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x1586 JUMPI PUSH2 0x157F DUP4 PUSH2 0x196F JUMP JUMPDEST SWAP1 POP PUSH2 0x607 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1592 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15BE SWAP1 PUSH2 0x1F12 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x160B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x160B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x607 JUMP JUMPDEST PUSH2 0x161F PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1487 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x169D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x16C7 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1342 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x17A9 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x179B DUP9 DUP3 DUP6 DUP6 PUSH2 0x19C8 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x17B5 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17D0 JUMPI PUSH2 0x17D0 PUSH2 0x1F4C JUMP JUMPDEST SUB PUSH2 0x17D9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17ED JUMPI PUSH2 0x17ED PUSH2 0x1F4C JUMP JUMPDEST SUB PUSH2 0x180B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x181F JUMPI PUSH2 0x181F PUSH2 0x1F4C JUMP JUMPDEST SUB PUSH2 0x1840 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x123F JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1854 PUSH2 0x1F4C JUMP JUMPDEST SUB PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x123F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x18AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x123F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x18F7 SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1932 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1947 DUP6 DUP4 DUP4 PUSH2 0x1A97 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x197C DUP4 PUSH2 0x1AF6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B8 PUSH2 0x1374 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1A03 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A83 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1A8D JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1AAC JUMPI PUSH2 0x1AA7 DUP3 PUSH2 0x1B1E JUMP JUMPDEST PUSH2 0x1AEF JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1AC3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1AEC JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x123F JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1B2D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1AEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1BAF PUSH1 0x20 DUP5 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C03 DUP4 PUSH2 0x1B70 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C46 JUMPI PUSH2 0x1C46 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1C6E JUMPI PUSH2 0x1C6E PUSH2 0x1BD1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1C87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CAC JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1CE5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D1A PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1CCD JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1D2C DUP2 DUP11 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D80 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1D64 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1AEF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC3 DUP5 PUSH2 0x1B70 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DD1 PUSH1 0x20 DUP6 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDF PUSH1 0x40 DUP6 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH2 0x1E1A PUSH1 0x40 DUP10 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP12 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x1EBA PUSH1 0x20 DUP8 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP3 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x607 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1F26 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F46 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1F74 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1CA9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220A60C16A02E9FE686923F2172FF 0xB3 0x26 0x4D 0x4F DUP16 MCOPY BLOBBASEFEE 0xC1 CALLER 0xC1 NOT GT 0xFC CALLVALUE CALLCODE 0xAA PUSH32 0xB50264736F6C6343000818003300000000000000000000000000000000000000 ","sourceMap":"716:5911:32:-:0;;;1171:4:2;1128:48;;2191:92:32;;;;;;;;;-1:-1:-1;3428:431:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3428:431:25;;;;;3501:45;3428:431;-1:-1:-1;3501:30:25;:45::i;:::-;3493:53;;3567:51;:7;3601:16;3567:33;:51::i;:::-;3556:62;;3642:22;;;;;;;;;;3628:36;;3691:25;;;;;;3674:42;;3744:13;3727:30;;3792:23;4326:11;;4339:14;;4304:80;;;2079:95;4304:80;;;2985:25:33;3026:18;;;3019:34;;;;3069:18;;;3062:34;4355:13:25;3112:18:33;;;3105:34;4378:4:25;3155:19:33;;;3148:61;4268:7:25;;2957:19:33;;4304:80:25;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;3792:23;3767:48;;-1:-1:-1;;3847:4:25;3825:27;;2254:22:32::1;:20;:22::i;:::-;716:5911:::0;;2887:340:21;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:21;;-1:-1:-1;3006:215:21;2887:340;;;;:::o;7709:422:1:-;7824:30;7857:26;:24;:26::i;:::-;7898:15;;;;-1:-1:-1;7898:15:1;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:1;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:1;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:1;-1:-1:-1;;;;;8033:33:1;;;;;8085:29;;3364:50:33;;;8085:29:1;;3352:2:33;3337:18;8085:29:1;;;;;;;7979:146;7758:373;7709:422::o;1708:286:21:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:21;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:21:o;9071:205:1:-;9129:30;;3147:66;9186:27;8819:122;14:127:33;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:33;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:33;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:33;;;2571:26;2522:89;-1:-1:-1;;1333:1:33;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:33;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:33;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:33;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:33:o;3425:548::-;3537:4;3566:2;3595;3584:9;3577:21;3627:6;3621:13;3670:6;3665:2;3654:9;3650:18;3643:34;3695:1;3705:140;3719:6;3716:1;3713:13;3705:140;;;3814:14;;;3810:23;;3804:30;3780:17;;;3799:2;3776:26;3769:66;3734:10;;3705:140;;;3709:3;3894:1;3889:2;3880:6;3869:9;3865:22;3861:31;3854:42;3964:2;3957;3953:7;3948:2;3940:6;3936:15;3932:29;3921:9;3917:45;3913:54;3905:62;;;;3425:548;;;;:::o;3978:297::-;4096:12;;4143:4;4132:16;;;4126:23;;4096:12;4161:16;;4158:111;;;-1:-1:-1;;4235:4:33;4231:17;;;;4228:1;4224:25;4220:38;4209:50;;3978:297;-1:-1:-1;3978:297:33:o;:::-;716:5911:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":null,"id":30,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_8871":{"entryPoint":null,"id":8871,"parameterSlots":0,"returnSlots":0},"@SIGNER_ROLE_8876":{"entryPoint":null,"id":8876,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_656":{"entryPoint":null,"id":656,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_4903":{"entryPoint":4885,"id":4903,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_4915":{"entryPoint":4935,"id":4915,"parameterSlots":0,"returnSlots":1},"@__AccessControl_init_65":{"entryPoint":5021,"id":65,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_924":{"entryPoint":null,"id":924,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_1060":{"entryPoint":5029,"id":1060,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_1078":{"entryPoint":5692,"id":1078,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_686":{"entryPoint":null,"id":686,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_9339":{"entryPoint":4534,"id":9339,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_4833":{"entryPoint":null,"id":4833,"parameterSlots":0,"returnSlots":1},"@_checkInitializing_540":{"entryPoint":5655,"id":540,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1711":{"entryPoint":6480,"id":1711,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_762":{"entryPoint":4739,"id":762,"parameterSlots":0,"returnSlots":0},"@_checkProxy_746":{"entryPoint":4367,"id":746,"parameterSlots":0,"returnSlots":0},"@_checkRole_131":{"entryPoint":3972,"id":131,"parameterSlots":1,"returnSlots":0},"@_checkRole_152":{"entryPoint":5293,"id":152,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_4812":{"entryPoint":5700,"id":4812,"parameterSlots":0,"returnSlots":1},"@_getAccessControlStorage_48":{"entryPoint":null,"id":48,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_631":{"entryPoint":4980,"id":631,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_886":{"entryPoint":null,"id":886,"parameterSlots":0,"returnSlots":1},"@_getReentrancyGuardStorage_1048":{"entryPoint":null,"id":1048,"parameterSlots":0,"returnSlots":1},"@_grantRole_317":{"entryPoint":3982,"id":317,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_4849":{"entryPoint":5168,"id":4849,"parameterSlots":1,"returnSlots":1},"@_initializableStorageSlot_617":{"entryPoint":null,"id":617,"parameterSlots":0,"returnSlots":1},"@_isInitializing_608":{"entryPoint":6574,"id":608,"parameterSlots":0,"returnSlots":1},"@_msgSender_842":{"entryPoint":null,"id":842,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1130":{"entryPoint":5255,"id":1130,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1114":{"entryPoint":5045,"id":1114,"parameterSlots":0,"returnSlots":0},"@_pause_995":{"entryPoint":4812,"id":995,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_958":{"entryPoint":5119,"id":958,"parameterSlots":0,"returnSlots":0},"@_requirePaused_971":{"entryPoint":5350,"id":971,"parameterSlots":0,"returnSlots":0},"@_revert_2523":{"entryPoint":6942,"id":2523,"parameterSlots":1,"returnSlots":0},"@_revokeRole_363":{"entryPoint":4147,"id":363,"parameterSlots":2,"returnSlots":1},"@_setImplementation_1491":{"entryPoint":6261,"id":1491,"parameterSlots":1,"returnSlots":0},"@_throwError_4688":{"entryPoint":6076,"id":4688,"parameterSlots":2,"returnSlots":0},"@_unpause_1019":{"entryPoint":4271,"id":1019,"parameterSlots":0,"returnSlots":0},"@_upgradeToAndCallUUPS_813":{"entryPoint":4545,"id":813,"parameterSlots":2,"returnSlots":0},"@byteLength_2716":{"entryPoint":6902,"id":2716,"parameterSlots":1,"returnSlots":1},"@claim_9226":{"entryPoint":2633,"id":9226,"parameterSlots":7,"returnSlots":0},"@claimed_8903":{"entryPoint":null,"id":8903,"parameterSlots":0,"returnSlots":0},"@createDistribution_9072":{"entryPoint":3515,"id":9072,"parameterSlots":5,"returnSlots":0},"@dists_8897":{"entryPoint":null,"id":8897,"parameterSlots":0,"returnSlots":0},"@eip712Domain_4891":{"entryPoint":1970,"id":4891,"parameterSlots":0,"returnSlots":7},"@functionDelegateCall_2441":{"entryPoint":6362,"id":2441,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2850":{"entryPoint":null,"id":2850,"parameterSlots":1,"returnSlots":1},"@getClaimed_9329":{"entryPoint":null,"id":9329,"parameterSlots":2,"returnSlots":1},"@getDistribution_9312":{"entryPoint":1673,"id":9312,"parameterSlots":1,"returnSlots":1},"@getImplementation_1464":{"entryPoint":null,"id":1464,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_173":{"entryPoint":1549,"id":173,"parameterSlots":1,"returnSlots":1},"@grantRole_192":{"entryPoint":1583,"id":192,"parameterSlots":2,"returnSlots":0},"@hasRole_118":{"entryPoint":2040,"id":118,"parameterSlots":2,"returnSlots":1},"@initialize_9000":{"entryPoint":2249,"id":9000,"parameterSlots":3,"returnSlots":0},"@pause_9288":{"entryPoint":1938,"id":9288,"parameterSlots":0,"returnSlots":0},"@paused_946":{"entryPoint":null,"id":946,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_704":{"entryPoint":1909,"id":704,"parameterSlots":0,"returnSlots":1},"@recover_4445":{"entryPoint":5213,"id":4445,"parameterSlots":2,"returnSlots":1},"@renounceRole_234":{"entryPoint":1617,"id":234,"parameterSlots":2,"returnSlots":0},"@revokeRole_211":{"entryPoint":3487,"id":211,"parameterSlots":2,"returnSlots":0},"@rewardPool_8879":{"entryPoint":null,"id":8879,"parameterSlots":0,"returnSlots":0},"@supportsInterface_1188":{"entryPoint":null,"id":1188,"parameterSlots":1,"returnSlots":1},"@supportsInterface_93":{"entryPoint":1494,"id":93,"parameterSlots":1,"returnSlots":1},"@sweepRemainder_9277":{"entryPoint":2096,"id":9277,"parameterSlots":2,"returnSlots":0},"@toStringWithFallback_2783":{"entryPoint":5484,"id":2783,"parameterSlots":2,"returnSlots":1},"@toString_2684":{"entryPoint":6511,"id":2684,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_5001":{"entryPoint":null,"id":5001,"parameterSlots":2,"returnSlots":1},"@tryRecover_4415":{"entryPoint":5999,"id":4415,"parameterSlots":2,"returnSlots":3},"@tryRecover_4603":{"entryPoint":6600,"id":4603,"parameterSlots":4,"returnSlots":3},"@unpause_9298":{"entryPoint":1843,"id":9298,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_1527":{"entryPoint":5398,"id":1527,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_724":{"entryPoint":1878,"id":724,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_2481":{"entryPoint":6807,"id":2481,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":7024,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address":{"entryPoint":7589,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":7143,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":7096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":7929,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":7052,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256t_uint256":{"entryPoint":7826,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_bytes32t_addresst_uint256t_uint256t_bytes_calldata_ptr":{"entryPoint":7656,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_string":{"entryPoint":7373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7417,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_RewardPool_$8840__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Distribution_$8892_memory_ptr__to_t_struct$_Distribution_$8892_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7896,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7337,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7954,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":8012,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7121,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12584:33","nodeType":"YulBlock","src":"0:12584:33","statements":[{"nativeSrc":"6:3:33","nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nativeSrc":"83:217:33","nodeType":"YulBlock","src":"83:217:33","statements":[{"body":{"nativeSrc":"129:16:33","nodeType":"YulBlock","src":"129:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:33","nodeType":"YulLiteral","src":"138:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:33","nodeType":"YulLiteral","src":"141:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:33","nodeType":"YulIdentifier","src":"131:6:33"},"nativeSrc":"131:12:33","nodeType":"YulFunctionCall","src":"131:12:33"},"nativeSrc":"131:12:33","nodeType":"YulExpressionStatement","src":"131:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:33","nodeType":"YulIdentifier","src":"104:7:33"},{"name":"headStart","nativeSrc":"113:9:33","nodeType":"YulIdentifier","src":"113:9:33"}],"functionName":{"name":"sub","nativeSrc":"100:3:33","nodeType":"YulIdentifier","src":"100:3:33"},"nativeSrc":"100:23:33","nodeType":"YulFunctionCall","src":"100:23:33"},{"kind":"number","nativeSrc":"125:2:33","nodeType":"YulLiteral","src":"125:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:33","nodeType":"YulIdentifier","src":"96:3:33"},"nativeSrc":"96:32:33","nodeType":"YulFunctionCall","src":"96:32:33"},"nativeSrc":"93:52:33","nodeType":"YulIf","src":"93:52:33"},{"nativeSrc":"154:36:33","nodeType":"YulVariableDeclaration","src":"154:36:33","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:33","nodeType":"YulIdentifier","src":"180:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:33","nodeType":"YulIdentifier","src":"167:12:33"},"nativeSrc":"167:23:33","nodeType":"YulFunctionCall","src":"167:23:33"},"variables":[{"name":"value","nativeSrc":"158:5:33","nodeType":"YulTypedName","src":"158:5:33","type":""}]},{"body":{"nativeSrc":"254:16:33","nodeType":"YulBlock","src":"254:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:33","nodeType":"YulLiteral","src":"263:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:33","nodeType":"YulLiteral","src":"266:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:33","nodeType":"YulIdentifier","src":"256:6:33"},"nativeSrc":"256:12:33","nodeType":"YulFunctionCall","src":"256:12:33"},"nativeSrc":"256:12:33","nodeType":"YulExpressionStatement","src":"256:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:33","nodeType":"YulIdentifier","src":"212:5:33"},{"arguments":[{"name":"value","nativeSrc":"223:5:33","nodeType":"YulIdentifier","src":"223:5:33"},{"arguments":[{"kind":"number","nativeSrc":"234:3:33","nodeType":"YulLiteral","src":"234:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"239:10:33","nodeType":"YulLiteral","src":"239:10:33","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"230:3:33","nodeType":"YulIdentifier","src":"230:3:33"},"nativeSrc":"230:20:33","nodeType":"YulFunctionCall","src":"230:20:33"}],"functionName":{"name":"and","nativeSrc":"219:3:33","nodeType":"YulIdentifier","src":"219:3:33"},"nativeSrc":"219:32:33","nodeType":"YulFunctionCall","src":"219:32:33"}],"functionName":{"name":"eq","nativeSrc":"209:2:33","nodeType":"YulIdentifier","src":"209:2:33"},"nativeSrc":"209:43:33","nodeType":"YulFunctionCall","src":"209:43:33"}],"functionName":{"name":"iszero","nativeSrc":"202:6:33","nodeType":"YulIdentifier","src":"202:6:33"},"nativeSrc":"202:51:33","nodeType":"YulFunctionCall","src":"202:51:33"},"nativeSrc":"199:71:33","nodeType":"YulIf","src":"199:71:33"},{"nativeSrc":"279:15:33","nodeType":"YulAssignment","src":"279:15:33","value":{"name":"value","nativeSrc":"289:5:33","nodeType":"YulIdentifier","src":"289:5:33"},"variableNames":[{"name":"value0","nativeSrc":"279:6:33","nodeType":"YulIdentifier","src":"279:6:33"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:286:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:33","nodeType":"YulTypedName","src":"49:9:33","type":""},{"name":"dataEnd","nativeSrc":"60:7:33","nodeType":"YulTypedName","src":"60:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:33","nodeType":"YulTypedName","src":"72:6:33","type":""}],"src":"14:286:33"},{"body":{"nativeSrc":"400:92:33","nodeType":"YulBlock","src":"400:92:33","statements":[{"nativeSrc":"410:26:33","nodeType":"YulAssignment","src":"410:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:33","nodeType":"YulIdentifier","src":"422:9:33"},{"kind":"number","nativeSrc":"433:2:33","nodeType":"YulLiteral","src":"433:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"418:3:33","nodeType":"YulIdentifier","src":"418:3:33"},"nativeSrc":"418:18:33","nodeType":"YulFunctionCall","src":"418:18:33"},"variableNames":[{"name":"tail","nativeSrc":"410:4:33","nodeType":"YulIdentifier","src":"410:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"452:9:33","nodeType":"YulIdentifier","src":"452:9:33"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"477:6:33","nodeType":"YulIdentifier","src":"477:6:33"}],"functionName":{"name":"iszero","nativeSrc":"470:6:33","nodeType":"YulIdentifier","src":"470:6:33"},"nativeSrc":"470:14:33","nodeType":"YulFunctionCall","src":"470:14:33"}],"functionName":{"name":"iszero","nativeSrc":"463:6:33","nodeType":"YulIdentifier","src":"463:6:33"},"nativeSrc":"463:22:33","nodeType":"YulFunctionCall","src":"463:22:33"}],"functionName":{"name":"mstore","nativeSrc":"445:6:33","nodeType":"YulIdentifier","src":"445:6:33"},"nativeSrc":"445:41:33","nodeType":"YulFunctionCall","src":"445:41:33"},"nativeSrc":"445:41:33","nodeType":"YulExpressionStatement","src":"445:41:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"305:187:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"369:9:33","nodeType":"YulTypedName","src":"369:9:33","type":""},{"name":"value0","nativeSrc":"380:6:33","nodeType":"YulTypedName","src":"380:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"391:4:33","nodeType":"YulTypedName","src":"391:4:33","type":""}],"src":"305:187:33"},{"body":{"nativeSrc":"546:124:33","nodeType":"YulBlock","src":"546:124:33","statements":[{"nativeSrc":"556:29:33","nodeType":"YulAssignment","src":"556:29:33","value":{"arguments":[{"name":"offset","nativeSrc":"578:6:33","nodeType":"YulIdentifier","src":"578:6:33"}],"functionName":{"name":"calldataload","nativeSrc":"565:12:33","nodeType":"YulIdentifier","src":"565:12:33"},"nativeSrc":"565:20:33","nodeType":"YulFunctionCall","src":"565:20:33"},"variableNames":[{"name":"value","nativeSrc":"556:5:33","nodeType":"YulIdentifier","src":"556:5:33"}]},{"body":{"nativeSrc":"648:16:33","nodeType":"YulBlock","src":"648:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"657:1:33","nodeType":"YulLiteral","src":"657:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"660:1:33","nodeType":"YulLiteral","src":"660:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"650:6:33","nodeType":"YulIdentifier","src":"650:6:33"},"nativeSrc":"650:12:33","nodeType":"YulFunctionCall","src":"650:12:33"},"nativeSrc":"650:12:33","nodeType":"YulExpressionStatement","src":"650:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"607:5:33","nodeType":"YulIdentifier","src":"607:5:33"},{"arguments":[{"name":"value","nativeSrc":"618:5:33","nodeType":"YulIdentifier","src":"618:5:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"633:3:33","nodeType":"YulLiteral","src":"633:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"638:1:33","nodeType":"YulLiteral","src":"638:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"629:3:33","nodeType":"YulIdentifier","src":"629:3:33"},"nativeSrc":"629:11:33","nodeType":"YulFunctionCall","src":"629:11:33"},{"kind":"number","nativeSrc":"642:1:33","nodeType":"YulLiteral","src":"642:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"625:3:33","nodeType":"YulIdentifier","src":"625:3:33"},"nativeSrc":"625:19:33","nodeType":"YulFunctionCall","src":"625:19:33"}],"functionName":{"name":"and","nativeSrc":"614:3:33","nodeType":"YulIdentifier","src":"614:3:33"},"nativeSrc":"614:31:33","nodeType":"YulFunctionCall","src":"614:31:33"}],"functionName":{"name":"eq","nativeSrc":"604:2:33","nodeType":"YulIdentifier","src":"604:2:33"},"nativeSrc":"604:42:33","nodeType":"YulFunctionCall","src":"604:42:33"}],"functionName":{"name":"iszero","nativeSrc":"597:6:33","nodeType":"YulIdentifier","src":"597:6:33"},"nativeSrc":"597:50:33","nodeType":"YulFunctionCall","src":"597:50:33"},"nativeSrc":"594:70:33","nodeType":"YulIf","src":"594:70:33"}]},"name":"abi_decode_address","nativeSrc":"497:173:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"525:6:33","nodeType":"YulTypedName","src":"525:6:33","type":""}],"returnVariables":[{"name":"value","nativeSrc":"536:5:33","nodeType":"YulTypedName","src":"536:5:33","type":""}],"src":"497:173:33"},{"body":{"nativeSrc":"762:167:33","nodeType":"YulBlock","src":"762:167:33","statements":[{"body":{"nativeSrc":"808:16:33","nodeType":"YulBlock","src":"808:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"817:1:33","nodeType":"YulLiteral","src":"817:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"820:1:33","nodeType":"YulLiteral","src":"820:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"810:6:33","nodeType":"YulIdentifier","src":"810:6:33"},"nativeSrc":"810:12:33","nodeType":"YulFunctionCall","src":"810:12:33"},"nativeSrc":"810:12:33","nodeType":"YulExpressionStatement","src":"810:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"783:7:33","nodeType":"YulIdentifier","src":"783:7:33"},{"name":"headStart","nativeSrc":"792:9:33","nodeType":"YulIdentifier","src":"792:9:33"}],"functionName":{"name":"sub","nativeSrc":"779:3:33","nodeType":"YulIdentifier","src":"779:3:33"},"nativeSrc":"779:23:33","nodeType":"YulFunctionCall","src":"779:23:33"},{"kind":"number","nativeSrc":"804:2:33","nodeType":"YulLiteral","src":"804:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"775:3:33","nodeType":"YulIdentifier","src":"775:3:33"},"nativeSrc":"775:32:33","nodeType":"YulFunctionCall","src":"775:32:33"},"nativeSrc":"772:52:33","nodeType":"YulIf","src":"772:52:33"},{"nativeSrc":"833:33:33","nodeType":"YulAssignment","src":"833:33:33","value":{"arguments":[{"name":"headStart","nativeSrc":"856:9:33","nodeType":"YulIdentifier","src":"856:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"843:12:33","nodeType":"YulIdentifier","src":"843:12:33"},"nativeSrc":"843:23:33","nodeType":"YulFunctionCall","src":"843:23:33"},"variableNames":[{"name":"value0","nativeSrc":"833:6:33","nodeType":"YulIdentifier","src":"833:6:33"}]},{"nativeSrc":"875:48:33","nodeType":"YulAssignment","src":"875:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"908:9:33","nodeType":"YulIdentifier","src":"908:9:33"},{"kind":"number","nativeSrc":"919:2:33","nodeType":"YulLiteral","src":"919:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"904:3:33","nodeType":"YulIdentifier","src":"904:3:33"},"nativeSrc":"904:18:33","nodeType":"YulFunctionCall","src":"904:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"885:18:33","nodeType":"YulIdentifier","src":"885:18:33"},"nativeSrc":"885:38:33","nodeType":"YulFunctionCall","src":"885:38:33"},"variableNames":[{"name":"value1","nativeSrc":"875:6:33","nodeType":"YulIdentifier","src":"875:6:33"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"675:254:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"720:9:33","nodeType":"YulTypedName","src":"720:9:33","type":""},{"name":"dataEnd","nativeSrc":"731:7:33","nodeType":"YulTypedName","src":"731:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"743:6:33","nodeType":"YulTypedName","src":"743:6:33","type":""},{"name":"value1","nativeSrc":"751:6:33","nodeType":"YulTypedName","src":"751:6:33","type":""}],"src":"675:254:33"},{"body":{"nativeSrc":"1035:76:33","nodeType":"YulBlock","src":"1035:76:33","statements":[{"nativeSrc":"1045:26:33","nodeType":"YulAssignment","src":"1045:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"1057:9:33","nodeType":"YulIdentifier","src":"1057:9:33"},{"kind":"number","nativeSrc":"1068:2:33","nodeType":"YulLiteral","src":"1068:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1053:3:33","nodeType":"YulIdentifier","src":"1053:3:33"},"nativeSrc":"1053:18:33","nodeType":"YulFunctionCall","src":"1053:18:33"},"variableNames":[{"name":"tail","nativeSrc":"1045:4:33","nodeType":"YulIdentifier","src":"1045:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1087:9:33","nodeType":"YulIdentifier","src":"1087:9:33"},{"name":"value0","nativeSrc":"1098:6:33","nodeType":"YulIdentifier","src":"1098:6:33"}],"functionName":{"name":"mstore","nativeSrc":"1080:6:33","nodeType":"YulIdentifier","src":"1080:6:33"},"nativeSrc":"1080:25:33","nodeType":"YulFunctionCall","src":"1080:25:33"},"nativeSrc":"1080:25:33","nodeType":"YulExpressionStatement","src":"1080:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"934:177:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1004:9:33","nodeType":"YulTypedName","src":"1004:9:33","type":""},{"name":"value0","nativeSrc":"1015:6:33","nodeType":"YulTypedName","src":"1015:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1026:4:33","nodeType":"YulTypedName","src":"1026:4:33","type":""}],"src":"934:177:33"},{"body":{"nativeSrc":"1186:110:33","nodeType":"YulBlock","src":"1186:110:33","statements":[{"body":{"nativeSrc":"1232:16:33","nodeType":"YulBlock","src":"1232:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1241:1:33","nodeType":"YulLiteral","src":"1241:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"1244:1:33","nodeType":"YulLiteral","src":"1244:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1234:6:33","nodeType":"YulIdentifier","src":"1234:6:33"},"nativeSrc":"1234:12:33","nodeType":"YulFunctionCall","src":"1234:12:33"},"nativeSrc":"1234:12:33","nodeType":"YulExpressionStatement","src":"1234:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1207:7:33","nodeType":"YulIdentifier","src":"1207:7:33"},{"name":"headStart","nativeSrc":"1216:9:33","nodeType":"YulIdentifier","src":"1216:9:33"}],"functionName":{"name":"sub","nativeSrc":"1203:3:33","nodeType":"YulIdentifier","src":"1203:3:33"},"nativeSrc":"1203:23:33","nodeType":"YulFunctionCall","src":"1203:23:33"},{"kind":"number","nativeSrc":"1228:2:33","nodeType":"YulLiteral","src":"1228:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1199:3:33","nodeType":"YulIdentifier","src":"1199:3:33"},"nativeSrc":"1199:32:33","nodeType":"YulFunctionCall","src":"1199:32:33"},"nativeSrc":"1196:52:33","nodeType":"YulIf","src":"1196:52:33"},{"nativeSrc":"1257:33:33","nodeType":"YulAssignment","src":"1257:33:33","value":{"arguments":[{"name":"headStart","nativeSrc":"1280:9:33","nodeType":"YulIdentifier","src":"1280:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"1267:12:33","nodeType":"YulIdentifier","src":"1267:12:33"},"nativeSrc":"1267:23:33","nodeType":"YulFunctionCall","src":"1267:23:33"},"variableNames":[{"name":"value0","nativeSrc":"1257:6:33","nodeType":"YulIdentifier","src":"1257:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"1116:180:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1152:9:33","nodeType":"YulTypedName","src":"1152:9:33","type":""},{"name":"dataEnd","nativeSrc":"1163:7:33","nodeType":"YulTypedName","src":"1163:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1175:6:33","nodeType":"YulTypedName","src":"1175:6:33","type":""}],"src":"1116:180:33"},{"body":{"nativeSrc":"1402:76:33","nodeType":"YulBlock","src":"1402:76:33","statements":[{"nativeSrc":"1412:26:33","nodeType":"YulAssignment","src":"1412:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"1424:9:33","nodeType":"YulIdentifier","src":"1424:9:33"},{"kind":"number","nativeSrc":"1435:2:33","nodeType":"YulLiteral","src":"1435:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1420:3:33","nodeType":"YulIdentifier","src":"1420:3:33"},"nativeSrc":"1420:18:33","nodeType":"YulFunctionCall","src":"1420:18:33"},"variableNames":[{"name":"tail","nativeSrc":"1412:4:33","nodeType":"YulIdentifier","src":"1412:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1454:9:33","nodeType":"YulIdentifier","src":"1454:9:33"},{"name":"value0","nativeSrc":"1465:6:33","nodeType":"YulIdentifier","src":"1465:6:33"}],"functionName":{"name":"mstore","nativeSrc":"1447:6:33","nodeType":"YulIdentifier","src":"1447:6:33"},"nativeSrc":"1447:25:33","nodeType":"YulFunctionCall","src":"1447:25:33"},"nativeSrc":"1447:25:33","nodeType":"YulExpressionStatement","src":"1447:25:33"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"1301:177:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1371:9:33","nodeType":"YulTypedName","src":"1371:9:33","type":""},{"name":"value0","nativeSrc":"1382:6:33","nodeType":"YulTypedName","src":"1382:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1393:4:33","nodeType":"YulTypedName","src":"1393:4:33","type":""}],"src":"1301:177:33"},{"body":{"nativeSrc":"1570:167:33","nodeType":"YulBlock","src":"1570:167:33","statements":[{"body":{"nativeSrc":"1616:16:33","nodeType":"YulBlock","src":"1616:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1625:1:33","nodeType":"YulLiteral","src":"1625:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"1628:1:33","nodeType":"YulLiteral","src":"1628:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1618:6:33","nodeType":"YulIdentifier","src":"1618:6:33"},"nativeSrc":"1618:12:33","nodeType":"YulFunctionCall","src":"1618:12:33"},"nativeSrc":"1618:12:33","nodeType":"YulExpressionStatement","src":"1618:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1591:7:33","nodeType":"YulIdentifier","src":"1591:7:33"},{"name":"headStart","nativeSrc":"1600:9:33","nodeType":"YulIdentifier","src":"1600:9:33"}],"functionName":{"name":"sub","nativeSrc":"1587:3:33","nodeType":"YulIdentifier","src":"1587:3:33"},"nativeSrc":"1587:23:33","nodeType":"YulFunctionCall","src":"1587:23:33"},{"kind":"number","nativeSrc":"1612:2:33","nodeType":"YulLiteral","src":"1612:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1583:3:33","nodeType":"YulIdentifier","src":"1583:3:33"},"nativeSrc":"1583:32:33","nodeType":"YulFunctionCall","src":"1583:32:33"},"nativeSrc":"1580:52:33","nodeType":"YulIf","src":"1580:52:33"},{"nativeSrc":"1641:33:33","nodeType":"YulAssignment","src":"1641:33:33","value":{"arguments":[{"name":"headStart","nativeSrc":"1664:9:33","nodeType":"YulIdentifier","src":"1664:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"1651:12:33","nodeType":"YulIdentifier","src":"1651:12:33"},"nativeSrc":"1651:23:33","nodeType":"YulFunctionCall","src":"1651:23:33"},"variableNames":[{"name":"value0","nativeSrc":"1641:6:33","nodeType":"YulIdentifier","src":"1641:6:33"}]},{"nativeSrc":"1683:48:33","nodeType":"YulAssignment","src":"1683:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1716:9:33","nodeType":"YulIdentifier","src":"1716:9:33"},{"kind":"number","nativeSrc":"1727:2:33","nodeType":"YulLiteral","src":"1727:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1712:3:33","nodeType":"YulIdentifier","src":"1712:3:33"},"nativeSrc":"1712:18:33","nodeType":"YulFunctionCall","src":"1712:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1693:18:33","nodeType":"YulIdentifier","src":"1693:18:33"},"nativeSrc":"1693:38:33","nodeType":"YulFunctionCall","src":"1693:38:33"},"variableNames":[{"name":"value1","nativeSrc":"1683:6:33","nodeType":"YulIdentifier","src":"1683:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"1483:254:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1528:9:33","nodeType":"YulTypedName","src":"1528:9:33","type":""},{"name":"dataEnd","nativeSrc":"1539:7:33","nodeType":"YulTypedName","src":"1539:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1551:6:33","nodeType":"YulTypedName","src":"1551:6:33","type":""},{"name":"value1","nativeSrc":"1559:6:33","nodeType":"YulTypedName","src":"1559:6:33","type":""}],"src":"1483:254:33"},{"body":{"nativeSrc":"1812:110:33","nodeType":"YulBlock","src":"1812:110:33","statements":[{"body":{"nativeSrc":"1858:16:33","nodeType":"YulBlock","src":"1858:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1867:1:33","nodeType":"YulLiteral","src":"1867:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"1870:1:33","nodeType":"YulLiteral","src":"1870:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1860:6:33","nodeType":"YulIdentifier","src":"1860:6:33"},"nativeSrc":"1860:12:33","nodeType":"YulFunctionCall","src":"1860:12:33"},"nativeSrc":"1860:12:33","nodeType":"YulExpressionStatement","src":"1860:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1833:7:33","nodeType":"YulIdentifier","src":"1833:7:33"},{"name":"headStart","nativeSrc":"1842:9:33","nodeType":"YulIdentifier","src":"1842:9:33"}],"functionName":{"name":"sub","nativeSrc":"1829:3:33","nodeType":"YulIdentifier","src":"1829:3:33"},"nativeSrc":"1829:23:33","nodeType":"YulFunctionCall","src":"1829:23:33"},{"kind":"number","nativeSrc":"1854:2:33","nodeType":"YulLiteral","src":"1854:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1825:3:33","nodeType":"YulIdentifier","src":"1825:3:33"},"nativeSrc":"1825:32:33","nodeType":"YulFunctionCall","src":"1825:32:33"},"nativeSrc":"1822:52:33","nodeType":"YulIf","src":"1822:52:33"},{"nativeSrc":"1883:33:33","nodeType":"YulAssignment","src":"1883:33:33","value":{"arguments":[{"name":"headStart","nativeSrc":"1906:9:33","nodeType":"YulIdentifier","src":"1906:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"1893:12:33","nodeType":"YulIdentifier","src":"1893:12:33"},"nativeSrc":"1893:23:33","nodeType":"YulFunctionCall","src":"1893:23:33"},"variableNames":[{"name":"value0","nativeSrc":"1883:6:33","nodeType":"YulIdentifier","src":"1883:6:33"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1742:180:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1778:9:33","nodeType":"YulTypedName","src":"1778:9:33","type":""},{"name":"dataEnd","nativeSrc":"1789:7:33","nodeType":"YulTypedName","src":"1789:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1801:6:33","nodeType":"YulTypedName","src":"1801:6:33","type":""}],"src":"1742:180:33"},{"body":{"nativeSrc":"2088:441:33","nodeType":"YulBlock","src":"2088:441:33","statements":[{"nativeSrc":"2098:27:33","nodeType":"YulAssignment","src":"2098:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2110:9:33","nodeType":"YulIdentifier","src":"2110:9:33"},{"kind":"number","nativeSrc":"2121:3:33","nodeType":"YulLiteral","src":"2121:3:33","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"2106:3:33","nodeType":"YulIdentifier","src":"2106:3:33"},"nativeSrc":"2106:19:33","nodeType":"YulFunctionCall","src":"2106:19:33"},"variableNames":[{"name":"tail","nativeSrc":"2098:4:33","nodeType":"YulIdentifier","src":"2098:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2141:9:33","nodeType":"YulIdentifier","src":"2141:9:33"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2162:6:33","nodeType":"YulIdentifier","src":"2162:6:33"}],"functionName":{"name":"mload","nativeSrc":"2156:5:33","nodeType":"YulIdentifier","src":"2156:5:33"},"nativeSrc":"2156:13:33","nodeType":"YulFunctionCall","src":"2156:13:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2179:3:33","nodeType":"YulLiteral","src":"2179:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"2184:1:33","nodeType":"YulLiteral","src":"2184:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2175:3:33","nodeType":"YulIdentifier","src":"2175:3:33"},"nativeSrc":"2175:11:33","nodeType":"YulFunctionCall","src":"2175:11:33"},{"kind":"number","nativeSrc":"2188:1:33","nodeType":"YulLiteral","src":"2188:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2171:3:33","nodeType":"YulIdentifier","src":"2171:3:33"},"nativeSrc":"2171:19:33","nodeType":"YulFunctionCall","src":"2171:19:33"}],"functionName":{"name":"and","nativeSrc":"2152:3:33","nodeType":"YulIdentifier","src":"2152:3:33"},"nativeSrc":"2152:39:33","nodeType":"YulFunctionCall","src":"2152:39:33"}],"functionName":{"name":"mstore","nativeSrc":"2134:6:33","nodeType":"YulIdentifier","src":"2134:6:33"},"nativeSrc":"2134:58:33","nodeType":"YulFunctionCall","src":"2134:58:33"},"nativeSrc":"2134:58:33","nodeType":"YulExpressionStatement","src":"2134:58:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2212:9:33","nodeType":"YulIdentifier","src":"2212:9:33"},{"kind":"number","nativeSrc":"2223:4:33","nodeType":"YulLiteral","src":"2223:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2208:3:33","nodeType":"YulIdentifier","src":"2208:3:33"},"nativeSrc":"2208:20:33","nodeType":"YulFunctionCall","src":"2208:20:33"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2240:6:33","nodeType":"YulIdentifier","src":"2240:6:33"},{"kind":"number","nativeSrc":"2248:4:33","nodeType":"YulLiteral","src":"2248:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2236:3:33","nodeType":"YulIdentifier","src":"2236:3:33"},"nativeSrc":"2236:17:33","nodeType":"YulFunctionCall","src":"2236:17:33"}],"functionName":{"name":"mload","nativeSrc":"2230:5:33","nodeType":"YulIdentifier","src":"2230:5:33"},"nativeSrc":"2230:24:33","nodeType":"YulFunctionCall","src":"2230:24:33"}],"functionName":{"name":"mstore","nativeSrc":"2201:6:33","nodeType":"YulIdentifier","src":"2201:6:33"},"nativeSrc":"2201:54:33","nodeType":"YulFunctionCall","src":"2201:54:33"},"nativeSrc":"2201:54:33","nodeType":"YulExpressionStatement","src":"2201:54:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2275:9:33","nodeType":"YulIdentifier","src":"2275:9:33"},{"kind":"number","nativeSrc":"2286:4:33","nodeType":"YulLiteral","src":"2286:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2271:3:33","nodeType":"YulIdentifier","src":"2271:3:33"},"nativeSrc":"2271:20:33","nodeType":"YulFunctionCall","src":"2271:20:33"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2303:6:33","nodeType":"YulIdentifier","src":"2303:6:33"},{"kind":"number","nativeSrc":"2311:4:33","nodeType":"YulLiteral","src":"2311:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2299:3:33","nodeType":"YulIdentifier","src":"2299:3:33"},"nativeSrc":"2299:17:33","nodeType":"YulFunctionCall","src":"2299:17:33"}],"functionName":{"name":"mload","nativeSrc":"2293:5:33","nodeType":"YulIdentifier","src":"2293:5:33"},"nativeSrc":"2293:24:33","nodeType":"YulFunctionCall","src":"2293:24:33"}],"functionName":{"name":"mstore","nativeSrc":"2264:6:33","nodeType":"YulIdentifier","src":"2264:6:33"},"nativeSrc":"2264:54:33","nodeType":"YulFunctionCall","src":"2264:54:33"},"nativeSrc":"2264:54:33","nodeType":"YulExpressionStatement","src":"2264:54:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2338:9:33","nodeType":"YulIdentifier","src":"2338:9:33"},{"kind":"number","nativeSrc":"2349:4:33","nodeType":"YulLiteral","src":"2349:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2334:3:33","nodeType":"YulIdentifier","src":"2334:3:33"},"nativeSrc":"2334:20:33","nodeType":"YulFunctionCall","src":"2334:20:33"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2366:6:33","nodeType":"YulIdentifier","src":"2366:6:33"},{"kind":"number","nativeSrc":"2374:4:33","nodeType":"YulLiteral","src":"2374:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2362:3:33","nodeType":"YulIdentifier","src":"2362:3:33"},"nativeSrc":"2362:17:33","nodeType":"YulFunctionCall","src":"2362:17:33"}],"functionName":{"name":"mload","nativeSrc":"2356:5:33","nodeType":"YulIdentifier","src":"2356:5:33"},"nativeSrc":"2356:24:33","nodeType":"YulFunctionCall","src":"2356:24:33"}],"functionName":{"name":"mstore","nativeSrc":"2327:6:33","nodeType":"YulIdentifier","src":"2327:6:33"},"nativeSrc":"2327:54:33","nodeType":"YulFunctionCall","src":"2327:54:33"},"nativeSrc":"2327:54:33","nodeType":"YulExpressionStatement","src":"2327:54:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2401:9:33","nodeType":"YulIdentifier","src":"2401:9:33"},{"kind":"number","nativeSrc":"2412:4:33","nodeType":"YulLiteral","src":"2412:4:33","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"2397:3:33","nodeType":"YulIdentifier","src":"2397:3:33"},"nativeSrc":"2397:20:33","nodeType":"YulFunctionCall","src":"2397:20:33"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2429:6:33","nodeType":"YulIdentifier","src":"2429:6:33"},{"kind":"number","nativeSrc":"2437:4:33","nodeType":"YulLiteral","src":"2437:4:33","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"2425:3:33","nodeType":"YulIdentifier","src":"2425:3:33"},"nativeSrc":"2425:17:33","nodeType":"YulFunctionCall","src":"2425:17:33"}],"functionName":{"name":"mload","nativeSrc":"2419:5:33","nodeType":"YulIdentifier","src":"2419:5:33"},"nativeSrc":"2419:24:33","nodeType":"YulFunctionCall","src":"2419:24:33"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:33","nodeType":"YulIdentifier","src":"2390:6:33"},"nativeSrc":"2390:54:33","nodeType":"YulFunctionCall","src":"2390:54:33"},"nativeSrc":"2390:54:33","nodeType":"YulExpressionStatement","src":"2390:54:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2464:9:33","nodeType":"YulIdentifier","src":"2464:9:33"},{"kind":"number","nativeSrc":"2475:4:33","nodeType":"YulLiteral","src":"2475:4:33","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"2460:3:33","nodeType":"YulIdentifier","src":"2460:3:33"},"nativeSrc":"2460:20:33","nodeType":"YulFunctionCall","src":"2460:20:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2506:6:33","nodeType":"YulIdentifier","src":"2506:6:33"},{"kind":"number","nativeSrc":"2514:4:33","nodeType":"YulLiteral","src":"2514:4:33","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"2502:3:33","nodeType":"YulIdentifier","src":"2502:3:33"},"nativeSrc":"2502:17:33","nodeType":"YulFunctionCall","src":"2502:17:33"}],"functionName":{"name":"mload","nativeSrc":"2496:5:33","nodeType":"YulIdentifier","src":"2496:5:33"},"nativeSrc":"2496:24:33","nodeType":"YulFunctionCall","src":"2496:24:33"}],"functionName":{"name":"iszero","nativeSrc":"2489:6:33","nodeType":"YulIdentifier","src":"2489:6:33"},"nativeSrc":"2489:32:33","nodeType":"YulFunctionCall","src":"2489:32:33"}],"functionName":{"name":"iszero","nativeSrc":"2482:6:33","nodeType":"YulIdentifier","src":"2482:6:33"},"nativeSrc":"2482:40:33","nodeType":"YulFunctionCall","src":"2482:40:33"}],"functionName":{"name":"mstore","nativeSrc":"2453:6:33","nodeType":"YulIdentifier","src":"2453:6:33"},"nativeSrc":"2453:70:33","nodeType":"YulFunctionCall","src":"2453:70:33"},"nativeSrc":"2453:70:33","nodeType":"YulExpressionStatement","src":"2453:70:33"}]},"name":"abi_encode_tuple_t_struct$_Distribution_$8892_memory_ptr__to_t_struct$_Distribution_$8892_memory_ptr__fromStack_reversed","nativeSrc":"1927:602:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2057:9:33","nodeType":"YulTypedName","src":"2057:9:33","type":""},{"name":"value0","nativeSrc":"2068:6:33","nodeType":"YulTypedName","src":"2068:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2079:4:33","nodeType":"YulTypedName","src":"2079:4:33","type":""}],"src":"1927:602:33"},{"body":{"nativeSrc":"2566:95:33","nodeType":"YulBlock","src":"2566:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2583:1:33","nodeType":"YulLiteral","src":"2583:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2590:3:33","nodeType":"YulLiteral","src":"2590:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"2595:10:33","nodeType":"YulLiteral","src":"2595:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2586:3:33","nodeType":"YulIdentifier","src":"2586:3:33"},"nativeSrc":"2586:20:33","nodeType":"YulFunctionCall","src":"2586:20:33"}],"functionName":{"name":"mstore","nativeSrc":"2576:6:33","nodeType":"YulIdentifier","src":"2576:6:33"},"nativeSrc":"2576:31:33","nodeType":"YulFunctionCall","src":"2576:31:33"},"nativeSrc":"2576:31:33","nodeType":"YulExpressionStatement","src":"2576:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2623:1:33","nodeType":"YulLiteral","src":"2623:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"2626:4:33","nodeType":"YulLiteral","src":"2626:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2616:6:33","nodeType":"YulIdentifier","src":"2616:6:33"},"nativeSrc":"2616:15:33","nodeType":"YulFunctionCall","src":"2616:15:33"},"nativeSrc":"2616:15:33","nodeType":"YulExpressionStatement","src":"2616:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2647:1:33","nodeType":"YulLiteral","src":"2647:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2650:4:33","nodeType":"YulLiteral","src":"2650:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2640:6:33","nodeType":"YulIdentifier","src":"2640:6:33"},"nativeSrc":"2640:15:33","nodeType":"YulFunctionCall","src":"2640:15:33"},"nativeSrc":"2640:15:33","nodeType":"YulExpressionStatement","src":"2640:15:33"}]},"name":"panic_error_0x41","nativeSrc":"2534:127:33","nodeType":"YulFunctionDefinition","src":"2534:127:33"},{"body":{"nativeSrc":"2762:899:33","nodeType":"YulBlock","src":"2762:899:33","statements":[{"body":{"nativeSrc":"2808:16:33","nodeType":"YulBlock","src":"2808:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2817:1:33","nodeType":"YulLiteral","src":"2817:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2820:1:33","nodeType":"YulLiteral","src":"2820:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2810:6:33","nodeType":"YulIdentifier","src":"2810:6:33"},"nativeSrc":"2810:12:33","nodeType":"YulFunctionCall","src":"2810:12:33"},"nativeSrc":"2810:12:33","nodeType":"YulExpressionStatement","src":"2810:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2783:7:33","nodeType":"YulIdentifier","src":"2783:7:33"},{"name":"headStart","nativeSrc":"2792:9:33","nodeType":"YulIdentifier","src":"2792:9:33"}],"functionName":{"name":"sub","nativeSrc":"2779:3:33","nodeType":"YulIdentifier","src":"2779:3:33"},"nativeSrc":"2779:23:33","nodeType":"YulFunctionCall","src":"2779:23:33"},{"kind":"number","nativeSrc":"2804:2:33","nodeType":"YulLiteral","src":"2804:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2775:3:33","nodeType":"YulIdentifier","src":"2775:3:33"},"nativeSrc":"2775:32:33","nodeType":"YulFunctionCall","src":"2775:32:33"},"nativeSrc":"2772:52:33","nodeType":"YulIf","src":"2772:52:33"},{"nativeSrc":"2833:39:33","nodeType":"YulAssignment","src":"2833:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2862:9:33","nodeType":"YulIdentifier","src":"2862:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2843:18:33","nodeType":"YulIdentifier","src":"2843:18:33"},"nativeSrc":"2843:29:33","nodeType":"YulFunctionCall","src":"2843:29:33"},"variableNames":[{"name":"value0","nativeSrc":"2833:6:33","nodeType":"YulIdentifier","src":"2833:6:33"}]},{"nativeSrc":"2881:46:33","nodeType":"YulVariableDeclaration","src":"2881:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2912:9:33","nodeType":"YulIdentifier","src":"2912:9:33"},{"kind":"number","nativeSrc":"2923:2:33","nodeType":"YulLiteral","src":"2923:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2908:3:33","nodeType":"YulIdentifier","src":"2908:3:33"},"nativeSrc":"2908:18:33","nodeType":"YulFunctionCall","src":"2908:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"2895:12:33","nodeType":"YulIdentifier","src":"2895:12:33"},"nativeSrc":"2895:32:33","nodeType":"YulFunctionCall","src":"2895:32:33"},"variables":[{"name":"offset","nativeSrc":"2885:6:33","nodeType":"YulTypedName","src":"2885:6:33","type":""}]},{"nativeSrc":"2936:28:33","nodeType":"YulVariableDeclaration","src":"2936:28:33","value":{"kind":"number","nativeSrc":"2946:18:33","nodeType":"YulLiteral","src":"2946:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"2940:2:33","nodeType":"YulTypedName","src":"2940:2:33","type":""}]},{"body":{"nativeSrc":"2991:16:33","nodeType":"YulBlock","src":"2991:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3000:1:33","nodeType":"YulLiteral","src":"3000:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3003:1:33","nodeType":"YulLiteral","src":"3003:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2993:6:33","nodeType":"YulIdentifier","src":"2993:6:33"},"nativeSrc":"2993:12:33","nodeType":"YulFunctionCall","src":"2993:12:33"},"nativeSrc":"2993:12:33","nodeType":"YulExpressionStatement","src":"2993:12:33"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2979:6:33","nodeType":"YulIdentifier","src":"2979:6:33"},{"name":"_1","nativeSrc":"2987:2:33","nodeType":"YulIdentifier","src":"2987:2:33"}],"functionName":{"name":"gt","nativeSrc":"2976:2:33","nodeType":"YulIdentifier","src":"2976:2:33"},"nativeSrc":"2976:14:33","nodeType":"YulFunctionCall","src":"2976:14:33"},"nativeSrc":"2973:34:33","nodeType":"YulIf","src":"2973:34:33"},{"nativeSrc":"3016:32:33","nodeType":"YulVariableDeclaration","src":"3016:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3030:9:33","nodeType":"YulIdentifier","src":"3030:9:33"},{"name":"offset","nativeSrc":"3041:6:33","nodeType":"YulIdentifier","src":"3041:6:33"}],"functionName":{"name":"add","nativeSrc":"3026:3:33","nodeType":"YulIdentifier","src":"3026:3:33"},"nativeSrc":"3026:22:33","nodeType":"YulFunctionCall","src":"3026:22:33"},"variables":[{"name":"_2","nativeSrc":"3020:2:33","nodeType":"YulTypedName","src":"3020:2:33","type":""}]},{"body":{"nativeSrc":"3096:16:33","nodeType":"YulBlock","src":"3096:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3105:1:33","nodeType":"YulLiteral","src":"3105:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3108:1:33","nodeType":"YulLiteral","src":"3108:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3098:6:33","nodeType":"YulIdentifier","src":"3098:6:33"},"nativeSrc":"3098:12:33","nodeType":"YulFunctionCall","src":"3098:12:33"},"nativeSrc":"3098:12:33","nodeType":"YulExpressionStatement","src":"3098:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"3075:2:33","nodeType":"YulIdentifier","src":"3075:2:33"},{"kind":"number","nativeSrc":"3079:4:33","nodeType":"YulLiteral","src":"3079:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3071:3:33","nodeType":"YulIdentifier","src":"3071:3:33"},"nativeSrc":"3071:13:33","nodeType":"YulFunctionCall","src":"3071:13:33"},{"name":"dataEnd","nativeSrc":"3086:7:33","nodeType":"YulIdentifier","src":"3086:7:33"}],"functionName":{"name":"slt","nativeSrc":"3067:3:33","nodeType":"YulIdentifier","src":"3067:3:33"},"nativeSrc":"3067:27:33","nodeType":"YulFunctionCall","src":"3067:27:33"}],"functionName":{"name":"iszero","nativeSrc":"3060:6:33","nodeType":"YulIdentifier","src":"3060:6:33"},"nativeSrc":"3060:35:33","nodeType":"YulFunctionCall","src":"3060:35:33"},"nativeSrc":"3057:55:33","nodeType":"YulIf","src":"3057:55:33"},{"nativeSrc":"3121:26:33","nodeType":"YulVariableDeclaration","src":"3121:26:33","value":{"arguments":[{"name":"_2","nativeSrc":"3144:2:33","nodeType":"YulIdentifier","src":"3144:2:33"}],"functionName":{"name":"calldataload","nativeSrc":"3131:12:33","nodeType":"YulIdentifier","src":"3131:12:33"},"nativeSrc":"3131:16:33","nodeType":"YulFunctionCall","src":"3131:16:33"},"variables":[{"name":"_3","nativeSrc":"3125:2:33","nodeType":"YulTypedName","src":"3125:2:33","type":""}]},{"body":{"nativeSrc":"3170:22:33","nodeType":"YulBlock","src":"3170:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3172:16:33","nodeType":"YulIdentifier","src":"3172:16:33"},"nativeSrc":"3172:18:33","nodeType":"YulFunctionCall","src":"3172:18:33"},"nativeSrc":"3172:18:33","nodeType":"YulExpressionStatement","src":"3172:18:33"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"3162:2:33","nodeType":"YulIdentifier","src":"3162:2:33"},{"name":"_1","nativeSrc":"3166:2:33","nodeType":"YulIdentifier","src":"3166:2:33"}],"functionName":{"name":"gt","nativeSrc":"3159:2:33","nodeType":"YulIdentifier","src":"3159:2:33"},"nativeSrc":"3159:10:33","nodeType":"YulFunctionCall","src":"3159:10:33"},"nativeSrc":"3156:36:33","nodeType":"YulIf","src":"3156:36:33"},{"nativeSrc":"3201:17:33","nodeType":"YulVariableDeclaration","src":"3201:17:33","value":{"arguments":[{"kind":"number","nativeSrc":"3215:2:33","nodeType":"YulLiteral","src":"3215:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3211:3:33","nodeType":"YulIdentifier","src":"3211:3:33"},"nativeSrc":"3211:7:33","nodeType":"YulFunctionCall","src":"3211:7:33"},"variables":[{"name":"_4","nativeSrc":"3205:2:33","nodeType":"YulTypedName","src":"3205:2:33","type":""}]},{"nativeSrc":"3227:23:33","nodeType":"YulVariableDeclaration","src":"3227:23:33","value":{"arguments":[{"kind":"number","nativeSrc":"3247:2:33","nodeType":"YulLiteral","src":"3247:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3241:5:33","nodeType":"YulIdentifier","src":"3241:5:33"},"nativeSrc":"3241:9:33","nodeType":"YulFunctionCall","src":"3241:9:33"},"variables":[{"name":"memPtr","nativeSrc":"3231:6:33","nodeType":"YulTypedName","src":"3231:6:33","type":""}]},{"nativeSrc":"3259:71:33","nodeType":"YulVariableDeclaration","src":"3259:71:33","value":{"arguments":[{"name":"memPtr","nativeSrc":"3281:6:33","nodeType":"YulIdentifier","src":"3281:6:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"3305:2:33","nodeType":"YulIdentifier","src":"3305:2:33"},{"kind":"number","nativeSrc":"3309:4:33","nodeType":"YulLiteral","src":"3309:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3301:3:33","nodeType":"YulIdentifier","src":"3301:3:33"},"nativeSrc":"3301:13:33","nodeType":"YulFunctionCall","src":"3301:13:33"},{"name":"_4","nativeSrc":"3316:2:33","nodeType":"YulIdentifier","src":"3316:2:33"}],"functionName":{"name":"and","nativeSrc":"3297:3:33","nodeType":"YulIdentifier","src":"3297:3:33"},"nativeSrc":"3297:22:33","nodeType":"YulFunctionCall","src":"3297:22:33"},{"kind":"number","nativeSrc":"3321:2:33","nodeType":"YulLiteral","src":"3321:2:33","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"3293:3:33","nodeType":"YulIdentifier","src":"3293:3:33"},"nativeSrc":"3293:31:33","nodeType":"YulFunctionCall","src":"3293:31:33"},{"name":"_4","nativeSrc":"3326:2:33","nodeType":"YulIdentifier","src":"3326:2:33"}],"functionName":{"name":"and","nativeSrc":"3289:3:33","nodeType":"YulIdentifier","src":"3289:3:33"},"nativeSrc":"3289:40:33","nodeType":"YulFunctionCall","src":"3289:40:33"}],"functionName":{"name":"add","nativeSrc":"3277:3:33","nodeType":"YulIdentifier","src":"3277:3:33"},"nativeSrc":"3277:53:33","nodeType":"YulFunctionCall","src":"3277:53:33"},"variables":[{"name":"newFreePtr","nativeSrc":"3263:10:33","nodeType":"YulTypedName","src":"3263:10:33","type":""}]},{"body":{"nativeSrc":"3389:22:33","nodeType":"YulBlock","src":"3389:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3391:16:33","nodeType":"YulIdentifier","src":"3391:16:33"},"nativeSrc":"3391:18:33","nodeType":"YulFunctionCall","src":"3391:18:33"},"nativeSrc":"3391:18:33","nodeType":"YulExpressionStatement","src":"3391:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3348:10:33","nodeType":"YulIdentifier","src":"3348:10:33"},{"name":"_1","nativeSrc":"3360:2:33","nodeType":"YulIdentifier","src":"3360:2:33"}],"functionName":{"name":"gt","nativeSrc":"3345:2:33","nodeType":"YulIdentifier","src":"3345:2:33"},"nativeSrc":"3345:18:33","nodeType":"YulFunctionCall","src":"3345:18:33"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3368:10:33","nodeType":"YulIdentifier","src":"3368:10:33"},{"name":"memPtr","nativeSrc":"3380:6:33","nodeType":"YulIdentifier","src":"3380:6:33"}],"functionName":{"name":"lt","nativeSrc":"3365:2:33","nodeType":"YulIdentifier","src":"3365:2:33"},"nativeSrc":"3365:22:33","nodeType":"YulFunctionCall","src":"3365:22:33"}],"functionName":{"name":"or","nativeSrc":"3342:2:33","nodeType":"YulIdentifier","src":"3342:2:33"},"nativeSrc":"3342:46:33","nodeType":"YulFunctionCall","src":"3342:46:33"},"nativeSrc":"3339:72:33","nodeType":"YulIf","src":"3339:72:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3427:2:33","nodeType":"YulLiteral","src":"3427:2:33","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3431:10:33","nodeType":"YulIdentifier","src":"3431:10:33"}],"functionName":{"name":"mstore","nativeSrc":"3420:6:33","nodeType":"YulIdentifier","src":"3420:6:33"},"nativeSrc":"3420:22:33","nodeType":"YulFunctionCall","src":"3420:22:33"},"nativeSrc":"3420:22:33","nodeType":"YulExpressionStatement","src":"3420:22:33"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3458:6:33","nodeType":"YulIdentifier","src":"3458:6:33"},{"name":"_3","nativeSrc":"3466:2:33","nodeType":"YulIdentifier","src":"3466:2:33"}],"functionName":{"name":"mstore","nativeSrc":"3451:6:33","nodeType":"YulIdentifier","src":"3451:6:33"},"nativeSrc":"3451:18:33","nodeType":"YulFunctionCall","src":"3451:18:33"},"nativeSrc":"3451:18:33","nodeType":"YulExpressionStatement","src":"3451:18:33"},{"body":{"nativeSrc":"3515:16:33","nodeType":"YulBlock","src":"3515:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3524:1:33","nodeType":"YulLiteral","src":"3524:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3527:1:33","nodeType":"YulLiteral","src":"3527:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3517:6:33","nodeType":"YulIdentifier","src":"3517:6:33"},"nativeSrc":"3517:12:33","nodeType":"YulFunctionCall","src":"3517:12:33"},"nativeSrc":"3517:12:33","nodeType":"YulExpressionStatement","src":"3517:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"3492:2:33","nodeType":"YulIdentifier","src":"3492:2:33"},{"name":"_3","nativeSrc":"3496:2:33","nodeType":"YulIdentifier","src":"3496:2:33"}],"functionName":{"name":"add","nativeSrc":"3488:3:33","nodeType":"YulIdentifier","src":"3488:3:33"},"nativeSrc":"3488:11:33","nodeType":"YulFunctionCall","src":"3488:11:33"},{"kind":"number","nativeSrc":"3501:2:33","nodeType":"YulLiteral","src":"3501:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3484:3:33","nodeType":"YulIdentifier","src":"3484:3:33"},"nativeSrc":"3484:20:33","nodeType":"YulFunctionCall","src":"3484:20:33"},{"name":"dataEnd","nativeSrc":"3506:7:33","nodeType":"YulIdentifier","src":"3506:7:33"}],"functionName":{"name":"gt","nativeSrc":"3481:2:33","nodeType":"YulIdentifier","src":"3481:2:33"},"nativeSrc":"3481:33:33","nodeType":"YulFunctionCall","src":"3481:33:33"},"nativeSrc":"3478:53:33","nodeType":"YulIf","src":"3478:53:33"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3557:6:33","nodeType":"YulIdentifier","src":"3557:6:33"},{"kind":"number","nativeSrc":"3565:2:33","nodeType":"YulLiteral","src":"3565:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3553:3:33","nodeType":"YulIdentifier","src":"3553:3:33"},"nativeSrc":"3553:15:33","nodeType":"YulFunctionCall","src":"3553:15:33"},{"arguments":[{"name":"_2","nativeSrc":"3574:2:33","nodeType":"YulIdentifier","src":"3574:2:33"},{"kind":"number","nativeSrc":"3578:2:33","nodeType":"YulLiteral","src":"3578:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3570:3:33","nodeType":"YulIdentifier","src":"3570:3:33"},"nativeSrc":"3570:11:33","nodeType":"YulFunctionCall","src":"3570:11:33"},{"name":"_3","nativeSrc":"3583:2:33","nodeType":"YulIdentifier","src":"3583:2:33"}],"functionName":{"name":"calldatacopy","nativeSrc":"3540:12:33","nodeType":"YulIdentifier","src":"3540:12:33"},"nativeSrc":"3540:46:33","nodeType":"YulFunctionCall","src":"3540:46:33"},"nativeSrc":"3540:46:33","nodeType":"YulExpressionStatement","src":"3540:46:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3610:6:33","nodeType":"YulIdentifier","src":"3610:6:33"},{"name":"_3","nativeSrc":"3618:2:33","nodeType":"YulIdentifier","src":"3618:2:33"}],"functionName":{"name":"add","nativeSrc":"3606:3:33","nodeType":"YulIdentifier","src":"3606:3:33"},"nativeSrc":"3606:15:33","nodeType":"YulFunctionCall","src":"3606:15:33"},{"kind":"number","nativeSrc":"3623:2:33","nodeType":"YulLiteral","src":"3623:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3602:3:33","nodeType":"YulIdentifier","src":"3602:3:33"},"nativeSrc":"3602:24:33","nodeType":"YulFunctionCall","src":"3602:24:33"},{"kind":"number","nativeSrc":"3628:1:33","nodeType":"YulLiteral","src":"3628:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3595:6:33","nodeType":"YulIdentifier","src":"3595:6:33"},"nativeSrc":"3595:35:33","nodeType":"YulFunctionCall","src":"3595:35:33"},"nativeSrc":"3595:35:33","nodeType":"YulExpressionStatement","src":"3595:35:33"},{"nativeSrc":"3639:16:33","nodeType":"YulAssignment","src":"3639:16:33","value":{"name":"memPtr","nativeSrc":"3649:6:33","nodeType":"YulIdentifier","src":"3649:6:33"},"variableNames":[{"name":"value1","nativeSrc":"3639:6:33","nodeType":"YulIdentifier","src":"3639:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"2666:995:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2720:9:33","nodeType":"YulTypedName","src":"2720:9:33","type":""},{"name":"dataEnd","nativeSrc":"2731:7:33","nodeType":"YulTypedName","src":"2731:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2743:6:33","nodeType":"YulTypedName","src":"2743:6:33","type":""},{"name":"value1","nativeSrc":"2751:6:33","nodeType":"YulTypedName","src":"2751:6:33","type":""}],"src":"2666:995:33"},{"body":{"nativeSrc":"3786:102:33","nodeType":"YulBlock","src":"3786:102:33","statements":[{"nativeSrc":"3796:26:33","nodeType":"YulAssignment","src":"3796:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3808:9:33","nodeType":"YulIdentifier","src":"3808:9:33"},{"kind":"number","nativeSrc":"3819:2:33","nodeType":"YulLiteral","src":"3819:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3804:3:33","nodeType":"YulIdentifier","src":"3804:3:33"},"nativeSrc":"3804:18:33","nodeType":"YulFunctionCall","src":"3804:18:33"},"variableNames":[{"name":"tail","nativeSrc":"3796:4:33","nodeType":"YulIdentifier","src":"3796:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3838:9:33","nodeType":"YulIdentifier","src":"3838:9:33"},{"arguments":[{"name":"value0","nativeSrc":"3853:6:33","nodeType":"YulIdentifier","src":"3853:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3869:3:33","nodeType":"YulLiteral","src":"3869:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"3874:1:33","nodeType":"YulLiteral","src":"3874:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3865:3:33","nodeType":"YulIdentifier","src":"3865:3:33"},"nativeSrc":"3865:11:33","nodeType":"YulFunctionCall","src":"3865:11:33"},{"kind":"number","nativeSrc":"3878:1:33","nodeType":"YulLiteral","src":"3878:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3861:3:33","nodeType":"YulIdentifier","src":"3861:3:33"},"nativeSrc":"3861:19:33","nodeType":"YulFunctionCall","src":"3861:19:33"}],"functionName":{"name":"and","nativeSrc":"3849:3:33","nodeType":"YulIdentifier","src":"3849:3:33"},"nativeSrc":"3849:32:33","nodeType":"YulFunctionCall","src":"3849:32:33"}],"functionName":{"name":"mstore","nativeSrc":"3831:6:33","nodeType":"YulIdentifier","src":"3831:6:33"},"nativeSrc":"3831:51:33","nodeType":"YulFunctionCall","src":"3831:51:33"},"nativeSrc":"3831:51:33","nodeType":"YulExpressionStatement","src":"3831:51:33"}]},"name":"abi_encode_tuple_t_contract$_RewardPool_$8840__to_t_address__fromStack_reversed","nativeSrc":"3666:222:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3755:9:33","nodeType":"YulTypedName","src":"3755:9:33","type":""},{"name":"value0","nativeSrc":"3766:6:33","nodeType":"YulTypedName","src":"3766:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3777:4:33","nodeType":"YulTypedName","src":"3777:4:33","type":""}],"src":"3666:222:33"},{"body":{"nativeSrc":"3959:184:33","nodeType":"YulBlock","src":"3959:184:33","statements":[{"nativeSrc":"3969:10:33","nodeType":"YulVariableDeclaration","src":"3969:10:33","value":{"kind":"number","nativeSrc":"3978:1:33","nodeType":"YulLiteral","src":"3978:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3973:1:33","nodeType":"YulTypedName","src":"3973:1:33","type":""}]},{"body":{"nativeSrc":"4038:63:33","nodeType":"YulBlock","src":"4038:63:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4063:3:33","nodeType":"YulIdentifier","src":"4063:3:33"},{"name":"i","nativeSrc":"4068:1:33","nodeType":"YulIdentifier","src":"4068:1:33"}],"functionName":{"name":"add","nativeSrc":"4059:3:33","nodeType":"YulIdentifier","src":"4059:3:33"},"nativeSrc":"4059:11:33","nodeType":"YulFunctionCall","src":"4059:11:33"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4082:3:33","nodeType":"YulIdentifier","src":"4082:3:33"},{"name":"i","nativeSrc":"4087:1:33","nodeType":"YulIdentifier","src":"4087:1:33"}],"functionName":{"name":"add","nativeSrc":"4078:3:33","nodeType":"YulIdentifier","src":"4078:3:33"},"nativeSrc":"4078:11:33","nodeType":"YulFunctionCall","src":"4078:11:33"}],"functionName":{"name":"mload","nativeSrc":"4072:5:33","nodeType":"YulIdentifier","src":"4072:5:33"},"nativeSrc":"4072:18:33","nodeType":"YulFunctionCall","src":"4072:18:33"}],"functionName":{"name":"mstore","nativeSrc":"4052:6:33","nodeType":"YulIdentifier","src":"4052:6:33"},"nativeSrc":"4052:39:33","nodeType":"YulFunctionCall","src":"4052:39:33"},"nativeSrc":"4052:39:33","nodeType":"YulExpressionStatement","src":"4052:39:33"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3999:1:33","nodeType":"YulIdentifier","src":"3999:1:33"},{"name":"length","nativeSrc":"4002:6:33","nodeType":"YulIdentifier","src":"4002:6:33"}],"functionName":{"name":"lt","nativeSrc":"3996:2:33","nodeType":"YulIdentifier","src":"3996:2:33"},"nativeSrc":"3996:13:33","nodeType":"YulFunctionCall","src":"3996:13:33"},"nativeSrc":"3988:113:33","nodeType":"YulForLoop","post":{"nativeSrc":"4010:19:33","nodeType":"YulBlock","src":"4010:19:33","statements":[{"nativeSrc":"4012:15:33","nodeType":"YulAssignment","src":"4012:15:33","value":{"arguments":[{"name":"i","nativeSrc":"4021:1:33","nodeType":"YulIdentifier","src":"4021:1:33"},{"kind":"number","nativeSrc":"4024:2:33","nodeType":"YulLiteral","src":"4024:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4017:3:33","nodeType":"YulIdentifier","src":"4017:3:33"},"nativeSrc":"4017:10:33","nodeType":"YulFunctionCall","src":"4017:10:33"},"variableNames":[{"name":"i","nativeSrc":"4012:1:33","nodeType":"YulIdentifier","src":"4012:1:33"}]}]},"pre":{"nativeSrc":"3992:3:33","nodeType":"YulBlock","src":"3992:3:33","statements":[]},"src":"3988:113:33"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4121:3:33","nodeType":"YulIdentifier","src":"4121:3:33"},{"name":"length","nativeSrc":"4126:6:33","nodeType":"YulIdentifier","src":"4126:6:33"}],"functionName":{"name":"add","nativeSrc":"4117:3:33","nodeType":"YulIdentifier","src":"4117:3:33"},"nativeSrc":"4117:16:33","nodeType":"YulFunctionCall","src":"4117:16:33"},{"kind":"number","nativeSrc":"4135:1:33","nodeType":"YulLiteral","src":"4135:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4110:6:33","nodeType":"YulIdentifier","src":"4110:6:33"},"nativeSrc":"4110:27:33","nodeType":"YulFunctionCall","src":"4110:27:33"},"nativeSrc":"4110:27:33","nodeType":"YulExpressionStatement","src":"4110:27:33"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3893:250:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3937:3:33","nodeType":"YulTypedName","src":"3937:3:33","type":""},{"name":"dst","nativeSrc":"3942:3:33","nodeType":"YulTypedName","src":"3942:3:33","type":""},{"name":"length","nativeSrc":"3947:6:33","nodeType":"YulTypedName","src":"3947:6:33","type":""}],"src":"3893:250:33"},{"body":{"nativeSrc":"4198:221:33","nodeType":"YulBlock","src":"4198:221:33","statements":[{"nativeSrc":"4208:26:33","nodeType":"YulVariableDeclaration","src":"4208:26:33","value":{"arguments":[{"name":"value","nativeSrc":"4228:5:33","nodeType":"YulIdentifier","src":"4228:5:33"}],"functionName":{"name":"mload","nativeSrc":"4222:5:33","nodeType":"YulIdentifier","src":"4222:5:33"},"nativeSrc":"4222:12:33","nodeType":"YulFunctionCall","src":"4222:12:33"},"variables":[{"name":"length","nativeSrc":"4212:6:33","nodeType":"YulTypedName","src":"4212:6:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4250:3:33","nodeType":"YulIdentifier","src":"4250:3:33"},{"name":"length","nativeSrc":"4255:6:33","nodeType":"YulIdentifier","src":"4255:6:33"}],"functionName":{"name":"mstore","nativeSrc":"4243:6:33","nodeType":"YulIdentifier","src":"4243:6:33"},"nativeSrc":"4243:19:33","nodeType":"YulFunctionCall","src":"4243:19:33"},"nativeSrc":"4243:19:33","nodeType":"YulExpressionStatement","src":"4243:19:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4310:5:33","nodeType":"YulIdentifier","src":"4310:5:33"},{"kind":"number","nativeSrc":"4317:4:33","nodeType":"YulLiteral","src":"4317:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4306:3:33","nodeType":"YulIdentifier","src":"4306:3:33"},"nativeSrc":"4306:16:33","nodeType":"YulFunctionCall","src":"4306:16:33"},{"arguments":[{"name":"pos","nativeSrc":"4328:3:33","nodeType":"YulIdentifier","src":"4328:3:33"},{"kind":"number","nativeSrc":"4333:4:33","nodeType":"YulLiteral","src":"4333:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4324:3:33","nodeType":"YulIdentifier","src":"4324:3:33"},"nativeSrc":"4324:14:33","nodeType":"YulFunctionCall","src":"4324:14:33"},{"name":"length","nativeSrc":"4340:6:33","nodeType":"YulIdentifier","src":"4340:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4271:34:33","nodeType":"YulIdentifier","src":"4271:34:33"},"nativeSrc":"4271:76:33","nodeType":"YulFunctionCall","src":"4271:76:33"},"nativeSrc":"4271:76:33","nodeType":"YulExpressionStatement","src":"4271:76:33"},{"nativeSrc":"4356:57:33","nodeType":"YulAssignment","src":"4356:57:33","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4371:3:33","nodeType":"YulIdentifier","src":"4371:3:33"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4384:6:33","nodeType":"YulIdentifier","src":"4384:6:33"},{"kind":"number","nativeSrc":"4392:2:33","nodeType":"YulLiteral","src":"4392:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4380:3:33","nodeType":"YulIdentifier","src":"4380:3:33"},"nativeSrc":"4380:15:33","nodeType":"YulFunctionCall","src":"4380:15:33"},{"arguments":[{"kind":"number","nativeSrc":"4401:2:33","nodeType":"YulLiteral","src":"4401:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4397:3:33","nodeType":"YulIdentifier","src":"4397:3:33"},"nativeSrc":"4397:7:33","nodeType":"YulFunctionCall","src":"4397:7:33"}],"functionName":{"name":"and","nativeSrc":"4376:3:33","nodeType":"YulIdentifier","src":"4376:3:33"},"nativeSrc":"4376:29:33","nodeType":"YulFunctionCall","src":"4376:29:33"}],"functionName":{"name":"add","nativeSrc":"4367:3:33","nodeType":"YulIdentifier","src":"4367:3:33"},"nativeSrc":"4367:39:33","nodeType":"YulFunctionCall","src":"4367:39:33"},{"kind":"number","nativeSrc":"4408:4:33","nodeType":"YulLiteral","src":"4408:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4363:3:33","nodeType":"YulIdentifier","src":"4363:3:33"},"nativeSrc":"4363:50:33","nodeType":"YulFunctionCall","src":"4363:50:33"},"variableNames":[{"name":"end","nativeSrc":"4356:3:33","nodeType":"YulIdentifier","src":"4356:3:33"}]}]},"name":"abi_encode_string","nativeSrc":"4148:271:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4175:5:33","nodeType":"YulTypedName","src":"4175:5:33","type":""},{"name":"pos","nativeSrc":"4182:3:33","nodeType":"YulTypedName","src":"4182:3:33","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4190:3:33","nodeType":"YulTypedName","src":"4190:3:33","type":""}],"src":"4148:271:33"},{"body":{"nativeSrc":"4781:902:33","nodeType":"YulBlock","src":"4781:902:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4798:9:33","nodeType":"YulIdentifier","src":"4798:9:33"},{"arguments":[{"name":"value0","nativeSrc":"4813:6:33","nodeType":"YulIdentifier","src":"4813:6:33"},{"arguments":[{"kind":"number","nativeSrc":"4825:3:33","nodeType":"YulLiteral","src":"4825:3:33","type":"","value":"248"},{"kind":"number","nativeSrc":"4830:3:33","nodeType":"YulLiteral","src":"4830:3:33","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"4821:3:33","nodeType":"YulIdentifier","src":"4821:3:33"},"nativeSrc":"4821:13:33","nodeType":"YulFunctionCall","src":"4821:13:33"}],"functionName":{"name":"and","nativeSrc":"4809:3:33","nodeType":"YulIdentifier","src":"4809:3:33"},"nativeSrc":"4809:26:33","nodeType":"YulFunctionCall","src":"4809:26:33"}],"functionName":{"name":"mstore","nativeSrc":"4791:6:33","nodeType":"YulIdentifier","src":"4791:6:33"},"nativeSrc":"4791:45:33","nodeType":"YulFunctionCall","src":"4791:45:33"},"nativeSrc":"4791:45:33","nodeType":"YulExpressionStatement","src":"4791:45:33"},{"nativeSrc":"4845:12:33","nodeType":"YulVariableDeclaration","src":"4845:12:33","value":{"kind":"number","nativeSrc":"4855:2:33","nodeType":"YulLiteral","src":"4855:2:33","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"4849:2:33","nodeType":"YulTypedName","src":"4849:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4877:9:33","nodeType":"YulIdentifier","src":"4877:9:33"},{"kind":"number","nativeSrc":"4888:2:33","nodeType":"YulLiteral","src":"4888:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4873:3:33","nodeType":"YulIdentifier","src":"4873:3:33"},"nativeSrc":"4873:18:33","nodeType":"YulFunctionCall","src":"4873:18:33"},{"kind":"number","nativeSrc":"4893:3:33","nodeType":"YulLiteral","src":"4893:3:33","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"4866:6:33","nodeType":"YulIdentifier","src":"4866:6:33"},"nativeSrc":"4866:31:33","nodeType":"YulFunctionCall","src":"4866:31:33"},"nativeSrc":"4866:31:33","nodeType":"YulExpressionStatement","src":"4866:31:33"},{"nativeSrc":"4906:60:33","nodeType":"YulVariableDeclaration","src":"4906:60:33","value":{"arguments":[{"name":"value1","nativeSrc":"4938:6:33","nodeType":"YulIdentifier","src":"4938:6:33"},{"arguments":[{"name":"headStart","nativeSrc":"4950:9:33","nodeType":"YulIdentifier","src":"4950:9:33"},{"kind":"number","nativeSrc":"4961:3:33","nodeType":"YulLiteral","src":"4961:3:33","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"4946:3:33","nodeType":"YulIdentifier","src":"4946:3:33"},"nativeSrc":"4946:19:33","nodeType":"YulFunctionCall","src":"4946:19:33"}],"functionName":{"name":"abi_encode_string","nativeSrc":"4920:17:33","nodeType":"YulIdentifier","src":"4920:17:33"},"nativeSrc":"4920:46:33","nodeType":"YulFunctionCall","src":"4920:46:33"},"variables":[{"name":"tail_1","nativeSrc":"4910:6:33","nodeType":"YulTypedName","src":"4910:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4986:9:33","nodeType":"YulIdentifier","src":"4986:9:33"},{"kind":"number","nativeSrc":"4997:2:33","nodeType":"YulLiteral","src":"4997:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4982:3:33","nodeType":"YulIdentifier","src":"4982:3:33"},"nativeSrc":"4982:18:33","nodeType":"YulFunctionCall","src":"4982:18:33"},{"arguments":[{"name":"tail_1","nativeSrc":"5006:6:33","nodeType":"YulIdentifier","src":"5006:6:33"},{"name":"headStart","nativeSrc":"5014:9:33","nodeType":"YulIdentifier","src":"5014:9:33"}],"functionName":{"name":"sub","nativeSrc":"5002:3:33","nodeType":"YulIdentifier","src":"5002:3:33"},"nativeSrc":"5002:22:33","nodeType":"YulFunctionCall","src":"5002:22:33"}],"functionName":{"name":"mstore","nativeSrc":"4975:6:33","nodeType":"YulIdentifier","src":"4975:6:33"},"nativeSrc":"4975:50:33","nodeType":"YulFunctionCall","src":"4975:50:33"},"nativeSrc":"4975:50:33","nodeType":"YulExpressionStatement","src":"4975:50:33"},{"nativeSrc":"5034:47:33","nodeType":"YulVariableDeclaration","src":"5034:47:33","value":{"arguments":[{"name":"value2","nativeSrc":"5066:6:33","nodeType":"YulIdentifier","src":"5066:6:33"},{"name":"tail_1","nativeSrc":"5074:6:33","nodeType":"YulIdentifier","src":"5074:6:33"}],"functionName":{"name":"abi_encode_string","nativeSrc":"5048:17:33","nodeType":"YulIdentifier","src":"5048:17:33"},"nativeSrc":"5048:33:33","nodeType":"YulFunctionCall","src":"5048:33:33"},"variables":[{"name":"tail_2","nativeSrc":"5038:6:33","nodeType":"YulTypedName","src":"5038:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5101:9:33","nodeType":"YulIdentifier","src":"5101:9:33"},{"kind":"number","nativeSrc":"5112:2:33","nodeType":"YulLiteral","src":"5112:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5097:3:33","nodeType":"YulIdentifier","src":"5097:3:33"},"nativeSrc":"5097:18:33","nodeType":"YulFunctionCall","src":"5097:18:33"},{"name":"value3","nativeSrc":"5117:6:33","nodeType":"YulIdentifier","src":"5117:6:33"}],"functionName":{"name":"mstore","nativeSrc":"5090:6:33","nodeType":"YulIdentifier","src":"5090:6:33"},"nativeSrc":"5090:34:33","nodeType":"YulFunctionCall","src":"5090:34:33"},"nativeSrc":"5090:34:33","nodeType":"YulExpressionStatement","src":"5090:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5144:9:33","nodeType":"YulIdentifier","src":"5144:9:33"},{"kind":"number","nativeSrc":"5155:3:33","nodeType":"YulLiteral","src":"5155:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5140:3:33","nodeType":"YulIdentifier","src":"5140:3:33"},"nativeSrc":"5140:19:33","nodeType":"YulFunctionCall","src":"5140:19:33"},{"arguments":[{"name":"value4","nativeSrc":"5165:6:33","nodeType":"YulIdentifier","src":"5165:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5181:3:33","nodeType":"YulLiteral","src":"5181:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"5186:1:33","nodeType":"YulLiteral","src":"5186:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5177:3:33","nodeType":"YulIdentifier","src":"5177:3:33"},"nativeSrc":"5177:11:33","nodeType":"YulFunctionCall","src":"5177:11:33"},{"kind":"number","nativeSrc":"5190:1:33","nodeType":"YulLiteral","src":"5190:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5173:3:33","nodeType":"YulIdentifier","src":"5173:3:33"},"nativeSrc":"5173:19:33","nodeType":"YulFunctionCall","src":"5173:19:33"}],"functionName":{"name":"and","nativeSrc":"5161:3:33","nodeType":"YulIdentifier","src":"5161:3:33"},"nativeSrc":"5161:32:33","nodeType":"YulFunctionCall","src":"5161:32:33"}],"functionName":{"name":"mstore","nativeSrc":"5133:6:33","nodeType":"YulIdentifier","src":"5133:6:33"},"nativeSrc":"5133:61:33","nodeType":"YulFunctionCall","src":"5133:61:33"},"nativeSrc":"5133:61:33","nodeType":"YulExpressionStatement","src":"5133:61:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5214:9:33","nodeType":"YulIdentifier","src":"5214:9:33"},{"kind":"number","nativeSrc":"5225:3:33","nodeType":"YulLiteral","src":"5225:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5210:3:33","nodeType":"YulIdentifier","src":"5210:3:33"},"nativeSrc":"5210:19:33","nodeType":"YulFunctionCall","src":"5210:19:33"},{"name":"value5","nativeSrc":"5231:6:33","nodeType":"YulIdentifier","src":"5231:6:33"}],"functionName":{"name":"mstore","nativeSrc":"5203:6:33","nodeType":"YulIdentifier","src":"5203:6:33"},"nativeSrc":"5203:35:33","nodeType":"YulFunctionCall","src":"5203:35:33"},"nativeSrc":"5203:35:33","nodeType":"YulExpressionStatement","src":"5203:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5258:9:33","nodeType":"YulIdentifier","src":"5258:9:33"},{"kind":"number","nativeSrc":"5269:3:33","nodeType":"YulLiteral","src":"5269:3:33","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"5254:3:33","nodeType":"YulIdentifier","src":"5254:3:33"},"nativeSrc":"5254:19:33","nodeType":"YulFunctionCall","src":"5254:19:33"},{"arguments":[{"name":"tail_2","nativeSrc":"5279:6:33","nodeType":"YulIdentifier","src":"5279:6:33"},{"name":"headStart","nativeSrc":"5287:9:33","nodeType":"YulIdentifier","src":"5287:9:33"}],"functionName":{"name":"sub","nativeSrc":"5275:3:33","nodeType":"YulIdentifier","src":"5275:3:33"},"nativeSrc":"5275:22:33","nodeType":"YulFunctionCall","src":"5275:22:33"}],"functionName":{"name":"mstore","nativeSrc":"5247:6:33","nodeType":"YulIdentifier","src":"5247:6:33"},"nativeSrc":"5247:51:33","nodeType":"YulFunctionCall","src":"5247:51:33"},"nativeSrc":"5247:51:33","nodeType":"YulExpressionStatement","src":"5247:51:33"},{"nativeSrc":"5307:17:33","nodeType":"YulVariableDeclaration","src":"5307:17:33","value":{"name":"tail_2","nativeSrc":"5318:6:33","nodeType":"YulIdentifier","src":"5318:6:33"},"variables":[{"name":"pos","nativeSrc":"5311:3:33","nodeType":"YulTypedName","src":"5311:3:33","type":""}]},{"nativeSrc":"5333:27:33","nodeType":"YulVariableDeclaration","src":"5333:27:33","value":{"arguments":[{"name":"value6","nativeSrc":"5353:6:33","nodeType":"YulIdentifier","src":"5353:6:33"}],"functionName":{"name":"mload","nativeSrc":"5347:5:33","nodeType":"YulIdentifier","src":"5347:5:33"},"nativeSrc":"5347:13:33","nodeType":"YulFunctionCall","src":"5347:13:33"},"variables":[{"name":"length","nativeSrc":"5337:6:33","nodeType":"YulTypedName","src":"5337:6:33","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"5376:6:33","nodeType":"YulIdentifier","src":"5376:6:33"},{"name":"length","nativeSrc":"5384:6:33","nodeType":"YulIdentifier","src":"5384:6:33"}],"functionName":{"name":"mstore","nativeSrc":"5369:6:33","nodeType":"YulIdentifier","src":"5369:6:33"},"nativeSrc":"5369:22:33","nodeType":"YulFunctionCall","src":"5369:22:33"},"nativeSrc":"5369:22:33","nodeType":"YulExpressionStatement","src":"5369:22:33"},{"nativeSrc":"5400:22:33","nodeType":"YulAssignment","src":"5400:22:33","value":{"arguments":[{"name":"tail_2","nativeSrc":"5411:6:33","nodeType":"YulIdentifier","src":"5411:6:33"},{"kind":"number","nativeSrc":"5419:2:33","nodeType":"YulLiteral","src":"5419:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5407:3:33","nodeType":"YulIdentifier","src":"5407:3:33"},"nativeSrc":"5407:15:33","nodeType":"YulFunctionCall","src":"5407:15:33"},"variableNames":[{"name":"pos","nativeSrc":"5400:3:33","nodeType":"YulIdentifier","src":"5400:3:33"}]},{"nativeSrc":"5431:29:33","nodeType":"YulVariableDeclaration","src":"5431:29:33","value":{"arguments":[{"name":"value6","nativeSrc":"5449:6:33","nodeType":"YulIdentifier","src":"5449:6:33"},{"kind":"number","nativeSrc":"5457:2:33","nodeType":"YulLiteral","src":"5457:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5445:3:33","nodeType":"YulIdentifier","src":"5445:3:33"},"nativeSrc":"5445:15:33","nodeType":"YulFunctionCall","src":"5445:15:33"},"variables":[{"name":"srcPtr","nativeSrc":"5435:6:33","nodeType":"YulTypedName","src":"5435:6:33","type":""}]},{"nativeSrc":"5469:10:33","nodeType":"YulVariableDeclaration","src":"5469:10:33","value":{"kind":"number","nativeSrc":"5478:1:33","nodeType":"YulLiteral","src":"5478:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5473:1:33","nodeType":"YulTypedName","src":"5473:1:33","type":""}]},{"body":{"nativeSrc":"5537:120:33","nodeType":"YulBlock","src":"5537:120:33","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5558:3:33","nodeType":"YulIdentifier","src":"5558:3:33"},{"arguments":[{"name":"srcPtr","nativeSrc":"5569:6:33","nodeType":"YulIdentifier","src":"5569:6:33"}],"functionName":{"name":"mload","nativeSrc":"5563:5:33","nodeType":"YulIdentifier","src":"5563:5:33"},"nativeSrc":"5563:13:33","nodeType":"YulFunctionCall","src":"5563:13:33"}],"functionName":{"name":"mstore","nativeSrc":"5551:6:33","nodeType":"YulIdentifier","src":"5551:6:33"},"nativeSrc":"5551:26:33","nodeType":"YulFunctionCall","src":"5551:26:33"},"nativeSrc":"5551:26:33","nodeType":"YulExpressionStatement","src":"5551:26:33"},{"nativeSrc":"5590:19:33","nodeType":"YulAssignment","src":"5590:19:33","value":{"arguments":[{"name":"pos","nativeSrc":"5601:3:33","nodeType":"YulIdentifier","src":"5601:3:33"},{"name":"_1","nativeSrc":"5606:2:33","nodeType":"YulIdentifier","src":"5606:2:33"}],"functionName":{"name":"add","nativeSrc":"5597:3:33","nodeType":"YulIdentifier","src":"5597:3:33"},"nativeSrc":"5597:12:33","nodeType":"YulFunctionCall","src":"5597:12:33"},"variableNames":[{"name":"pos","nativeSrc":"5590:3:33","nodeType":"YulIdentifier","src":"5590:3:33"}]},{"nativeSrc":"5622:25:33","nodeType":"YulAssignment","src":"5622:25:33","value":{"arguments":[{"name":"srcPtr","nativeSrc":"5636:6:33","nodeType":"YulIdentifier","src":"5636:6:33"},{"name":"_1","nativeSrc":"5644:2:33","nodeType":"YulIdentifier","src":"5644:2:33"}],"functionName":{"name":"add","nativeSrc":"5632:3:33","nodeType":"YulIdentifier","src":"5632:3:33"},"nativeSrc":"5632:15:33","nodeType":"YulFunctionCall","src":"5632:15:33"},"variableNames":[{"name":"srcPtr","nativeSrc":"5622:6:33","nodeType":"YulIdentifier","src":"5622:6:33"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5499:1:33","nodeType":"YulIdentifier","src":"5499:1:33"},{"name":"length","nativeSrc":"5502:6:33","nodeType":"YulIdentifier","src":"5502:6:33"}],"functionName":{"name":"lt","nativeSrc":"5496:2:33","nodeType":"YulIdentifier","src":"5496:2:33"},"nativeSrc":"5496:13:33","nodeType":"YulFunctionCall","src":"5496:13:33"},"nativeSrc":"5488:169:33","nodeType":"YulForLoop","post":{"nativeSrc":"5510:18:33","nodeType":"YulBlock","src":"5510:18:33","statements":[{"nativeSrc":"5512:14:33","nodeType":"YulAssignment","src":"5512:14:33","value":{"arguments":[{"name":"i","nativeSrc":"5521:1:33","nodeType":"YulIdentifier","src":"5521:1:33"},{"kind":"number","nativeSrc":"5524:1:33","nodeType":"YulLiteral","src":"5524:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5517:3:33","nodeType":"YulIdentifier","src":"5517:3:33"},"nativeSrc":"5517:9:33","nodeType":"YulFunctionCall","src":"5517:9:33"},"variableNames":[{"name":"i","nativeSrc":"5512:1:33","nodeType":"YulIdentifier","src":"5512:1:33"}]}]},"pre":{"nativeSrc":"5492:3:33","nodeType":"YulBlock","src":"5492:3:33","statements":[]},"src":"5488:169:33"},{"nativeSrc":"5666:11:33","nodeType":"YulAssignment","src":"5666:11:33","value":{"name":"pos","nativeSrc":"5674:3:33","nodeType":"YulIdentifier","src":"5674:3:33"},"variableNames":[{"name":"tail","nativeSrc":"5666:4:33","nodeType":"YulIdentifier","src":"5666:4:33"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"4424:1259:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4702:9:33","nodeType":"YulTypedName","src":"4702:9:33","type":""},{"name":"value6","nativeSrc":"4713:6:33","nodeType":"YulTypedName","src":"4713:6:33","type":""},{"name":"value5","nativeSrc":"4721:6:33","nodeType":"YulTypedName","src":"4721:6:33","type":""},{"name":"value4","nativeSrc":"4729:6:33","nodeType":"YulTypedName","src":"4729:6:33","type":""},{"name":"value3","nativeSrc":"4737:6:33","nodeType":"YulTypedName","src":"4737:6:33","type":""},{"name":"value2","nativeSrc":"4745:6:33","nodeType":"YulTypedName","src":"4745:6:33","type":""},{"name":"value1","nativeSrc":"4753:6:33","nodeType":"YulTypedName","src":"4753:6:33","type":""},{"name":"value0","nativeSrc":"4761:6:33","nodeType":"YulTypedName","src":"4761:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4772:4:33","nodeType":"YulTypedName","src":"4772:4:33","type":""}],"src":"4424:1259:33"},{"body":{"nativeSrc":"5809:99:33","nodeType":"YulBlock","src":"5809:99:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5826:9:33","nodeType":"YulIdentifier","src":"5826:9:33"},{"kind":"number","nativeSrc":"5837:2:33","nodeType":"YulLiteral","src":"5837:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5819:6:33","nodeType":"YulIdentifier","src":"5819:6:33"},"nativeSrc":"5819:21:33","nodeType":"YulFunctionCall","src":"5819:21:33"},"nativeSrc":"5819:21:33","nodeType":"YulExpressionStatement","src":"5819:21:33"},{"nativeSrc":"5849:53:33","nodeType":"YulAssignment","src":"5849:53:33","value":{"arguments":[{"name":"value0","nativeSrc":"5875:6:33","nodeType":"YulIdentifier","src":"5875:6:33"},{"arguments":[{"name":"headStart","nativeSrc":"5887:9:33","nodeType":"YulIdentifier","src":"5887:9:33"},{"kind":"number","nativeSrc":"5898:2:33","nodeType":"YulLiteral","src":"5898:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5883:3:33","nodeType":"YulIdentifier","src":"5883:3:33"},"nativeSrc":"5883:18:33","nodeType":"YulFunctionCall","src":"5883:18:33"}],"functionName":{"name":"abi_encode_string","nativeSrc":"5857:17:33","nodeType":"YulIdentifier","src":"5857:17:33"},"nativeSrc":"5857:45:33","nodeType":"YulFunctionCall","src":"5857:45:33"},"variableNames":[{"name":"tail","nativeSrc":"5849:4:33","nodeType":"YulIdentifier","src":"5849:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5688:220:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5778:9:33","nodeType":"YulTypedName","src":"5778:9:33","type":""},{"name":"value0","nativeSrc":"5789:6:33","nodeType":"YulTypedName","src":"5789:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5800:4:33","nodeType":"YulTypedName","src":"5800:4:33","type":""}],"src":"5688:220:33"},{"body":{"nativeSrc":"6017:230:33","nodeType":"YulBlock","src":"6017:230:33","statements":[{"body":{"nativeSrc":"6063:16:33","nodeType":"YulBlock","src":"6063:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6072:1:33","nodeType":"YulLiteral","src":"6072:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"6075:1:33","nodeType":"YulLiteral","src":"6075:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6065:6:33","nodeType":"YulIdentifier","src":"6065:6:33"},"nativeSrc":"6065:12:33","nodeType":"YulFunctionCall","src":"6065:12:33"},"nativeSrc":"6065:12:33","nodeType":"YulExpressionStatement","src":"6065:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6038:7:33","nodeType":"YulIdentifier","src":"6038:7:33"},{"name":"headStart","nativeSrc":"6047:9:33","nodeType":"YulIdentifier","src":"6047:9:33"}],"functionName":{"name":"sub","nativeSrc":"6034:3:33","nodeType":"YulIdentifier","src":"6034:3:33"},"nativeSrc":"6034:23:33","nodeType":"YulFunctionCall","src":"6034:23:33"},{"kind":"number","nativeSrc":"6059:2:33","nodeType":"YulLiteral","src":"6059:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6030:3:33","nodeType":"YulIdentifier","src":"6030:3:33"},"nativeSrc":"6030:32:33","nodeType":"YulFunctionCall","src":"6030:32:33"},"nativeSrc":"6027:52:33","nodeType":"YulIf","src":"6027:52:33"},{"nativeSrc":"6088:39:33","nodeType":"YulAssignment","src":"6088:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"6117:9:33","nodeType":"YulIdentifier","src":"6117:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6098:18:33","nodeType":"YulIdentifier","src":"6098:18:33"},"nativeSrc":"6098:29:33","nodeType":"YulFunctionCall","src":"6098:29:33"},"variableNames":[{"name":"value0","nativeSrc":"6088:6:33","nodeType":"YulIdentifier","src":"6088:6:33"}]},{"nativeSrc":"6136:48:33","nodeType":"YulAssignment","src":"6136:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6169:9:33","nodeType":"YulIdentifier","src":"6169:9:33"},{"kind":"number","nativeSrc":"6180:2:33","nodeType":"YulLiteral","src":"6180:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6165:3:33","nodeType":"YulIdentifier","src":"6165:3:33"},"nativeSrc":"6165:18:33","nodeType":"YulFunctionCall","src":"6165:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6146:18:33","nodeType":"YulIdentifier","src":"6146:18:33"},"nativeSrc":"6146:38:33","nodeType":"YulFunctionCall","src":"6146:38:33"},"variableNames":[{"name":"value1","nativeSrc":"6136:6:33","nodeType":"YulIdentifier","src":"6136:6:33"}]},{"nativeSrc":"6193:48:33","nodeType":"YulAssignment","src":"6193:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6226:9:33","nodeType":"YulIdentifier","src":"6226:9:33"},{"kind":"number","nativeSrc":"6237:2:33","nodeType":"YulLiteral","src":"6237:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6222:3:33","nodeType":"YulIdentifier","src":"6222:3:33"},"nativeSrc":"6222:18:33","nodeType":"YulFunctionCall","src":"6222:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6203:18:33","nodeType":"YulIdentifier","src":"6203:18:33"},"nativeSrc":"6203:38:33","nodeType":"YulFunctionCall","src":"6203:38:33"},"variableNames":[{"name":"value2","nativeSrc":"6193:6:33","nodeType":"YulIdentifier","src":"6193:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address","nativeSrc":"5913:334:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5967:9:33","nodeType":"YulTypedName","src":"5967:9:33","type":""},{"name":"dataEnd","nativeSrc":"5978:7:33","nodeType":"YulTypedName","src":"5978:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5990:6:33","nodeType":"YulTypedName","src":"5990:6:33","type":""},{"name":"value1","nativeSrc":"5998:6:33","nodeType":"YulTypedName","src":"5998:6:33","type":""},{"name":"value2","nativeSrc":"6006:6:33","nodeType":"YulTypedName","src":"6006:6:33","type":""}],"src":"5913:334:33"},{"body":{"nativeSrc":"6426:766:33","nodeType":"YulBlock","src":"6426:766:33","statements":[{"body":{"nativeSrc":"6473:16:33","nodeType":"YulBlock","src":"6473:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6482:1:33","nodeType":"YulLiteral","src":"6482:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"6485:1:33","nodeType":"YulLiteral","src":"6485:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6475:6:33","nodeType":"YulIdentifier","src":"6475:6:33"},"nativeSrc":"6475:12:33","nodeType":"YulFunctionCall","src":"6475:12:33"},"nativeSrc":"6475:12:33","nodeType":"YulExpressionStatement","src":"6475:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6447:7:33","nodeType":"YulIdentifier","src":"6447:7:33"},{"name":"headStart","nativeSrc":"6456:9:33","nodeType":"YulIdentifier","src":"6456:9:33"}],"functionName":{"name":"sub","nativeSrc":"6443:3:33","nodeType":"YulIdentifier","src":"6443:3:33"},"nativeSrc":"6443:23:33","nodeType":"YulFunctionCall","src":"6443:23:33"},{"kind":"number","nativeSrc":"6468:3:33","nodeType":"YulLiteral","src":"6468:3:33","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"6439:3:33","nodeType":"YulIdentifier","src":"6439:3:33"},"nativeSrc":"6439:33:33","nodeType":"YulFunctionCall","src":"6439:33:33"},"nativeSrc":"6436:53:33","nodeType":"YulIf","src":"6436:53:33"},{"nativeSrc":"6498:33:33","nodeType":"YulAssignment","src":"6498:33:33","value":{"arguments":[{"name":"headStart","nativeSrc":"6521:9:33","nodeType":"YulIdentifier","src":"6521:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"6508:12:33","nodeType":"YulIdentifier","src":"6508:12:33"},"nativeSrc":"6508:23:33","nodeType":"YulFunctionCall","src":"6508:23:33"},"variableNames":[{"name":"value0","nativeSrc":"6498:6:33","nodeType":"YulIdentifier","src":"6498:6:33"}]},{"nativeSrc":"6540:42:33","nodeType":"YulAssignment","src":"6540:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6567:9:33","nodeType":"YulIdentifier","src":"6567:9:33"},{"kind":"number","nativeSrc":"6578:2:33","nodeType":"YulLiteral","src":"6578:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6563:3:33","nodeType":"YulIdentifier","src":"6563:3:33"},"nativeSrc":"6563:18:33","nodeType":"YulFunctionCall","src":"6563:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"6550:12:33","nodeType":"YulIdentifier","src":"6550:12:33"},"nativeSrc":"6550:32:33","nodeType":"YulFunctionCall","src":"6550:32:33"},"variableNames":[{"name":"value1","nativeSrc":"6540:6:33","nodeType":"YulIdentifier","src":"6540:6:33"}]},{"nativeSrc":"6591:48:33","nodeType":"YulAssignment","src":"6591:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6624:9:33","nodeType":"YulIdentifier","src":"6624:9:33"},{"kind":"number","nativeSrc":"6635:2:33","nodeType":"YulLiteral","src":"6635:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6620:3:33","nodeType":"YulIdentifier","src":"6620:3:33"},"nativeSrc":"6620:18:33","nodeType":"YulFunctionCall","src":"6620:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6601:18:33","nodeType":"YulIdentifier","src":"6601:18:33"},"nativeSrc":"6601:38:33","nodeType":"YulFunctionCall","src":"6601:38:33"},"variableNames":[{"name":"value2","nativeSrc":"6591:6:33","nodeType":"YulIdentifier","src":"6591:6:33"}]},{"nativeSrc":"6648:42:33","nodeType":"YulAssignment","src":"6648:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6675:9:33","nodeType":"YulIdentifier","src":"6675:9:33"},{"kind":"number","nativeSrc":"6686:2:33","nodeType":"YulLiteral","src":"6686:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6671:3:33","nodeType":"YulIdentifier","src":"6671:3:33"},"nativeSrc":"6671:18:33","nodeType":"YulFunctionCall","src":"6671:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"6658:12:33","nodeType":"YulIdentifier","src":"6658:12:33"},"nativeSrc":"6658:32:33","nodeType":"YulFunctionCall","src":"6658:32:33"},"variableNames":[{"name":"value3","nativeSrc":"6648:6:33","nodeType":"YulIdentifier","src":"6648:6:33"}]},{"nativeSrc":"6699:43:33","nodeType":"YulAssignment","src":"6699:43:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6726:9:33","nodeType":"YulIdentifier","src":"6726:9:33"},{"kind":"number","nativeSrc":"6737:3:33","nodeType":"YulLiteral","src":"6737:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6722:3:33","nodeType":"YulIdentifier","src":"6722:3:33"},"nativeSrc":"6722:19:33","nodeType":"YulFunctionCall","src":"6722:19:33"}],"functionName":{"name":"calldataload","nativeSrc":"6709:12:33","nodeType":"YulIdentifier","src":"6709:12:33"},"nativeSrc":"6709:33:33","nodeType":"YulFunctionCall","src":"6709:33:33"},"variableNames":[{"name":"value4","nativeSrc":"6699:6:33","nodeType":"YulIdentifier","src":"6699:6:33"}]},{"nativeSrc":"6751:47:33","nodeType":"YulVariableDeclaration","src":"6751:47:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6782:9:33","nodeType":"YulIdentifier","src":"6782:9:33"},{"kind":"number","nativeSrc":"6793:3:33","nodeType":"YulLiteral","src":"6793:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6778:3:33","nodeType":"YulIdentifier","src":"6778:3:33"},"nativeSrc":"6778:19:33","nodeType":"YulFunctionCall","src":"6778:19:33"}],"functionName":{"name":"calldataload","nativeSrc":"6765:12:33","nodeType":"YulIdentifier","src":"6765:12:33"},"nativeSrc":"6765:33:33","nodeType":"YulFunctionCall","src":"6765:33:33"},"variables":[{"name":"offset","nativeSrc":"6755:6:33","nodeType":"YulTypedName","src":"6755:6:33","type":""}]},{"nativeSrc":"6807:28:33","nodeType":"YulVariableDeclaration","src":"6807:28:33","value":{"kind":"number","nativeSrc":"6817:18:33","nodeType":"YulLiteral","src":"6817:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"6811:2:33","nodeType":"YulTypedName","src":"6811:2:33","type":""}]},{"body":{"nativeSrc":"6862:16:33","nodeType":"YulBlock","src":"6862:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6871:1:33","nodeType":"YulLiteral","src":"6871:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"6874:1:33","nodeType":"YulLiteral","src":"6874:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6864:6:33","nodeType":"YulIdentifier","src":"6864:6:33"},"nativeSrc":"6864:12:33","nodeType":"YulFunctionCall","src":"6864:12:33"},"nativeSrc":"6864:12:33","nodeType":"YulExpressionStatement","src":"6864:12:33"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6850:6:33","nodeType":"YulIdentifier","src":"6850:6:33"},{"name":"_1","nativeSrc":"6858:2:33","nodeType":"YulIdentifier","src":"6858:2:33"}],"functionName":{"name":"gt","nativeSrc":"6847:2:33","nodeType":"YulIdentifier","src":"6847:2:33"},"nativeSrc":"6847:14:33","nodeType":"YulFunctionCall","src":"6847:14:33"},"nativeSrc":"6844:34:33","nodeType":"YulIf","src":"6844:34:33"},{"nativeSrc":"6887:32:33","nodeType":"YulVariableDeclaration","src":"6887:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"6901:9:33","nodeType":"YulIdentifier","src":"6901:9:33"},{"name":"offset","nativeSrc":"6912:6:33","nodeType":"YulIdentifier","src":"6912:6:33"}],"functionName":{"name":"add","nativeSrc":"6897:3:33","nodeType":"YulIdentifier","src":"6897:3:33"},"nativeSrc":"6897:22:33","nodeType":"YulFunctionCall","src":"6897:22:33"},"variables":[{"name":"_2","nativeSrc":"6891:2:33","nodeType":"YulTypedName","src":"6891:2:33","type":""}]},{"body":{"nativeSrc":"6967:16:33","nodeType":"YulBlock","src":"6967:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6976:1:33","nodeType":"YulLiteral","src":"6976:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"6979:1:33","nodeType":"YulLiteral","src":"6979:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6969:6:33","nodeType":"YulIdentifier","src":"6969:6:33"},"nativeSrc":"6969:12:33","nodeType":"YulFunctionCall","src":"6969:12:33"},"nativeSrc":"6969:12:33","nodeType":"YulExpressionStatement","src":"6969:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"6946:2:33","nodeType":"YulIdentifier","src":"6946:2:33"},{"kind":"number","nativeSrc":"6950:4:33","nodeType":"YulLiteral","src":"6950:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6942:3:33","nodeType":"YulIdentifier","src":"6942:3:33"},"nativeSrc":"6942:13:33","nodeType":"YulFunctionCall","src":"6942:13:33"},{"name":"dataEnd","nativeSrc":"6957:7:33","nodeType":"YulIdentifier","src":"6957:7:33"}],"functionName":{"name":"slt","nativeSrc":"6938:3:33","nodeType":"YulIdentifier","src":"6938:3:33"},"nativeSrc":"6938:27:33","nodeType":"YulFunctionCall","src":"6938:27:33"}],"functionName":{"name":"iszero","nativeSrc":"6931:6:33","nodeType":"YulIdentifier","src":"6931:6:33"},"nativeSrc":"6931:35:33","nodeType":"YulFunctionCall","src":"6931:35:33"},"nativeSrc":"6928:55:33","nodeType":"YulIf","src":"6928:55:33"},{"nativeSrc":"6992:30:33","nodeType":"YulVariableDeclaration","src":"6992:30:33","value":{"arguments":[{"name":"_2","nativeSrc":"7019:2:33","nodeType":"YulIdentifier","src":"7019:2:33"}],"functionName":{"name":"calldataload","nativeSrc":"7006:12:33","nodeType":"YulIdentifier","src":"7006:12:33"},"nativeSrc":"7006:16:33","nodeType":"YulFunctionCall","src":"7006:16:33"},"variables":[{"name":"length","nativeSrc":"6996:6:33","nodeType":"YulTypedName","src":"6996:6:33","type":""}]},{"body":{"nativeSrc":"7049:16:33","nodeType":"YulBlock","src":"7049:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7058:1:33","nodeType":"YulLiteral","src":"7058:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"7061:1:33","nodeType":"YulLiteral","src":"7061:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7051:6:33","nodeType":"YulIdentifier","src":"7051:6:33"},"nativeSrc":"7051:12:33","nodeType":"YulFunctionCall","src":"7051:12:33"},"nativeSrc":"7051:12:33","nodeType":"YulExpressionStatement","src":"7051:12:33"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7037:6:33","nodeType":"YulIdentifier","src":"7037:6:33"},{"name":"_1","nativeSrc":"7045:2:33","nodeType":"YulIdentifier","src":"7045:2:33"}],"functionName":{"name":"gt","nativeSrc":"7034:2:33","nodeType":"YulIdentifier","src":"7034:2:33"},"nativeSrc":"7034:14:33","nodeType":"YulFunctionCall","src":"7034:14:33"},"nativeSrc":"7031:34:33","nodeType":"YulIf","src":"7031:34:33"},{"body":{"nativeSrc":"7115:16:33","nodeType":"YulBlock","src":"7115:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7124:1:33","nodeType":"YulLiteral","src":"7124:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"7127:1:33","nodeType":"YulLiteral","src":"7127:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7117:6:33","nodeType":"YulIdentifier","src":"7117:6:33"},"nativeSrc":"7117:12:33","nodeType":"YulFunctionCall","src":"7117:12:33"},"nativeSrc":"7117:12:33","nodeType":"YulExpressionStatement","src":"7117:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"7088:2:33","nodeType":"YulIdentifier","src":"7088:2:33"},{"name":"length","nativeSrc":"7092:6:33","nodeType":"YulIdentifier","src":"7092:6:33"}],"functionName":{"name":"add","nativeSrc":"7084:3:33","nodeType":"YulIdentifier","src":"7084:3:33"},"nativeSrc":"7084:15:33","nodeType":"YulFunctionCall","src":"7084:15:33"},{"kind":"number","nativeSrc":"7101:2:33","nodeType":"YulLiteral","src":"7101:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7080:3:33","nodeType":"YulIdentifier","src":"7080:3:33"},"nativeSrc":"7080:24:33","nodeType":"YulFunctionCall","src":"7080:24:33"},{"name":"dataEnd","nativeSrc":"7106:7:33","nodeType":"YulIdentifier","src":"7106:7:33"}],"functionName":{"name":"gt","nativeSrc":"7077:2:33","nodeType":"YulIdentifier","src":"7077:2:33"},"nativeSrc":"7077:37:33","nodeType":"YulFunctionCall","src":"7077:37:33"},"nativeSrc":"7074:57:33","nodeType":"YulIf","src":"7074:57:33"},{"nativeSrc":"7140:21:33","nodeType":"YulAssignment","src":"7140:21:33","value":{"arguments":[{"name":"_2","nativeSrc":"7154:2:33","nodeType":"YulIdentifier","src":"7154:2:33"},{"kind":"number","nativeSrc":"7158:2:33","nodeType":"YulLiteral","src":"7158:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7150:3:33","nodeType":"YulIdentifier","src":"7150:3:33"},"nativeSrc":"7150:11:33","nodeType":"YulFunctionCall","src":"7150:11:33"},"variableNames":[{"name":"value5","nativeSrc":"7140:6:33","nodeType":"YulIdentifier","src":"7140:6:33"}]},{"nativeSrc":"7170:16:33","nodeType":"YulAssignment","src":"7170:16:33","value":{"name":"length","nativeSrc":"7180:6:33","nodeType":"YulIdentifier","src":"7180:6:33"},"variableNames":[{"name":"value6","nativeSrc":"7170:6:33","nodeType":"YulIdentifier","src":"7170:6:33"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32t_addresst_uint256t_uint256t_bytes_calldata_ptr","nativeSrc":"6252:940:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6344:9:33","nodeType":"YulTypedName","src":"6344:9:33","type":""},{"name":"dataEnd","nativeSrc":"6355:7:33","nodeType":"YulTypedName","src":"6355:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6367:6:33","nodeType":"YulTypedName","src":"6367:6:33","type":""},{"name":"value1","nativeSrc":"6375:6:33","nodeType":"YulTypedName","src":"6375:6:33","type":""},{"name":"value2","nativeSrc":"6383:6:33","nodeType":"YulTypedName","src":"6383:6:33","type":""},{"name":"value3","nativeSrc":"6391:6:33","nodeType":"YulTypedName","src":"6391:6:33","type":""},{"name":"value4","nativeSrc":"6399:6:33","nodeType":"YulTypedName","src":"6399:6:33","type":""},{"name":"value5","nativeSrc":"6407:6:33","nodeType":"YulTypedName","src":"6407:6:33","type":""},{"name":"value6","nativeSrc":"6415:6:33","nodeType":"YulTypedName","src":"6415:6:33","type":""}],"src":"6252:940:33"},{"body":{"nativeSrc":"7335:322:33","nodeType":"YulBlock","src":"7335:322:33","statements":[{"body":{"nativeSrc":"7382:16:33","nodeType":"YulBlock","src":"7382:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7391:1:33","nodeType":"YulLiteral","src":"7391:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"7394:1:33","nodeType":"YulLiteral","src":"7394:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7384:6:33","nodeType":"YulIdentifier","src":"7384:6:33"},"nativeSrc":"7384:12:33","nodeType":"YulFunctionCall","src":"7384:12:33"},"nativeSrc":"7384:12:33","nodeType":"YulExpressionStatement","src":"7384:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7356:7:33","nodeType":"YulIdentifier","src":"7356:7:33"},{"name":"headStart","nativeSrc":"7365:9:33","nodeType":"YulIdentifier","src":"7365:9:33"}],"functionName":{"name":"sub","nativeSrc":"7352:3:33","nodeType":"YulIdentifier","src":"7352:3:33"},"nativeSrc":"7352:23:33","nodeType":"YulFunctionCall","src":"7352:23:33"},{"kind":"number","nativeSrc":"7377:3:33","nodeType":"YulLiteral","src":"7377:3:33","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"7348:3:33","nodeType":"YulIdentifier","src":"7348:3:33"},"nativeSrc":"7348:33:33","nodeType":"YulFunctionCall","src":"7348:33:33"},"nativeSrc":"7345:53:33","nodeType":"YulIf","src":"7345:53:33"},{"nativeSrc":"7407:33:33","nodeType":"YulAssignment","src":"7407:33:33","value":{"arguments":[{"name":"headStart","nativeSrc":"7430:9:33","nodeType":"YulIdentifier","src":"7430:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"7417:12:33","nodeType":"YulIdentifier","src":"7417:12:33"},"nativeSrc":"7417:23:33","nodeType":"YulFunctionCall","src":"7417:23:33"},"variableNames":[{"name":"value0","nativeSrc":"7407:6:33","nodeType":"YulIdentifier","src":"7407:6:33"}]},{"nativeSrc":"7449:48:33","nodeType":"YulAssignment","src":"7449:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7482:9:33","nodeType":"YulIdentifier","src":"7482:9:33"},{"kind":"number","nativeSrc":"7493:2:33","nodeType":"YulLiteral","src":"7493:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7478:3:33","nodeType":"YulIdentifier","src":"7478:3:33"},"nativeSrc":"7478:18:33","nodeType":"YulFunctionCall","src":"7478:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7459:18:33","nodeType":"YulIdentifier","src":"7459:18:33"},"nativeSrc":"7459:38:33","nodeType":"YulFunctionCall","src":"7459:38:33"},"variableNames":[{"name":"value1","nativeSrc":"7449:6:33","nodeType":"YulIdentifier","src":"7449:6:33"}]},{"nativeSrc":"7506:42:33","nodeType":"YulAssignment","src":"7506:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7533:9:33","nodeType":"YulIdentifier","src":"7533:9:33"},{"kind":"number","nativeSrc":"7544:2:33","nodeType":"YulLiteral","src":"7544:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7529:3:33","nodeType":"YulIdentifier","src":"7529:3:33"},"nativeSrc":"7529:18:33","nodeType":"YulFunctionCall","src":"7529:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"7516:12:33","nodeType":"YulIdentifier","src":"7516:12:33"},"nativeSrc":"7516:32:33","nodeType":"YulFunctionCall","src":"7516:32:33"},"variableNames":[{"name":"value2","nativeSrc":"7506:6:33","nodeType":"YulIdentifier","src":"7506:6:33"}]},{"nativeSrc":"7557:42:33","nodeType":"YulAssignment","src":"7557:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7584:9:33","nodeType":"YulIdentifier","src":"7584:9:33"},{"kind":"number","nativeSrc":"7595:2:33","nodeType":"YulLiteral","src":"7595:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7580:3:33","nodeType":"YulIdentifier","src":"7580:3:33"},"nativeSrc":"7580:18:33","nodeType":"YulFunctionCall","src":"7580:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"7567:12:33","nodeType":"YulIdentifier","src":"7567:12:33"},"nativeSrc":"7567:32:33","nodeType":"YulFunctionCall","src":"7567:32:33"},"variableNames":[{"name":"value3","nativeSrc":"7557:6:33","nodeType":"YulIdentifier","src":"7557:6:33"}]},{"nativeSrc":"7608:43:33","nodeType":"YulAssignment","src":"7608:43:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7635:9:33","nodeType":"YulIdentifier","src":"7635:9:33"},{"kind":"number","nativeSrc":"7646:3:33","nodeType":"YulLiteral","src":"7646:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7631:3:33","nodeType":"YulIdentifier","src":"7631:3:33"},"nativeSrc":"7631:19:33","nodeType":"YulFunctionCall","src":"7631:19:33"}],"functionName":{"name":"calldataload","nativeSrc":"7618:12:33","nodeType":"YulIdentifier","src":"7618:12:33"},"nativeSrc":"7618:33:33","nodeType":"YulFunctionCall","src":"7618:33:33"},"variableNames":[{"name":"value4","nativeSrc":"7608:6:33","nodeType":"YulIdentifier","src":"7608:6:33"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256t_uint256","nativeSrc":"7197:460:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7269:9:33","nodeType":"YulTypedName","src":"7269:9:33","type":""},{"name":"dataEnd","nativeSrc":"7280:7:33","nodeType":"YulTypedName","src":"7280:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7292:6:33","nodeType":"YulTypedName","src":"7292:6:33","type":""},{"name":"value1","nativeSrc":"7300:6:33","nodeType":"YulTypedName","src":"7300:6:33","type":""},{"name":"value2","nativeSrc":"7308:6:33","nodeType":"YulTypedName","src":"7308:6:33","type":""},{"name":"value3","nativeSrc":"7316:6:33","nodeType":"YulTypedName","src":"7316:6:33","type":""},{"name":"value4","nativeSrc":"7324:6:33","nodeType":"YulTypedName","src":"7324:6:33","type":""}],"src":"7197:460:33"},{"body":{"nativeSrc":"7897:336:33","nodeType":"YulBlock","src":"7897:336:33","statements":[{"nativeSrc":"7907:27:33","nodeType":"YulAssignment","src":"7907:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"7919:9:33","nodeType":"YulIdentifier","src":"7919:9:33"},{"kind":"number","nativeSrc":"7930:3:33","nodeType":"YulLiteral","src":"7930:3:33","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"7915:3:33","nodeType":"YulIdentifier","src":"7915:3:33"},"nativeSrc":"7915:19:33","nodeType":"YulFunctionCall","src":"7915:19:33"},"variableNames":[{"name":"tail","nativeSrc":"7907:4:33","nodeType":"YulIdentifier","src":"7907:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7950:9:33","nodeType":"YulIdentifier","src":"7950:9:33"},{"arguments":[{"name":"value0","nativeSrc":"7965:6:33","nodeType":"YulIdentifier","src":"7965:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7981:3:33","nodeType":"YulLiteral","src":"7981:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"7986:1:33","nodeType":"YulLiteral","src":"7986:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7977:3:33","nodeType":"YulIdentifier","src":"7977:3:33"},"nativeSrc":"7977:11:33","nodeType":"YulFunctionCall","src":"7977:11:33"},{"kind":"number","nativeSrc":"7990:1:33","nodeType":"YulLiteral","src":"7990:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7973:3:33","nodeType":"YulIdentifier","src":"7973:3:33"},"nativeSrc":"7973:19:33","nodeType":"YulFunctionCall","src":"7973:19:33"}],"functionName":{"name":"and","nativeSrc":"7961:3:33","nodeType":"YulIdentifier","src":"7961:3:33"},"nativeSrc":"7961:32:33","nodeType":"YulFunctionCall","src":"7961:32:33"}],"functionName":{"name":"mstore","nativeSrc":"7943:6:33","nodeType":"YulIdentifier","src":"7943:6:33"},"nativeSrc":"7943:51:33","nodeType":"YulFunctionCall","src":"7943:51:33"},"nativeSrc":"7943:51:33","nodeType":"YulExpressionStatement","src":"7943:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8014:9:33","nodeType":"YulIdentifier","src":"8014:9:33"},{"kind":"number","nativeSrc":"8025:2:33","nodeType":"YulLiteral","src":"8025:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8010:3:33","nodeType":"YulIdentifier","src":"8010:3:33"},"nativeSrc":"8010:18:33","nodeType":"YulFunctionCall","src":"8010:18:33"},{"name":"value1","nativeSrc":"8030:6:33","nodeType":"YulIdentifier","src":"8030:6:33"}],"functionName":{"name":"mstore","nativeSrc":"8003:6:33","nodeType":"YulIdentifier","src":"8003:6:33"},"nativeSrc":"8003:34:33","nodeType":"YulFunctionCall","src":"8003:34:33"},"nativeSrc":"8003:34:33","nodeType":"YulExpressionStatement","src":"8003:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8057:9:33","nodeType":"YulIdentifier","src":"8057:9:33"},{"kind":"number","nativeSrc":"8068:2:33","nodeType":"YulLiteral","src":"8068:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8053:3:33","nodeType":"YulIdentifier","src":"8053:3:33"},"nativeSrc":"8053:18:33","nodeType":"YulFunctionCall","src":"8053:18:33"},{"name":"value2","nativeSrc":"8073:6:33","nodeType":"YulIdentifier","src":"8073:6:33"}],"functionName":{"name":"mstore","nativeSrc":"8046:6:33","nodeType":"YulIdentifier","src":"8046:6:33"},"nativeSrc":"8046:34:33","nodeType":"YulFunctionCall","src":"8046:34:33"},"nativeSrc":"8046:34:33","nodeType":"YulExpressionStatement","src":"8046:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8100:9:33","nodeType":"YulIdentifier","src":"8100:9:33"},{"kind":"number","nativeSrc":"8111:2:33","nodeType":"YulLiteral","src":"8111:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8096:3:33","nodeType":"YulIdentifier","src":"8096:3:33"},"nativeSrc":"8096:18:33","nodeType":"YulFunctionCall","src":"8096:18:33"},{"name":"value3","nativeSrc":"8116:6:33","nodeType":"YulIdentifier","src":"8116:6:33"}],"functionName":{"name":"mstore","nativeSrc":"8089:6:33","nodeType":"YulIdentifier","src":"8089:6:33"},"nativeSrc":"8089:34:33","nodeType":"YulFunctionCall","src":"8089:34:33"},"nativeSrc":"8089:34:33","nodeType":"YulExpressionStatement","src":"8089:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8143:9:33","nodeType":"YulIdentifier","src":"8143:9:33"},{"kind":"number","nativeSrc":"8154:3:33","nodeType":"YulLiteral","src":"8154:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8139:3:33","nodeType":"YulIdentifier","src":"8139:3:33"},"nativeSrc":"8139:19:33","nodeType":"YulFunctionCall","src":"8139:19:33"},{"name":"value4","nativeSrc":"8160:6:33","nodeType":"YulIdentifier","src":"8160:6:33"}],"functionName":{"name":"mstore","nativeSrc":"8132:6:33","nodeType":"YulIdentifier","src":"8132:6:33"},"nativeSrc":"8132:35:33","nodeType":"YulFunctionCall","src":"8132:35:33"},"nativeSrc":"8132:35:33","nodeType":"YulExpressionStatement","src":"8132:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8187:9:33","nodeType":"YulIdentifier","src":"8187:9:33"},{"kind":"number","nativeSrc":"8198:3:33","nodeType":"YulLiteral","src":"8198:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8183:3:33","nodeType":"YulIdentifier","src":"8183:3:33"},"nativeSrc":"8183:19:33","nodeType":"YulFunctionCall","src":"8183:19:33"},{"arguments":[{"arguments":[{"name":"value5","nativeSrc":"8218:6:33","nodeType":"YulIdentifier","src":"8218:6:33"}],"functionName":{"name":"iszero","nativeSrc":"8211:6:33","nodeType":"YulIdentifier","src":"8211:6:33"},"nativeSrc":"8211:14:33","nodeType":"YulFunctionCall","src":"8211:14:33"}],"functionName":{"name":"iszero","nativeSrc":"8204:6:33","nodeType":"YulIdentifier","src":"8204:6:33"},"nativeSrc":"8204:22:33","nodeType":"YulFunctionCall","src":"8204:22:33"}],"functionName":{"name":"mstore","nativeSrc":"8176:6:33","nodeType":"YulIdentifier","src":"8176:6:33"},"nativeSrc":"8176:51:33","nodeType":"YulFunctionCall","src":"8176:51:33"},"nativeSrc":"8176:51:33","nodeType":"YulExpressionStatement","src":"8176:51:33"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nativeSrc":"7662:571:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7826:9:33","nodeType":"YulTypedName","src":"7826:9:33","type":""},{"name":"value5","nativeSrc":"7837:6:33","nodeType":"YulTypedName","src":"7837:6:33","type":""},{"name":"value4","nativeSrc":"7845:6:33","nodeType":"YulTypedName","src":"7845:6:33","type":""},{"name":"value3","nativeSrc":"7853:6:33","nodeType":"YulTypedName","src":"7853:6:33","type":""},{"name":"value2","nativeSrc":"7861:6:33","nodeType":"YulTypedName","src":"7861:6:33","type":""},{"name":"value1","nativeSrc":"7869:6:33","nodeType":"YulTypedName","src":"7869:6:33","type":""},{"name":"value0","nativeSrc":"7877:6:33","nodeType":"YulTypedName","src":"7877:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7888:4:33","nodeType":"YulTypedName","src":"7888:4:33","type":""}],"src":"7662:571:33"},{"body":{"nativeSrc":"8346:101:33","nodeType":"YulBlock","src":"8346:101:33","statements":[{"nativeSrc":"8356:26:33","nodeType":"YulAssignment","src":"8356:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"8368:9:33","nodeType":"YulIdentifier","src":"8368:9:33"},{"kind":"number","nativeSrc":"8379:2:33","nodeType":"YulLiteral","src":"8379:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8364:3:33","nodeType":"YulIdentifier","src":"8364:3:33"},"nativeSrc":"8364:18:33","nodeType":"YulFunctionCall","src":"8364:18:33"},"variableNames":[{"name":"tail","nativeSrc":"8356:4:33","nodeType":"YulIdentifier","src":"8356:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8398:9:33","nodeType":"YulIdentifier","src":"8398:9:33"},{"arguments":[{"name":"value0","nativeSrc":"8413:6:33","nodeType":"YulIdentifier","src":"8413:6:33"},{"kind":"number","nativeSrc":"8421:18:33","nodeType":"YulLiteral","src":"8421:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8409:3:33","nodeType":"YulIdentifier","src":"8409:3:33"},"nativeSrc":"8409:31:33","nodeType":"YulFunctionCall","src":"8409:31:33"}],"functionName":{"name":"mstore","nativeSrc":"8391:6:33","nodeType":"YulIdentifier","src":"8391:6:33"},"nativeSrc":"8391:50:33","nodeType":"YulFunctionCall","src":"8391:50:33"},"nativeSrc":"8391:50:33","nodeType":"YulExpressionStatement","src":"8391:50:33"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"8238:209:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8315:9:33","nodeType":"YulTypedName","src":"8315:9:33","type":""},{"name":"value0","nativeSrc":"8326:6:33","nodeType":"YulTypedName","src":"8326:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8337:4:33","nodeType":"YulTypedName","src":"8337:4:33","type":""}],"src":"8238:209:33"},{"body":{"nativeSrc":"8693:320:33","nodeType":"YulBlock","src":"8693:320:33","statements":[{"nativeSrc":"8703:27:33","nodeType":"YulAssignment","src":"8703:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"8715:9:33","nodeType":"YulIdentifier","src":"8715:9:33"},{"kind":"number","nativeSrc":"8726:3:33","nodeType":"YulLiteral","src":"8726:3:33","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8711:3:33","nodeType":"YulIdentifier","src":"8711:3:33"},"nativeSrc":"8711:19:33","nodeType":"YulFunctionCall","src":"8711:19:33"},"variableNames":[{"name":"tail","nativeSrc":"8703:4:33","nodeType":"YulIdentifier","src":"8703:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8746:9:33","nodeType":"YulIdentifier","src":"8746:9:33"},{"name":"value0","nativeSrc":"8757:6:33","nodeType":"YulIdentifier","src":"8757:6:33"}],"functionName":{"name":"mstore","nativeSrc":"8739:6:33","nodeType":"YulIdentifier","src":"8739:6:33"},"nativeSrc":"8739:25:33","nodeType":"YulFunctionCall","src":"8739:25:33"},"nativeSrc":"8739:25:33","nodeType":"YulExpressionStatement","src":"8739:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8784:9:33","nodeType":"YulIdentifier","src":"8784:9:33"},{"kind":"number","nativeSrc":"8795:2:33","nodeType":"YulLiteral","src":"8795:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8780:3:33","nodeType":"YulIdentifier","src":"8780:3:33"},"nativeSrc":"8780:18:33","nodeType":"YulFunctionCall","src":"8780:18:33"},{"name":"value1","nativeSrc":"8800:6:33","nodeType":"YulIdentifier","src":"8800:6:33"}],"functionName":{"name":"mstore","nativeSrc":"8773:6:33","nodeType":"YulIdentifier","src":"8773:6:33"},"nativeSrc":"8773:34:33","nodeType":"YulFunctionCall","src":"8773:34:33"},"nativeSrc":"8773:34:33","nodeType":"YulExpressionStatement","src":"8773:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8827:9:33","nodeType":"YulIdentifier","src":"8827:9:33"},{"kind":"number","nativeSrc":"8838:2:33","nodeType":"YulLiteral","src":"8838:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8823:3:33","nodeType":"YulIdentifier","src":"8823:3:33"},"nativeSrc":"8823:18:33","nodeType":"YulFunctionCall","src":"8823:18:33"},{"name":"value2","nativeSrc":"8843:6:33","nodeType":"YulIdentifier","src":"8843:6:33"}],"functionName":{"name":"mstore","nativeSrc":"8816:6:33","nodeType":"YulIdentifier","src":"8816:6:33"},"nativeSrc":"8816:34:33","nodeType":"YulFunctionCall","src":"8816:34:33"},"nativeSrc":"8816:34:33","nodeType":"YulExpressionStatement","src":"8816:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8870:9:33","nodeType":"YulIdentifier","src":"8870:9:33"},{"kind":"number","nativeSrc":"8881:2:33","nodeType":"YulLiteral","src":"8881:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8866:3:33","nodeType":"YulIdentifier","src":"8866:3:33"},"nativeSrc":"8866:18:33","nodeType":"YulFunctionCall","src":"8866:18:33"},{"arguments":[{"name":"value3","nativeSrc":"8890:6:33","nodeType":"YulIdentifier","src":"8890:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8906:3:33","nodeType":"YulLiteral","src":"8906:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"8911:1:33","nodeType":"YulLiteral","src":"8911:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8902:3:33","nodeType":"YulIdentifier","src":"8902:3:33"},"nativeSrc":"8902:11:33","nodeType":"YulFunctionCall","src":"8902:11:33"},{"kind":"number","nativeSrc":"8915:1:33","nodeType":"YulLiteral","src":"8915:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8898:3:33","nodeType":"YulIdentifier","src":"8898:3:33"},"nativeSrc":"8898:19:33","nodeType":"YulFunctionCall","src":"8898:19:33"}],"functionName":{"name":"and","nativeSrc":"8886:3:33","nodeType":"YulIdentifier","src":"8886:3:33"},"nativeSrc":"8886:32:33","nodeType":"YulFunctionCall","src":"8886:32:33"}],"functionName":{"name":"mstore","nativeSrc":"8859:6:33","nodeType":"YulIdentifier","src":"8859:6:33"},"nativeSrc":"8859:60:33","nodeType":"YulFunctionCall","src":"8859:60:33"},"nativeSrc":"8859:60:33","nodeType":"YulExpressionStatement","src":"8859:60:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8939:9:33","nodeType":"YulIdentifier","src":"8939:9:33"},{"kind":"number","nativeSrc":"8950:3:33","nodeType":"YulLiteral","src":"8950:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8935:3:33","nodeType":"YulIdentifier","src":"8935:3:33"},"nativeSrc":"8935:19:33","nodeType":"YulFunctionCall","src":"8935:19:33"},{"name":"value4","nativeSrc":"8956:6:33","nodeType":"YulIdentifier","src":"8956:6:33"}],"functionName":{"name":"mstore","nativeSrc":"8928:6:33","nodeType":"YulIdentifier","src":"8928:6:33"},"nativeSrc":"8928:35:33","nodeType":"YulFunctionCall","src":"8928:35:33"},"nativeSrc":"8928:35:33","nodeType":"YulExpressionStatement","src":"8928:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8983:9:33","nodeType":"YulIdentifier","src":"8983:9:33"},{"kind":"number","nativeSrc":"8994:3:33","nodeType":"YulLiteral","src":"8994:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8979:3:33","nodeType":"YulIdentifier","src":"8979:3:33"},"nativeSrc":"8979:19:33","nodeType":"YulFunctionCall","src":"8979:19:33"},{"name":"value5","nativeSrc":"9000:6:33","nodeType":"YulIdentifier","src":"9000:6:33"}],"functionName":{"name":"mstore","nativeSrc":"8972:6:33","nodeType":"YulIdentifier","src":"8972:6:33"},"nativeSrc":"8972:35:33","nodeType":"YulFunctionCall","src":"8972:35:33"},"nativeSrc":"8972:35:33","nodeType":"YulExpressionStatement","src":"8972:35:33"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"8452:561:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8622:9:33","nodeType":"YulTypedName","src":"8622:9:33","type":""},{"name":"value5","nativeSrc":"8633:6:33","nodeType":"YulTypedName","src":"8633:6:33","type":""},{"name":"value4","nativeSrc":"8641:6:33","nodeType":"YulTypedName","src":"8641:6:33","type":""},{"name":"value3","nativeSrc":"8649:6:33","nodeType":"YulTypedName","src":"8649:6:33","type":""},{"name":"value2","nativeSrc":"8657:6:33","nodeType":"YulTypedName","src":"8657:6:33","type":""},{"name":"value1","nativeSrc":"8665:6:33","nodeType":"YulTypedName","src":"8665:6:33","type":""},{"name":"value0","nativeSrc":"8673:6:33","nodeType":"YulTypedName","src":"8673:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8684:4:33","nodeType":"YulTypedName","src":"8684:4:33","type":""}],"src":"8452:561:33"},{"body":{"nativeSrc":"9067:176:33","nodeType":"YulBlock","src":"9067:176:33","statements":[{"nativeSrc":"9077:17:33","nodeType":"YulAssignment","src":"9077:17:33","value":{"arguments":[{"name":"x","nativeSrc":"9089:1:33","nodeType":"YulIdentifier","src":"9089:1:33"},{"name":"y","nativeSrc":"9092:1:33","nodeType":"YulIdentifier","src":"9092:1:33"}],"functionName":{"name":"sub","nativeSrc":"9085:3:33","nodeType":"YulIdentifier","src":"9085:3:33"},"nativeSrc":"9085:9:33","nodeType":"YulFunctionCall","src":"9085:9:33"},"variableNames":[{"name":"diff","nativeSrc":"9077:4:33","nodeType":"YulIdentifier","src":"9077:4:33"}]},{"body":{"nativeSrc":"9126:111:33","nodeType":"YulBlock","src":"9126:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9147:1:33","nodeType":"YulLiteral","src":"9147:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9154:3:33","nodeType":"YulLiteral","src":"9154:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"9159:10:33","nodeType":"YulLiteral","src":"9159:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9150:3:33","nodeType":"YulIdentifier","src":"9150:3:33"},"nativeSrc":"9150:20:33","nodeType":"YulFunctionCall","src":"9150:20:33"}],"functionName":{"name":"mstore","nativeSrc":"9140:6:33","nodeType":"YulIdentifier","src":"9140:6:33"},"nativeSrc":"9140:31:33","nodeType":"YulFunctionCall","src":"9140:31:33"},"nativeSrc":"9140:31:33","nodeType":"YulExpressionStatement","src":"9140:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9191:1:33","nodeType":"YulLiteral","src":"9191:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"9194:4:33","nodeType":"YulLiteral","src":"9194:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9184:6:33","nodeType":"YulIdentifier","src":"9184:6:33"},"nativeSrc":"9184:15:33","nodeType":"YulFunctionCall","src":"9184:15:33"},"nativeSrc":"9184:15:33","nodeType":"YulExpressionStatement","src":"9184:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9219:1:33","nodeType":"YulLiteral","src":"9219:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"9222:4:33","nodeType":"YulLiteral","src":"9222:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9212:6:33","nodeType":"YulIdentifier","src":"9212:6:33"},"nativeSrc":"9212:15:33","nodeType":"YulFunctionCall","src":"9212:15:33"},"nativeSrc":"9212:15:33","nodeType":"YulExpressionStatement","src":"9212:15:33"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"9109:4:33","nodeType":"YulIdentifier","src":"9109:4:33"},{"name":"x","nativeSrc":"9115:1:33","nodeType":"YulIdentifier","src":"9115:1:33"}],"functionName":{"name":"gt","nativeSrc":"9106:2:33","nodeType":"YulIdentifier","src":"9106:2:33"},"nativeSrc":"9106:11:33","nodeType":"YulFunctionCall","src":"9106:11:33"},"nativeSrc":"9103:134:33","nodeType":"YulIf","src":"9103:134:33"}]},"name":"checked_sub_t_uint256","nativeSrc":"9018:225:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9049:1:33","nodeType":"YulTypedName","src":"9049:1:33","type":""},{"name":"y","nativeSrc":"9052:1:33","nodeType":"YulTypedName","src":"9052:1:33","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"9058:4:33","nodeType":"YulTypedName","src":"9058:4:33","type":""}],"src":"9018:225:33"},{"body":{"nativeSrc":"9405:218:33","nodeType":"YulBlock","src":"9405:218:33","statements":[{"nativeSrc":"9415:26:33","nodeType":"YulAssignment","src":"9415:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"9427:9:33","nodeType":"YulIdentifier","src":"9427:9:33"},{"kind":"number","nativeSrc":"9438:2:33","nodeType":"YulLiteral","src":"9438:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9423:3:33","nodeType":"YulIdentifier","src":"9423:3:33"},"nativeSrc":"9423:18:33","nodeType":"YulFunctionCall","src":"9423:18:33"},"variableNames":[{"name":"tail","nativeSrc":"9415:4:33","nodeType":"YulIdentifier","src":"9415:4:33"}]},{"nativeSrc":"9450:29:33","nodeType":"YulVariableDeclaration","src":"9450:29:33","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9468:3:33","nodeType":"YulLiteral","src":"9468:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"9473:1:33","nodeType":"YulLiteral","src":"9473:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9464:3:33","nodeType":"YulIdentifier","src":"9464:3:33"},"nativeSrc":"9464:11:33","nodeType":"YulFunctionCall","src":"9464:11:33"},{"kind":"number","nativeSrc":"9477:1:33","nodeType":"YulLiteral","src":"9477:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9460:3:33","nodeType":"YulIdentifier","src":"9460:3:33"},"nativeSrc":"9460:19:33","nodeType":"YulFunctionCall","src":"9460:19:33"},"variables":[{"name":"_1","nativeSrc":"9454:2:33","nodeType":"YulTypedName","src":"9454:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9495:9:33","nodeType":"YulIdentifier","src":"9495:9:33"},{"arguments":[{"name":"value0","nativeSrc":"9510:6:33","nodeType":"YulIdentifier","src":"9510:6:33"},{"name":"_1","nativeSrc":"9518:2:33","nodeType":"YulIdentifier","src":"9518:2:33"}],"functionName":{"name":"and","nativeSrc":"9506:3:33","nodeType":"YulIdentifier","src":"9506:3:33"},"nativeSrc":"9506:15:33","nodeType":"YulFunctionCall","src":"9506:15:33"}],"functionName":{"name":"mstore","nativeSrc":"9488:6:33","nodeType":"YulIdentifier","src":"9488:6:33"},"nativeSrc":"9488:34:33","nodeType":"YulFunctionCall","src":"9488:34:33"},"nativeSrc":"9488:34:33","nodeType":"YulExpressionStatement","src":"9488:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9542:9:33","nodeType":"YulIdentifier","src":"9542:9:33"},{"kind":"number","nativeSrc":"9553:2:33","nodeType":"YulLiteral","src":"9553:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9538:3:33","nodeType":"YulIdentifier","src":"9538:3:33"},"nativeSrc":"9538:18:33","nodeType":"YulFunctionCall","src":"9538:18:33"},{"arguments":[{"name":"value1","nativeSrc":"9562:6:33","nodeType":"YulIdentifier","src":"9562:6:33"},{"name":"_1","nativeSrc":"9570:2:33","nodeType":"YulIdentifier","src":"9570:2:33"}],"functionName":{"name":"and","nativeSrc":"9558:3:33","nodeType":"YulIdentifier","src":"9558:3:33"},"nativeSrc":"9558:15:33","nodeType":"YulFunctionCall","src":"9558:15:33"}],"functionName":{"name":"mstore","nativeSrc":"9531:6:33","nodeType":"YulIdentifier","src":"9531:6:33"},"nativeSrc":"9531:43:33","nodeType":"YulFunctionCall","src":"9531:43:33"},"nativeSrc":"9531:43:33","nodeType":"YulExpressionStatement","src":"9531:43:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9594:9:33","nodeType":"YulIdentifier","src":"9594:9:33"},{"kind":"number","nativeSrc":"9605:2:33","nodeType":"YulLiteral","src":"9605:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9590:3:33","nodeType":"YulIdentifier","src":"9590:3:33"},"nativeSrc":"9590:18:33","nodeType":"YulFunctionCall","src":"9590:18:33"},{"name":"value2","nativeSrc":"9610:6:33","nodeType":"YulIdentifier","src":"9610:6:33"}],"functionName":{"name":"mstore","nativeSrc":"9583:6:33","nodeType":"YulIdentifier","src":"9583:6:33"},"nativeSrc":"9583:34:33","nodeType":"YulFunctionCall","src":"9583:34:33"},"nativeSrc":"9583:34:33","nodeType":"YulExpressionStatement","src":"9583:34:33"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"9248:375:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9358:9:33","nodeType":"YulTypedName","src":"9358:9:33","type":""},{"name":"value2","nativeSrc":"9369:6:33","nodeType":"YulTypedName","src":"9369:6:33","type":""},{"name":"value1","nativeSrc":"9377:6:33","nodeType":"YulTypedName","src":"9377:6:33","type":""},{"name":"value0","nativeSrc":"9385:6:33","nodeType":"YulTypedName","src":"9385:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9396:4:33","nodeType":"YulTypedName","src":"9396:4:33","type":""}],"src":"9248:375:33"},{"body":{"nativeSrc":"9757:119:33","nodeType":"YulBlock","src":"9757:119:33","statements":[{"nativeSrc":"9767:26:33","nodeType":"YulAssignment","src":"9767:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"9779:9:33","nodeType":"YulIdentifier","src":"9779:9:33"},{"kind":"number","nativeSrc":"9790:2:33","nodeType":"YulLiteral","src":"9790:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9775:3:33","nodeType":"YulIdentifier","src":"9775:3:33"},"nativeSrc":"9775:18:33","nodeType":"YulFunctionCall","src":"9775:18:33"},"variableNames":[{"name":"tail","nativeSrc":"9767:4:33","nodeType":"YulIdentifier","src":"9767:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9809:9:33","nodeType":"YulIdentifier","src":"9809:9:33"},{"name":"value0","nativeSrc":"9820:6:33","nodeType":"YulIdentifier","src":"9820:6:33"}],"functionName":{"name":"mstore","nativeSrc":"9802:6:33","nodeType":"YulIdentifier","src":"9802:6:33"},"nativeSrc":"9802:25:33","nodeType":"YulFunctionCall","src":"9802:25:33"},"nativeSrc":"9802:25:33","nodeType":"YulExpressionStatement","src":"9802:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9847:9:33","nodeType":"YulIdentifier","src":"9847:9:33"},{"kind":"number","nativeSrc":"9858:2:33","nodeType":"YulLiteral","src":"9858:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9843:3:33","nodeType":"YulIdentifier","src":"9843:3:33"},"nativeSrc":"9843:18:33","nodeType":"YulFunctionCall","src":"9843:18:33"},{"name":"value1","nativeSrc":"9863:6:33","nodeType":"YulIdentifier","src":"9863:6:33"}],"functionName":{"name":"mstore","nativeSrc":"9836:6:33","nodeType":"YulIdentifier","src":"9836:6:33"},"nativeSrc":"9836:34:33","nodeType":"YulFunctionCall","src":"9836:34:33"},"nativeSrc":"9836:34:33","nodeType":"YulExpressionStatement","src":"9836:34:33"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"9628:248:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9718:9:33","nodeType":"YulTypedName","src":"9718:9:33","type":""},{"name":"value1","nativeSrc":"9729:6:33","nodeType":"YulTypedName","src":"9729:6:33","type":""},{"name":"value0","nativeSrc":"9737:6:33","nodeType":"YulTypedName","src":"9737:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9748:4:33","nodeType":"YulTypedName","src":"9748:4:33","type":""}],"src":"9628:248:33"},{"body":{"nativeSrc":"10038:162:33","nodeType":"YulBlock","src":"10038:162:33","statements":[{"nativeSrc":"10048:26:33","nodeType":"YulAssignment","src":"10048:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"10060:9:33","nodeType":"YulIdentifier","src":"10060:9:33"},{"kind":"number","nativeSrc":"10071:2:33","nodeType":"YulLiteral","src":"10071:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10056:3:33","nodeType":"YulIdentifier","src":"10056:3:33"},"nativeSrc":"10056:18:33","nodeType":"YulFunctionCall","src":"10056:18:33"},"variableNames":[{"name":"tail","nativeSrc":"10048:4:33","nodeType":"YulIdentifier","src":"10048:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10090:9:33","nodeType":"YulIdentifier","src":"10090:9:33"},{"name":"value0","nativeSrc":"10101:6:33","nodeType":"YulIdentifier","src":"10101:6:33"}],"functionName":{"name":"mstore","nativeSrc":"10083:6:33","nodeType":"YulIdentifier","src":"10083:6:33"},"nativeSrc":"10083:25:33","nodeType":"YulFunctionCall","src":"10083:25:33"},"nativeSrc":"10083:25:33","nodeType":"YulExpressionStatement","src":"10083:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10128:9:33","nodeType":"YulIdentifier","src":"10128:9:33"},{"kind":"number","nativeSrc":"10139:2:33","nodeType":"YulLiteral","src":"10139:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10124:3:33","nodeType":"YulIdentifier","src":"10124:3:33"},"nativeSrc":"10124:18:33","nodeType":"YulFunctionCall","src":"10124:18:33"},{"name":"value1","nativeSrc":"10144:6:33","nodeType":"YulIdentifier","src":"10144:6:33"}],"functionName":{"name":"mstore","nativeSrc":"10117:6:33","nodeType":"YulIdentifier","src":"10117:6:33"},"nativeSrc":"10117:34:33","nodeType":"YulFunctionCall","src":"10117:34:33"},"nativeSrc":"10117:34:33","nodeType":"YulExpressionStatement","src":"10117:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10171:9:33","nodeType":"YulIdentifier","src":"10171:9:33"},{"kind":"number","nativeSrc":"10182:2:33","nodeType":"YulLiteral","src":"10182:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10167:3:33","nodeType":"YulIdentifier","src":"10167:3:33"},"nativeSrc":"10167:18:33","nodeType":"YulFunctionCall","src":"10167:18:33"},{"name":"value2","nativeSrc":"10187:6:33","nodeType":"YulIdentifier","src":"10187:6:33"}],"functionName":{"name":"mstore","nativeSrc":"10160:6:33","nodeType":"YulIdentifier","src":"10160:6:33"},"nativeSrc":"10160:34:33","nodeType":"YulFunctionCall","src":"10160:34:33"},"nativeSrc":"10160:34:33","nodeType":"YulExpressionStatement","src":"10160:34:33"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"9881:319:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9991:9:33","nodeType":"YulTypedName","src":"9991:9:33","type":""},{"name":"value2","nativeSrc":"10002:6:33","nodeType":"YulTypedName","src":"10002:6:33","type":""},{"name":"value1","nativeSrc":"10010:6:33","nodeType":"YulTypedName","src":"10010:6:33","type":""},{"name":"value0","nativeSrc":"10018:6:33","nodeType":"YulTypedName","src":"10018:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10029:4:33","nodeType":"YulTypedName","src":"10029:4:33","type":""}],"src":"9881:319:33"},{"body":{"nativeSrc":"10306:102:33","nodeType":"YulBlock","src":"10306:102:33","statements":[{"nativeSrc":"10316:26:33","nodeType":"YulAssignment","src":"10316:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"10328:9:33","nodeType":"YulIdentifier","src":"10328:9:33"},{"kind":"number","nativeSrc":"10339:2:33","nodeType":"YulLiteral","src":"10339:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10324:3:33","nodeType":"YulIdentifier","src":"10324:3:33"},"nativeSrc":"10324:18:33","nodeType":"YulFunctionCall","src":"10324:18:33"},"variableNames":[{"name":"tail","nativeSrc":"10316:4:33","nodeType":"YulIdentifier","src":"10316:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10358:9:33","nodeType":"YulIdentifier","src":"10358:9:33"},{"arguments":[{"name":"value0","nativeSrc":"10373:6:33","nodeType":"YulIdentifier","src":"10373:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10389:3:33","nodeType":"YulLiteral","src":"10389:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"10394:1:33","nodeType":"YulLiteral","src":"10394:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10385:3:33","nodeType":"YulIdentifier","src":"10385:3:33"},"nativeSrc":"10385:11:33","nodeType":"YulFunctionCall","src":"10385:11:33"},{"kind":"number","nativeSrc":"10398:1:33","nodeType":"YulLiteral","src":"10398:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10381:3:33","nodeType":"YulIdentifier","src":"10381:3:33"},"nativeSrc":"10381:19:33","nodeType":"YulFunctionCall","src":"10381:19:33"}],"functionName":{"name":"and","nativeSrc":"10369:3:33","nodeType":"YulIdentifier","src":"10369:3:33"},"nativeSrc":"10369:32:33","nodeType":"YulFunctionCall","src":"10369:32:33"}],"functionName":{"name":"mstore","nativeSrc":"10351:6:33","nodeType":"YulIdentifier","src":"10351:6:33"},"nativeSrc":"10351:51:33","nodeType":"YulFunctionCall","src":"10351:51:33"},"nativeSrc":"10351:51:33","nodeType":"YulExpressionStatement","src":"10351:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"10205:203:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10275:9:33","nodeType":"YulTypedName","src":"10275:9:33","type":""},{"name":"value0","nativeSrc":"10286:6:33","nodeType":"YulTypedName","src":"10286:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10297:4:33","nodeType":"YulTypedName","src":"10297:4:33","type":""}],"src":"10205:203:33"},{"body":{"nativeSrc":"10494:103:33","nodeType":"YulBlock","src":"10494:103:33","statements":[{"body":{"nativeSrc":"10540:16:33","nodeType":"YulBlock","src":"10540:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10549:1:33","nodeType":"YulLiteral","src":"10549:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"10552:1:33","nodeType":"YulLiteral","src":"10552:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10542:6:33","nodeType":"YulIdentifier","src":"10542:6:33"},"nativeSrc":"10542:12:33","nodeType":"YulFunctionCall","src":"10542:12:33"},"nativeSrc":"10542:12:33","nodeType":"YulExpressionStatement","src":"10542:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10515:7:33","nodeType":"YulIdentifier","src":"10515:7:33"},{"name":"headStart","nativeSrc":"10524:9:33","nodeType":"YulIdentifier","src":"10524:9:33"}],"functionName":{"name":"sub","nativeSrc":"10511:3:33","nodeType":"YulIdentifier","src":"10511:3:33"},"nativeSrc":"10511:23:33","nodeType":"YulFunctionCall","src":"10511:23:33"},{"kind":"number","nativeSrc":"10536:2:33","nodeType":"YulLiteral","src":"10536:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10507:3:33","nodeType":"YulIdentifier","src":"10507:3:33"},"nativeSrc":"10507:32:33","nodeType":"YulFunctionCall","src":"10507:32:33"},"nativeSrc":"10504:52:33","nodeType":"YulIf","src":"10504:52:33"},{"nativeSrc":"10565:26:33","nodeType":"YulAssignment","src":"10565:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"10581:9:33","nodeType":"YulIdentifier","src":"10581:9:33"}],"functionName":{"name":"mload","nativeSrc":"10575:5:33","nodeType":"YulIdentifier","src":"10575:5:33"},"nativeSrc":"10575:16:33","nodeType":"YulFunctionCall","src":"10575:16:33"},"variableNames":[{"name":"value0","nativeSrc":"10565:6:33","nodeType":"YulIdentifier","src":"10565:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"10413:184:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10460:9:33","nodeType":"YulTypedName","src":"10460:9:33","type":""},{"name":"dataEnd","nativeSrc":"10471:7:33","nodeType":"YulTypedName","src":"10471:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10483:6:33","nodeType":"YulTypedName","src":"10483:6:33","type":""}],"src":"10413:184:33"},{"body":{"nativeSrc":"10731:145:33","nodeType":"YulBlock","src":"10731:145:33","statements":[{"nativeSrc":"10741:26:33","nodeType":"YulAssignment","src":"10741:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"10753:9:33","nodeType":"YulIdentifier","src":"10753:9:33"},{"kind":"number","nativeSrc":"10764:2:33","nodeType":"YulLiteral","src":"10764:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10749:3:33","nodeType":"YulIdentifier","src":"10749:3:33"},"nativeSrc":"10749:18:33","nodeType":"YulFunctionCall","src":"10749:18:33"},"variableNames":[{"name":"tail","nativeSrc":"10741:4:33","nodeType":"YulIdentifier","src":"10741:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10783:9:33","nodeType":"YulIdentifier","src":"10783:9:33"},{"arguments":[{"name":"value0","nativeSrc":"10798:6:33","nodeType":"YulIdentifier","src":"10798:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10814:3:33","nodeType":"YulLiteral","src":"10814:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"10819:1:33","nodeType":"YulLiteral","src":"10819:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10810:3:33","nodeType":"YulIdentifier","src":"10810:3:33"},"nativeSrc":"10810:11:33","nodeType":"YulFunctionCall","src":"10810:11:33"},{"kind":"number","nativeSrc":"10823:1:33","nodeType":"YulLiteral","src":"10823:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10806:3:33","nodeType":"YulIdentifier","src":"10806:3:33"},"nativeSrc":"10806:19:33","nodeType":"YulFunctionCall","src":"10806:19:33"}],"functionName":{"name":"and","nativeSrc":"10794:3:33","nodeType":"YulIdentifier","src":"10794:3:33"},"nativeSrc":"10794:32:33","nodeType":"YulFunctionCall","src":"10794:32:33"}],"functionName":{"name":"mstore","nativeSrc":"10776:6:33","nodeType":"YulIdentifier","src":"10776:6:33"},"nativeSrc":"10776:51:33","nodeType":"YulFunctionCall","src":"10776:51:33"},"nativeSrc":"10776:51:33","nodeType":"YulExpressionStatement","src":"10776:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10847:9:33","nodeType":"YulIdentifier","src":"10847:9:33"},{"kind":"number","nativeSrc":"10858:2:33","nodeType":"YulLiteral","src":"10858:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10843:3:33","nodeType":"YulIdentifier","src":"10843:3:33"},"nativeSrc":"10843:18:33","nodeType":"YulFunctionCall","src":"10843:18:33"},{"name":"value1","nativeSrc":"10863:6:33","nodeType":"YulIdentifier","src":"10863:6:33"}],"functionName":{"name":"mstore","nativeSrc":"10836:6:33","nodeType":"YulIdentifier","src":"10836:6:33"},"nativeSrc":"10836:34:33","nodeType":"YulFunctionCall","src":"10836:34:33"},"nativeSrc":"10836:34:33","nodeType":"YulExpressionStatement","src":"10836:34:33"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"10602:274:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10692:9:33","nodeType":"YulTypedName","src":"10692:9:33","type":""},{"name":"value1","nativeSrc":"10703:6:33","nodeType":"YulTypedName","src":"10703:6:33","type":""},{"name":"value0","nativeSrc":"10711:6:33","nodeType":"YulTypedName","src":"10711:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10722:4:33","nodeType":"YulTypedName","src":"10722:4:33","type":""}],"src":"10602:274:33"},{"body":{"nativeSrc":"10936:325:33","nodeType":"YulBlock","src":"10936:325:33","statements":[{"nativeSrc":"10946:22:33","nodeType":"YulAssignment","src":"10946:22:33","value":{"arguments":[{"kind":"number","nativeSrc":"10960:1:33","nodeType":"YulLiteral","src":"10960:1:33","type":"","value":"1"},{"name":"data","nativeSrc":"10963:4:33","nodeType":"YulIdentifier","src":"10963:4:33"}],"functionName":{"name":"shr","nativeSrc":"10956:3:33","nodeType":"YulIdentifier","src":"10956:3:33"},"nativeSrc":"10956:12:33","nodeType":"YulFunctionCall","src":"10956:12:33"},"variableNames":[{"name":"length","nativeSrc":"10946:6:33","nodeType":"YulIdentifier","src":"10946:6:33"}]},{"nativeSrc":"10977:38:33","nodeType":"YulVariableDeclaration","src":"10977:38:33","value":{"arguments":[{"name":"data","nativeSrc":"11007:4:33","nodeType":"YulIdentifier","src":"11007:4:33"},{"kind":"number","nativeSrc":"11013:1:33","nodeType":"YulLiteral","src":"11013:1:33","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11003:3:33","nodeType":"YulIdentifier","src":"11003:3:33"},"nativeSrc":"11003:12:33","nodeType":"YulFunctionCall","src":"11003:12:33"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"10981:18:33","nodeType":"YulTypedName","src":"10981:18:33","type":""}]},{"body":{"nativeSrc":"11054:31:33","nodeType":"YulBlock","src":"11054:31:33","statements":[{"nativeSrc":"11056:27:33","nodeType":"YulAssignment","src":"11056:27:33","value":{"arguments":[{"name":"length","nativeSrc":"11070:6:33","nodeType":"YulIdentifier","src":"11070:6:33"},{"kind":"number","nativeSrc":"11078:4:33","nodeType":"YulLiteral","src":"11078:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"11066:3:33","nodeType":"YulIdentifier","src":"11066:3:33"},"nativeSrc":"11066:17:33","nodeType":"YulFunctionCall","src":"11066:17:33"},"variableNames":[{"name":"length","nativeSrc":"11056:6:33","nodeType":"YulIdentifier","src":"11056:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11034:18:33","nodeType":"YulIdentifier","src":"11034:18:33"}],"functionName":{"name":"iszero","nativeSrc":"11027:6:33","nodeType":"YulIdentifier","src":"11027:6:33"},"nativeSrc":"11027:26:33","nodeType":"YulFunctionCall","src":"11027:26:33"},"nativeSrc":"11024:61:33","nodeType":"YulIf","src":"11024:61:33"},{"body":{"nativeSrc":"11144:111:33","nodeType":"YulBlock","src":"11144:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11165:1:33","nodeType":"YulLiteral","src":"11165:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"11172:3:33","nodeType":"YulLiteral","src":"11172:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"11177:10:33","nodeType":"YulLiteral","src":"11177:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"11168:3:33","nodeType":"YulIdentifier","src":"11168:3:33"},"nativeSrc":"11168:20:33","nodeType":"YulFunctionCall","src":"11168:20:33"}],"functionName":{"name":"mstore","nativeSrc":"11158:6:33","nodeType":"YulIdentifier","src":"11158:6:33"},"nativeSrc":"11158:31:33","nodeType":"YulFunctionCall","src":"11158:31:33"},"nativeSrc":"11158:31:33","nodeType":"YulExpressionStatement","src":"11158:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11209:1:33","nodeType":"YulLiteral","src":"11209:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"11212:4:33","nodeType":"YulLiteral","src":"11212:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"11202:6:33","nodeType":"YulIdentifier","src":"11202:6:33"},"nativeSrc":"11202:15:33","nodeType":"YulFunctionCall","src":"11202:15:33"},"nativeSrc":"11202:15:33","nodeType":"YulExpressionStatement","src":"11202:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11237:1:33","nodeType":"YulLiteral","src":"11237:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"11240:4:33","nodeType":"YulLiteral","src":"11240:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11230:6:33","nodeType":"YulIdentifier","src":"11230:6:33"},"nativeSrc":"11230:15:33","nodeType":"YulFunctionCall","src":"11230:15:33"},"nativeSrc":"11230:15:33","nodeType":"YulExpressionStatement","src":"11230:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11100:18:33","nodeType":"YulIdentifier","src":"11100:18:33"},{"arguments":[{"name":"length","nativeSrc":"11123:6:33","nodeType":"YulIdentifier","src":"11123:6:33"},{"kind":"number","nativeSrc":"11131:2:33","nodeType":"YulLiteral","src":"11131:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11120:2:33","nodeType":"YulIdentifier","src":"11120:2:33"},"nativeSrc":"11120:14:33","nodeType":"YulFunctionCall","src":"11120:14:33"}],"functionName":{"name":"eq","nativeSrc":"11097:2:33","nodeType":"YulIdentifier","src":"11097:2:33"},"nativeSrc":"11097:38:33","nodeType":"YulFunctionCall","src":"11097:38:33"},"nativeSrc":"11094:161:33","nodeType":"YulIf","src":"11094:161:33"}]},"name":"extract_byte_array_length","nativeSrc":"10881:380:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"10916:4:33","nodeType":"YulTypedName","src":"10916:4:33","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10925:6:33","nodeType":"YulTypedName","src":"10925:6:33","type":""}],"src":"10881:380:33"},{"body":{"nativeSrc":"11298:95:33","nodeType":"YulBlock","src":"11298:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11315:1:33","nodeType":"YulLiteral","src":"11315:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"11322:3:33","nodeType":"YulLiteral","src":"11322:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"11327:10:33","nodeType":"YulLiteral","src":"11327:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"11318:3:33","nodeType":"YulIdentifier","src":"11318:3:33"},"nativeSrc":"11318:20:33","nodeType":"YulFunctionCall","src":"11318:20:33"}],"functionName":{"name":"mstore","nativeSrc":"11308:6:33","nodeType":"YulIdentifier","src":"11308:6:33"},"nativeSrc":"11308:31:33","nodeType":"YulFunctionCall","src":"11308:31:33"},"nativeSrc":"11308:31:33","nodeType":"YulExpressionStatement","src":"11308:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11355:1:33","nodeType":"YulLiteral","src":"11355:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"11358:4:33","nodeType":"YulLiteral","src":"11358:4:33","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"11348:6:33","nodeType":"YulIdentifier","src":"11348:6:33"},"nativeSrc":"11348:15:33","nodeType":"YulFunctionCall","src":"11348:15:33"},"nativeSrc":"11348:15:33","nodeType":"YulExpressionStatement","src":"11348:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11379:1:33","nodeType":"YulLiteral","src":"11379:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"11382:4:33","nodeType":"YulLiteral","src":"11382:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11372:6:33","nodeType":"YulIdentifier","src":"11372:6:33"},"nativeSrc":"11372:15:33","nodeType":"YulFunctionCall","src":"11372:15:33"},"nativeSrc":"11372:15:33","nodeType":"YulExpressionStatement","src":"11372:15:33"}]},"name":"panic_error_0x21","nativeSrc":"11266:127:33","nodeType":"YulFunctionDefinition","src":"11266:127:33"},{"body":{"nativeSrc":"11535:150:33","nodeType":"YulBlock","src":"11535:150:33","statements":[{"nativeSrc":"11545:27:33","nodeType":"YulVariableDeclaration","src":"11545:27:33","value":{"arguments":[{"name":"value0","nativeSrc":"11565:6:33","nodeType":"YulIdentifier","src":"11565:6:33"}],"functionName":{"name":"mload","nativeSrc":"11559:5:33","nodeType":"YulIdentifier","src":"11559:5:33"},"nativeSrc":"11559:13:33","nodeType":"YulFunctionCall","src":"11559:13:33"},"variables":[{"name":"length","nativeSrc":"11549:6:33","nodeType":"YulTypedName","src":"11549:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"11620:6:33","nodeType":"YulIdentifier","src":"11620:6:33"},{"kind":"number","nativeSrc":"11628:4:33","nodeType":"YulLiteral","src":"11628:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11616:3:33","nodeType":"YulIdentifier","src":"11616:3:33"},"nativeSrc":"11616:17:33","nodeType":"YulFunctionCall","src":"11616:17:33"},{"name":"pos","nativeSrc":"11635:3:33","nodeType":"YulIdentifier","src":"11635:3:33"},{"name":"length","nativeSrc":"11640:6:33","nodeType":"YulIdentifier","src":"11640:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11581:34:33","nodeType":"YulIdentifier","src":"11581:34:33"},"nativeSrc":"11581:66:33","nodeType":"YulFunctionCall","src":"11581:66:33"},"nativeSrc":"11581:66:33","nodeType":"YulExpressionStatement","src":"11581:66:33"},{"nativeSrc":"11656:23:33","nodeType":"YulAssignment","src":"11656:23:33","value":{"arguments":[{"name":"pos","nativeSrc":"11667:3:33","nodeType":"YulIdentifier","src":"11667:3:33"},{"name":"length","nativeSrc":"11672:6:33","nodeType":"YulIdentifier","src":"11672:6:33"}],"functionName":{"name":"add","nativeSrc":"11663:3:33","nodeType":"YulIdentifier","src":"11663:3:33"},"nativeSrc":"11663:16:33","nodeType":"YulFunctionCall","src":"11663:16:33"},"variableNames":[{"name":"end","nativeSrc":"11656:3:33","nodeType":"YulIdentifier","src":"11656:3:33"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"11398:287:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11511:3:33","nodeType":"YulTypedName","src":"11511:3:33","type":""},{"name":"value0","nativeSrc":"11516:6:33","nodeType":"YulTypedName","src":"11516:6:33","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11527:3:33","nodeType":"YulTypedName","src":"11527:3:33","type":""}],"src":"11398:287:33"},{"body":{"nativeSrc":"11903:276:33","nodeType":"YulBlock","src":"11903:276:33","statements":[{"nativeSrc":"11913:27:33","nodeType":"YulAssignment","src":"11913:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"11925:9:33","nodeType":"YulIdentifier","src":"11925:9:33"},{"kind":"number","nativeSrc":"11936:3:33","nodeType":"YulLiteral","src":"11936:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"11921:3:33","nodeType":"YulIdentifier","src":"11921:3:33"},"nativeSrc":"11921:19:33","nodeType":"YulFunctionCall","src":"11921:19:33"},"variableNames":[{"name":"tail","nativeSrc":"11913:4:33","nodeType":"YulIdentifier","src":"11913:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11956:9:33","nodeType":"YulIdentifier","src":"11956:9:33"},{"name":"value0","nativeSrc":"11967:6:33","nodeType":"YulIdentifier","src":"11967:6:33"}],"functionName":{"name":"mstore","nativeSrc":"11949:6:33","nodeType":"YulIdentifier","src":"11949:6:33"},"nativeSrc":"11949:25:33","nodeType":"YulFunctionCall","src":"11949:25:33"},"nativeSrc":"11949:25:33","nodeType":"YulExpressionStatement","src":"11949:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11994:9:33","nodeType":"YulIdentifier","src":"11994:9:33"},{"kind":"number","nativeSrc":"12005:2:33","nodeType":"YulLiteral","src":"12005:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11990:3:33","nodeType":"YulIdentifier","src":"11990:3:33"},"nativeSrc":"11990:18:33","nodeType":"YulFunctionCall","src":"11990:18:33"},{"name":"value1","nativeSrc":"12010:6:33","nodeType":"YulIdentifier","src":"12010:6:33"}],"functionName":{"name":"mstore","nativeSrc":"11983:6:33","nodeType":"YulIdentifier","src":"11983:6:33"},"nativeSrc":"11983:34:33","nodeType":"YulFunctionCall","src":"11983:34:33"},"nativeSrc":"11983:34:33","nodeType":"YulExpressionStatement","src":"11983:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12037:9:33","nodeType":"YulIdentifier","src":"12037:9:33"},{"kind":"number","nativeSrc":"12048:2:33","nodeType":"YulLiteral","src":"12048:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12033:3:33","nodeType":"YulIdentifier","src":"12033:3:33"},"nativeSrc":"12033:18:33","nodeType":"YulFunctionCall","src":"12033:18:33"},{"name":"value2","nativeSrc":"12053:6:33","nodeType":"YulIdentifier","src":"12053:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12026:6:33","nodeType":"YulIdentifier","src":"12026:6:33"},"nativeSrc":"12026:34:33","nodeType":"YulFunctionCall","src":"12026:34:33"},"nativeSrc":"12026:34:33","nodeType":"YulExpressionStatement","src":"12026:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12080:9:33","nodeType":"YulIdentifier","src":"12080:9:33"},{"kind":"number","nativeSrc":"12091:2:33","nodeType":"YulLiteral","src":"12091:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12076:3:33","nodeType":"YulIdentifier","src":"12076:3:33"},"nativeSrc":"12076:18:33","nodeType":"YulFunctionCall","src":"12076:18:33"},{"name":"value3","nativeSrc":"12096:6:33","nodeType":"YulIdentifier","src":"12096:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12069:6:33","nodeType":"YulIdentifier","src":"12069:6:33"},"nativeSrc":"12069:34:33","nodeType":"YulFunctionCall","src":"12069:34:33"},"nativeSrc":"12069:34:33","nodeType":"YulExpressionStatement","src":"12069:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12123:9:33","nodeType":"YulIdentifier","src":"12123:9:33"},{"kind":"number","nativeSrc":"12134:3:33","nodeType":"YulLiteral","src":"12134:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12119:3:33","nodeType":"YulIdentifier","src":"12119:3:33"},"nativeSrc":"12119:19:33","nodeType":"YulFunctionCall","src":"12119:19:33"},{"arguments":[{"name":"value4","nativeSrc":"12144:6:33","nodeType":"YulIdentifier","src":"12144:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12160:3:33","nodeType":"YulLiteral","src":"12160:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"12165:1:33","nodeType":"YulLiteral","src":"12165:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12156:3:33","nodeType":"YulIdentifier","src":"12156:3:33"},"nativeSrc":"12156:11:33","nodeType":"YulFunctionCall","src":"12156:11:33"},{"kind":"number","nativeSrc":"12169:1:33","nodeType":"YulLiteral","src":"12169:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12152:3:33","nodeType":"YulIdentifier","src":"12152:3:33"},"nativeSrc":"12152:19:33","nodeType":"YulFunctionCall","src":"12152:19:33"}],"functionName":{"name":"and","nativeSrc":"12140:3:33","nodeType":"YulIdentifier","src":"12140:3:33"},"nativeSrc":"12140:32:33","nodeType":"YulFunctionCall","src":"12140:32:33"}],"functionName":{"name":"mstore","nativeSrc":"12112:6:33","nodeType":"YulIdentifier","src":"12112:6:33"},"nativeSrc":"12112:61:33","nodeType":"YulFunctionCall","src":"12112:61:33"},"nativeSrc":"12112:61:33","nodeType":"YulExpressionStatement","src":"12112:61:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"11690:489:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11840:9:33","nodeType":"YulTypedName","src":"11840:9:33","type":""},{"name":"value4","nativeSrc":"11851:6:33","nodeType":"YulTypedName","src":"11851:6:33","type":""},{"name":"value3","nativeSrc":"11859:6:33","nodeType":"YulTypedName","src":"11859:6:33","type":""},{"name":"value2","nativeSrc":"11867:6:33","nodeType":"YulTypedName","src":"11867:6:33","type":""},{"name":"value1","nativeSrc":"11875:6:33","nodeType":"YulTypedName","src":"11875:6:33","type":""},{"name":"value0","nativeSrc":"11883:6:33","nodeType":"YulTypedName","src":"11883:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11894:4:33","nodeType":"YulTypedName","src":"11894:4:33","type":""}],"src":"11690:489:33"},{"body":{"nativeSrc":"12365:217:33","nodeType":"YulBlock","src":"12365:217:33","statements":[{"nativeSrc":"12375:27:33","nodeType":"YulAssignment","src":"12375:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"12387:9:33","nodeType":"YulIdentifier","src":"12387:9:33"},{"kind":"number","nativeSrc":"12398:3:33","nodeType":"YulLiteral","src":"12398:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12383:3:33","nodeType":"YulIdentifier","src":"12383:3:33"},"nativeSrc":"12383:19:33","nodeType":"YulFunctionCall","src":"12383:19:33"},"variableNames":[{"name":"tail","nativeSrc":"12375:4:33","nodeType":"YulIdentifier","src":"12375:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12418:9:33","nodeType":"YulIdentifier","src":"12418:9:33"},{"name":"value0","nativeSrc":"12429:6:33","nodeType":"YulIdentifier","src":"12429:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12411:6:33","nodeType":"YulIdentifier","src":"12411:6:33"},"nativeSrc":"12411:25:33","nodeType":"YulFunctionCall","src":"12411:25:33"},"nativeSrc":"12411:25:33","nodeType":"YulExpressionStatement","src":"12411:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12456:9:33","nodeType":"YulIdentifier","src":"12456:9:33"},{"kind":"number","nativeSrc":"12467:2:33","nodeType":"YulLiteral","src":"12467:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12452:3:33","nodeType":"YulIdentifier","src":"12452:3:33"},"nativeSrc":"12452:18:33","nodeType":"YulFunctionCall","src":"12452:18:33"},{"arguments":[{"name":"value1","nativeSrc":"12476:6:33","nodeType":"YulIdentifier","src":"12476:6:33"},{"kind":"number","nativeSrc":"12484:4:33","nodeType":"YulLiteral","src":"12484:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"12472:3:33","nodeType":"YulIdentifier","src":"12472:3:33"},"nativeSrc":"12472:17:33","nodeType":"YulFunctionCall","src":"12472:17:33"}],"functionName":{"name":"mstore","nativeSrc":"12445:6:33","nodeType":"YulIdentifier","src":"12445:6:33"},"nativeSrc":"12445:45:33","nodeType":"YulFunctionCall","src":"12445:45:33"},"nativeSrc":"12445:45:33","nodeType":"YulExpressionStatement","src":"12445:45:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12510:9:33","nodeType":"YulIdentifier","src":"12510:9:33"},{"kind":"number","nativeSrc":"12521:2:33","nodeType":"YulLiteral","src":"12521:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12506:3:33","nodeType":"YulIdentifier","src":"12506:3:33"},"nativeSrc":"12506:18:33","nodeType":"YulFunctionCall","src":"12506:18:33"},{"name":"value2","nativeSrc":"12526:6:33","nodeType":"YulIdentifier","src":"12526:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12499:6:33","nodeType":"YulIdentifier","src":"12499:6:33"},"nativeSrc":"12499:34:33","nodeType":"YulFunctionCall","src":"12499:34:33"},"nativeSrc":"12499:34:33","nodeType":"YulExpressionStatement","src":"12499:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12553:9:33","nodeType":"YulIdentifier","src":"12553:9:33"},{"kind":"number","nativeSrc":"12564:2:33","nodeType":"YulLiteral","src":"12564:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12549:3:33","nodeType":"YulIdentifier","src":"12549:3:33"},"nativeSrc":"12549:18:33","nodeType":"YulFunctionCall","src":"12549:18:33"},{"name":"value3","nativeSrc":"12569:6:33","nodeType":"YulIdentifier","src":"12569:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12542:6:33","nodeType":"YulIdentifier","src":"12542:6:33"},"nativeSrc":"12542:34:33","nodeType":"YulFunctionCall","src":"12542:34:33"},"nativeSrc":"12542:34:33","nodeType":"YulExpressionStatement","src":"12542:34:33"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"12184:398:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12310:9:33","nodeType":"YulTypedName","src":"12310:9:33","type":""},{"name":"value3","nativeSrc":"12321:6:33","nodeType":"YulTypedName","src":"12321:6:33","type":""},{"name":"value2","nativeSrc":"12329:6:33","nodeType":"YulTypedName","src":"12329:6:33","type":""},{"name":"value1","nativeSrc":"12337:6:33","nodeType":"YulTypedName","src":"12337:6:33","type":""},{"name":"value0","nativeSrc":"12345:6:33","nodeType":"YulTypedName","src":"12345:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12356:4:33","nodeType":"YulTypedName","src":"12356:4:33","type":""}],"src":"12184:398:33"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_Distribution_$8892_memory_ptr__to_t_struct$_Distribution_$8892_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(mload(value0), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), iszero(iszero(mload(add(value0, 0xa0)))))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_contract$_RewardPool_$8840__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_bytes32t_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        let offset := calldataload(add(headStart, 160))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value5 := add(_2, 32)\n        value6 := length\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"652":[{"length":32,"start":4378},{"length":32,"start":4419},{"length":32,"start":4750}],"4710":[{"length":32,"start":5797}],"4712":[{"length":32,"start":5755}],"4714":[{"length":32,"start":5713}],"4716":[{"length":32,"start":5878}],"4718":[{"length":32,"start":5918}],"4721":[{"length":32,"start":4892}],"4724":[{"length":32,"start":4942}]},"linkReferences":{},"object":"6080604052600436106101665760003560e01c806384b0196e116100d1578063c0c53b8b1161008a578063dba2844b11610064578063dba2844b146104b8578063dc8999b4146104d8578063e2d80d1514610571578063e63ab1e9146105b457600080fd5b8063c0c53b8b14610458578063c32dcd8d14610478578063d547741f1461049857600080fd5b806384b0196e1461036957806391d148541461039157806395130a8b146103b1578063a1ebf35d146103d1578063a217fddf14610405578063ad3cb1cc1461041a57600080fd5b80633f4ba83a116101235780633f4ba83a146102ba5780634f1ef286146102cf57806352d1902d146102e25780635c975abb146102f757806366666aa91461031c5780638456cb591461035457600080fd5b806301ffc9a71461016b578063120aa877146101a0578063248a9ca3146101e65780632f2ff15d1461020657806336568abe146102285780633b345a8714610248575b600080fd5b34801561017757600080fd5b5061018b610186366004611b46565b6105d6565b60405190151581526020015b60405180910390f35b3480156101ac57600080fd5b506101d86101bb366004611b8c565b600460209081526000928352604080842090915290825290205481565b604051908152602001610197565b3480156101f257600080fd5b506101d8610201366004611bb8565b61060d565b34801561021257600080fd5b50610226610221366004611b8c565b61062f565b005b34801561023457600080fd5b50610226610243366004611b8c565b610651565b34801561025457600080fd5b50610268610263366004611bb8565b610689565b604051610197919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a09182015115159181019190915260c00190565b3480156102c657600080fd5b50610226610733565b6102266102dd366004611be7565b610756565b3480156102ee57600080fd5b506101d8610775565b34801561030357600080fd5b50600080516020611fdf8339815191525460ff1661018b565b34801561032857600080fd5b5060025461033c906001600160a01b031681565b6040516001600160a01b039091168152602001610197565b34801561036057600080fd5b50610226610792565b34801561037557600080fd5b5061037e6107b2565b6040516101979796959493929190611cf9565b34801561039d57600080fd5b5061018b6103ac366004611b8c565b6107f8565b3480156103bd57600080fd5b506102266103cc366004611b8c565b610830565b3480156103dd57600080fd5b506101d87fe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f7081565b34801561041157600080fd5b506101d8600081565b34801561042657600080fd5b5061044b604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101979190611d92565b34801561046457600080fd5b50610226610473366004611da5565b6108c9565b34801561048457600080fd5b50610226610493366004611de8565b610a49565b3480156104a457600080fd5b506102266104b3366004611b8c565b610d9f565b3480156104c457600080fd5b506102266104d3366004611e92565b610dbb565b3480156104e457600080fd5b506105386104f3366004611bb8565b60036020819052600091825260409091208054600182015460028301549383015460048401546005909401546001600160a01b03909316949193919290919060ff1686565b604080516001600160a01b03909716875260208701959095529385019290925260608401526080830152151560a082015260c001610197565b34801561057d57600080fd5b506101d861058c366004611b8c565b60009182526004602090815260408084206001600160a01b0393909316845291905290205490565b3480156105c057600080fd5b506101d8600080516020611f9f83398151915281565b60006001600160e01b03198216637965db0b60e01b148061060757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000908152600080516020611fbf833981519152602052604090206001015490565b6106388261060d565b61064181610f84565b61064b8383610f8e565b50505050565b6001600160a01b038116331461067a5760405163334bd91960e11b815260040160405180910390fd5b6106848282611033565b505050565b6106cd6040518060c0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b50600090815260036020818152604092839020835160c08101855281546001600160a01b031681526001820154928101929092526002810154938201939093529082015460608201526004820154608082015260059091015460ff16151560a082015290565b600080516020611f9f83398151915261074b81610f84565b6107536110af565b50565b61075e61110f565b610767826111b6565b61077182826111c1565b5050565b600061077f611283565b50600080516020611f7f83398151915290565b600080516020611f9f8339815191526107aa81610f84565b6107536112cc565b6000606080600080600060606107c6611315565b6107ce611347565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000918252600080516020611fbf833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600061083b81610f84565b6000838152600360205260409020600581015460ff1661086e576040516392ad298360e01b815260040160405180910390fd5b8060040154421161089257604051631ab7da6b60e01b815260040160405180910390fd5b6001600160a01b0383166108b95760405163162908e360e11b815260040160405180910390fd5b600501805460ff19169055505050565b60006108d3611374565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156108fb5750825b905060008267ffffffffffffffff1660011480156109185750303b155b905081158015610926575080155b156109445760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561096e57845460ff60401b1916600160401b1785555b61097661139d565b61097e61139d565b6109866113a5565b61098e61139d565b600280546001600160a01b0319166001600160a01b038a161790556109b4600088610f8e565b506109cd600080516020611f9f83398151915288610f8e565b506109f87fe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f7087610f8e565b508315610a3f57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b610a516113b5565b610a596113ff565b6001600160a01b038516610a805760405163162908e360e11b815260040160405180910390fd5b428311610aa057604051631ab7da6b60e01b815260040160405180910390fd5b6000878152600360205260409020600581015460ff16610ad3576040516392ad298360e01b815260040160405180910390fd5b8060040154841115610af857604051631ab7da6b60e01b815260040160405180910390fd5b604080517fe3f1b81f38aed56d9d50835cd8510e70aff243bef2f53673805bc198203518a96020820152908101899052606081018890526001600160a01b038716608082015260a0810186905260c08101859052600090610b719060e00160405160208183030381529060405280519060200120611430565b90506000610bb785858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250869392505061145d9050565b9050610be37fe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70826107f8565b610c0057604051636518c33d60e11b815260040160405180910390fd5b60008a81526004602090815260408083206001600160a01b038c168452909152902054808811610c425760405162fc559f60e81b815260040160405180910390fd5b6000610c4e828a611ed8565b90508085600201541015610c75576040516304fce4c160e21b815260040160405180910390fd5b60008c81526004602090815260408083206001600160a01b038e16845290915281208a9055600286018054839290610cae908490611ed8565b90915550506002548554604051634026cf2360e01b81526001600160a01b0391821660048201528c8216602482015260448101849052911690634026cf2390606401600060405180830381600087803b158015610d0a57600080fd5b505af1158015610d1e573d6000803e3d6000fd5b505060408051848152602081018d90526001600160a01b038e1693508f92507fd9cb1e2714d65a111c0f20f060176ad657496bd47a3de04ec7c3d4ca232112ac910160405180910390a35050505050610d9660017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b50505050505050565b610da88261060d565b610db181610f84565b61064b8383611033565b6000610dc681610f84565b6001600160a01b038516610ded5760405163162908e360e11b815260040160405180910390fd5b83600003610e0e5760405163162908e360e11b815260040160405180910390fd5b428211610e2e57604051631da7447960e21b815260040160405180910390fd5b60008681526003602052604090206005015460ff1615610e6157604051633a35c2f960e01b815260040160405180910390fd5b6040518060c00160405280866001600160a01b03168152602001858152602001858152602001848152602001838152602001600115158152506003600088815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550905050846001600160a01b0316867fe27e5a775a199e96de84d4ca626ac186c4bbc03163b3d525ea3ad4098b1f25d5868686604051610f74939291909283526020830191909152604082015260600190565b60405180910390a3505050505050565b61075381336114ad565b6000600080516020611fbf833981519152610fa984846107f8565b611029576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055610fdf3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610607565b6000915050610607565b6000600080516020611fbf83398151915261104e84846107f8565b15611029576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610607565b6110b76114e6565b600080516020611fdf833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061119657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661118a600080516020611f7f833981519152546001600160a01b031690565b6001600160a01b031614155b156111b45760405163703e46dd60e11b815260040160405180910390fd5b565b600061077181610f84565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561121b575060408051601f3d908101601f1916820190925261121891810190611ef9565b60015b61124857604051634c9c8ce360e01b81526001600160a01b03831660048201526024015b60405180910390fd5b600080516020611f7f833981519152811461127957604051632a87526960e21b81526004810182905260240161123f565b6106848383611516565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111b45760405163703e46dd60e11b815260040160405180910390fd5b6112d46113ff565b600080516020611fdf833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336110f1565b60606113427f0000000000000000000000000000000000000000000000000000000000000000600061156c565b905090565b60606113427f0000000000000000000000000000000000000000000000000000000000000000600161156c565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610607565b6111b4611617565b6113ad611617565b6111b461163c565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f008054600119016113f957604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b600080516020611fdf8339815191525460ff16156111b45760405163d93c066560e01b815260040160405180910390fd5b600061060761143d611644565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061146d868661176f565b92509250925061147d82826117bc565b5090949350505050565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b6114b782826107f8565b6107715760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161123f565b600080516020611fdf8339815191525460ff166111b457604051638dfc202b60e01b815260040160405180910390fd5b61151f82611875565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156115645761068482826118da565b610771611950565b606060ff83146115865761157f8361196f565b9050610607565b81805461159290611f12565b80601f01602080910402602001604051908101604052809291908181526020018280546115be90611f12565b801561160b5780601f106115e05761010080835404028352916020019161160b565b820191906000526020600020905b8154815290600101906020018083116115ee57829003601f168201915b50505050509050610607565b61161f6119ae565b6111b457604051631afcd79f60e31b815260040160405180910390fd5b611487611617565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561169d57507f000000000000000000000000000000000000000000000000000000000000000046145b156116c757507f000000000000000000000000000000000000000000000000000000000000000090565b611342604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080600083516041036117a95760208401516040850151606086015160001a61179b888285856119c8565b9550955095505050506117b5565b50508151600091506002905b9250925092565b60008260038111156117d0576117d0611f4c565b036117d9575050565b60018260038111156117ed576117ed611f4c565b0361180b5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561181f5761181f611f4c565b036118405760405163fce698f760e01b81526004810182905260240161123f565b600382600381111561185457611854611f4c565b03610771576040516335e2f38360e21b81526004810182905260240161123f565b806001600160a01b03163b6000036118ab57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161123f565b600080516020611f7f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516118f79190611f62565b600060405180830381855af49150503d8060008114611932576040519150601f19603f3d011682016040523d82523d6000602084013e611937565b606091505b5091509150611947858383611a97565b95945050505050565b34156111b45760405163b398979f60e01b815260040160405180910390fd5b6060600061197c83611af6565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60006119b8611374565b54600160401b900460ff16919050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611a035750600091506003905082611a8d565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611a57573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a8357506000925060019150829050611a8d565b9250600091508190505b9450945094915050565b606082611aac57611aa782611b1e565b611aef565b8151158015611ac357506001600160a01b0384163b155b15611aec57604051639996b31560e01b81526001600160a01b038516600482015260240161123f565b50805b9392505050565b600060ff8216601f81111561060757604051632cd44ac360e21b815260040160405180910390fd5b805115611b2d57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b600060208284031215611b5857600080fd5b81356001600160e01b031981168114611aef57600080fd5b80356001600160a01b0381168114611b8757600080fd5b919050565b60008060408385031215611b9f57600080fd5b82359150611baf60208401611b70565b90509250929050565b600060208284031215611bca57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611bfa57600080fd5b611c0383611b70565b9150602083013567ffffffffffffffff80821115611c2057600080fd5b818501915085601f830112611c3457600080fd5b813581811115611c4657611c46611bd1565b604051601f8201601f19908116603f01168101908382118183101715611c6e57611c6e611bd1565b81604052828152886020848701011115611c8757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b83811015611cc4578181015183820152602001611cac565b50506000910152565b60008151808452611ce5816020860160208601611ca9565b601f01601f19169290920160200192915050565b60ff60f81b881681526000602060e06020840152611d1a60e084018a611ccd565b8381036040850152611d2c818a611ccd565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015611d8057835183529284019291840191600101611d64565b50909c9b505050505050505050505050565b602081526000611aef6020830184611ccd565b600080600060608486031215611dba57600080fd5b611dc384611b70565b9250611dd160208501611b70565b9150611ddf60408501611b70565b90509250925092565b600080600080600080600060c0888a031215611e0357600080fd5b8735965060208801359550611e1a60408901611b70565b9450606088013593506080880135925060a088013567ffffffffffffffff80821115611e4557600080fd5b818a0191508a601f830112611e5957600080fd5b813581811115611e6857600080fd5b8b6020828501011115611e7a57600080fd5b60208301945080935050505092959891949750929550565b600080600080600060a08688031215611eaa57600080fd5b85359450611eba60208701611b70565b94979496505050506040830135926060810135926080909101359150565b8181038181111561060757634e487b7160e01b600052601160045260246000fd5b600060208284031215611f0b57600080fd5b5051919050565b600181811c90821680611f2657607f821691505b602082108103611f4657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60008251611f74818460208701611ca9565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220a60c16a02e9fe686923f2172ffb3264d4f8f5e4ac133c11911fc34f2aa7fb50264736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x166 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84B0196E GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC0C53B8B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDBA2844B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBA2844B EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0xDC8999B4 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xE2D80D15 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xC32DCD8D EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x95130A8B EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xA1EBF35D EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x66666AA9 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x120AA877 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x3B345A87 EQ PUSH2 0x248 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x775 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x33C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x792 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37E PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA5 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0xA49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0xD9F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0xDBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x538 PUSH2 0x4F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x58C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x607 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x638 DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x641 DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x64B DUP4 DUP4 PUSH2 0xF8E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x684 DUP3 DUP3 PUSH2 0x1033 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6CD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xC0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x74B DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x753 PUSH2 0x10AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x75E PUSH2 0x110F JUMP JUMPDEST PUSH2 0x767 DUP3 PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0x771 DUP3 DUP3 PUSH2 0x11C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F PUSH2 0x1283 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x7AA DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x753 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x7C6 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83B DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH4 0x92AD2983 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D3 PUSH2 0x1374 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x8FB JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x918 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x926 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x96E JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x976 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x97E PUSH2 0x139D JUMP JUMPDEST PUSH2 0x986 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x98E PUSH2 0x139D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE PUSH2 0x9B4 PUSH1 0x0 DUP9 PUSH2 0xF8E JUMP JUMPDEST POP PUSH2 0x9CD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 PUSH2 0xF8E JUMP JUMPDEST POP PUSH2 0x9F8 PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP8 PUSH2 0xF8E JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xA3F JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA51 PUSH2 0x13B5 JUMP JUMPDEST PUSH2 0xA59 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xA80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP4 GT PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x92AD2983 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD DUP5 GT ISZERO PUSH2 0xAF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE3F1B81F38AED56D9D50835CD8510E70AFF243BEF2F53673805BC198203518A9 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xB71 SWAP1 PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBB7 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP4 SWAP3 POP POP PUSH2 0x145D SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH2 0xBE3 PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP3 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6518C33D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 DUP9 GT PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH3 0xFC559F PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC4E DUP3 DUP11 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4FCE4C1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP11 SWAP1 SSTORE PUSH1 0x2 DUP7 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xCAE SWAP1 DUP5 SWAP1 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD DUP6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4026CF23 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP13 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x4026CF23 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP4 POP DUP16 SWAP3 POP PUSH32 0xD9CB1E2714D65A111C0F20F060176AD657496BD47A3DE04EC7C3D4CA232112AC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH2 0xD96 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDA8 DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0xDB1 DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x64B DUP4 DUP4 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC6 DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xDED JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 SUB PUSH2 0xE0E JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 GT PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DA74479 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A35C2F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH32 0xE27E5A775A199E96DE84D4CA626AC186C4BBC03163B3D525EA3AD4098B1F25D5 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF74 SWAP4 SWAP3 SWAP2 SWAP1 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x753 DUP2 CALLER PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xFA9 DUP5 DUP5 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x1029 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xFDF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x607 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x607 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x104E DUP5 DUP5 PUSH2 0x7F8 JUMP JUMPDEST ISZERO PUSH2 0x1029 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x607 JUMP JUMPDEST PUSH2 0x10B7 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1196 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x118A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP2 PUSH2 0xF84 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x121B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1218 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x123F JUMP JUMPDEST PUSH2 0x684 DUP4 DUP4 PUSH2 0x1516 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D4 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1342 PUSH32 0x0 PUSH1 0x0 PUSH2 0x156C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1342 PUSH32 0x0 PUSH1 0x1 PUSH2 0x156C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x11B4 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x13AD PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x11B4 PUSH2 0x163C JUMP JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0x13F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x607 PUSH2 0x143D PUSH2 0x1644 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x146D DUP7 DUP7 PUSH2 0x176F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x147D DUP3 DUP3 PUSH2 0x17BC JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH2 0x14B7 DUP3 DUP3 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x123F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x151F DUP3 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1564 JUMPI PUSH2 0x684 DUP3 DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x771 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x1586 JUMPI PUSH2 0x157F DUP4 PUSH2 0x196F JUMP JUMPDEST SWAP1 POP PUSH2 0x607 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1592 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15BE SWAP1 PUSH2 0x1F12 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x160B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x160B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x607 JUMP JUMPDEST PUSH2 0x161F PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1487 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x169D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x16C7 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1342 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x17A9 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x179B DUP9 DUP3 DUP6 DUP6 PUSH2 0x19C8 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x17B5 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17D0 JUMPI PUSH2 0x17D0 PUSH2 0x1F4C JUMP JUMPDEST SUB PUSH2 0x17D9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17ED JUMPI PUSH2 0x17ED PUSH2 0x1F4C JUMP JUMPDEST SUB PUSH2 0x180B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x181F JUMPI PUSH2 0x181F PUSH2 0x1F4C JUMP JUMPDEST SUB PUSH2 0x1840 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x123F JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1854 PUSH2 0x1F4C JUMP JUMPDEST SUB PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x123F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x18AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x123F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x18F7 SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1932 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1947 DUP6 DUP4 DUP4 PUSH2 0x1A97 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x197C DUP4 PUSH2 0x1AF6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B8 PUSH2 0x1374 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1A03 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A83 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1A8D JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1AAC JUMPI PUSH2 0x1AA7 DUP3 PUSH2 0x1B1E JUMP JUMPDEST PUSH2 0x1AEF JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1AC3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1AEC JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x123F JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1B2D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1AEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1BAF PUSH1 0x20 DUP5 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C03 DUP4 PUSH2 0x1B70 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C46 JUMPI PUSH2 0x1C46 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1C6E JUMPI PUSH2 0x1C6E PUSH2 0x1BD1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1C87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CAC JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1CE5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D1A PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1CCD JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1D2C DUP2 DUP11 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D80 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1D64 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1AEF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC3 DUP5 PUSH2 0x1B70 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DD1 PUSH1 0x20 DUP6 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDF PUSH1 0x40 DUP6 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH2 0x1E1A PUSH1 0x40 DUP10 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP12 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x1EBA PUSH1 0x20 DUP8 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP3 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x607 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1F26 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F46 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1F74 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1CA9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220A60C16A02E9FE686923F2172FF 0xB3 0x26 0x4D 0x4F DUP16 MCOPY BLOBBASEFEE 0xC1 CALLER 0xC1 NOT GT 0xFC CALLVALUE CALLCODE 0xAA PUSH32 0xB50264736F6C6343000818003300000000000000000000000000000000000000 ","sourceMap":"716:5911:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:202:0;;;;;;;;;;-1:-1:-1;3491:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:33;;463:22;445:41;;433:2;418:18;3491:202:0;;;;;;;;1442:62:32;;;;;;;;;;-1:-1:-1;1442:62:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1080:25:33;;;1068:2;1053:18;1442:62:32;934:177:33;4807:191:0;;;;;;;;;;-1:-1:-1;4807:191:0;;;;;:::i;:::-;;:::i;5294:136::-;;;;;;;;;;-1:-1:-1;5294:136:0;;;;;:::i;:::-;;:::i;:::-;;6396:245;;;;;;;;;;-1:-1:-1;6396:245:0;;;;;:::i;:::-;;:::i;6215:114:32:-;;;;;;;;;;-1:-1:-1;6215:114:32;;;;;:::i;:::-;;:::i;:::-;;;;;;2156:13:33;;-1:-1:-1;;;;;2152:39:33;2134:58;;2248:4;2236:17;;;2230:24;2208:20;;;2201:54;2311:4;2299:17;;;2293:24;2271:20;;;2264:54;2374:4;2362:17;;;2356:24;2334:20;;;2327:54;2437:4;2425:17;;;2419:24;2397:20;;;2390:54;2179:3;2502:17;;;2496:24;2489:32;2482:40;2460:20;;;2453:70;;;;2121:3;2106:19;;1927:602;6082:77:32;;;;;;;;;;;;;:::i;4161:214:2:-;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;2496:145:4:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2625:9:4;;;2496:145;;1069:28:32;;;;;;;;;;-1:-1:-1;1069:28:32;;;;-1:-1:-1;;;;;1069:28:32;;;;;;-1:-1:-1;;;;;3849:32:33;;;3831:51;;3819:2;3804:18;1069:28:32;3666:222:33;6003:73:32;;;;;;;;;;;;;:::i;5228:557:25:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;3780:207:0:-;;;;;;;;;;-1:-1:-1;3780:207:0;;;;;:::i;:::-;;:::i;5447:499:32:-;;;;;;;;;;-1:-1:-1;5447:499:32;;;;;:::i;:::-;;:::i;1000:62::-;;;;;;;;;;;;1038:24;1000:62;;2398:49:0;;;;;;;;;;-1:-1:-1;2398:49:0;2443:4;2398:49;;1819:58:2;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;2289:449:32:-;;;;;;;;;;-1:-1:-1;2289:449:32;;;;;:::i;:::-;;:::i;3662:1700::-;;;;;;;;;;-1:-1:-1;3662:1700:32;;;;;:::i;:::-;;:::i;5710:138:0:-;;;;;;;;;;-1:-1:-1;5710:138:0;;;;;:::i;:::-;;:::i;2811:779:32:-;;;;;;;;;;-1:-1:-1;2811:779:32;;;;;:::i;:::-;;:::i;1391:45::-;;;;;;;;;;-1:-1:-1;1391:45:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1391:45:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7961:32:33;;;7943:51;;8025:2;8010:18;;8003:34;;;;8053:18;;;8046:34;;;;8111:2;8096:18;;8089:34;8154:3;8139:19;;8132:35;8211:14;8204:22;7981:3;8183:19;;8176:51;7930:3;7915:19;1391:45:32;7662:571:33;6391:125:32;;;;;;;;;;-1:-1:-1;6391:125:32;;;;;:::i;:::-;6463:7;6489:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;6489:20:32;;;;;;;;;;;;;6391:125;932:62;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;932:62:32;;3491:202:0;3576:4;-1:-1:-1;;;;;;3599:47:0;;-1:-1:-1;;;3599:47:0;;:87;;-1:-1:-1;;;;;;;;;;1101:40:6;;;3650:36:0;3592:94;3491:202;-1:-1:-1;;3491:202:0:o;4807:191::-;4872:7;4967:14;;;-1:-1:-1;;;;;;;;;;;4967:14:0;;;;;:24;;;;4807:191::o;5294:136::-;5368:18;5381:4;5368:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5398:25:::1;5409:4;5415:7;5398:10;:25::i;:::-;;5294:136:::0;;;:::o;6396:245::-;-1:-1:-1;;;;;6489:34:0;;966:10:3;6489:34:0;6485:102;;6546:30;;-1:-1:-1;;;6546:30:0;;;;;;;;;;;6485:102;6597:37;6609:4;6615:18;6597:11;:37::i;:::-;;6396:245;;:::o;6215:114:32:-;6275:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6275:19:32;-1:-1:-1;6313:9:32;;;;:5;:9;;;;;;;;;6306:16;;;;;;;;;-1:-1:-1;;;;;6306:16:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6215:114::o;6082:77::-;-1:-1:-1;;;;;;;;;;;3272:16:0;3283:4;3272:10;:16::i;:::-;6142:10:32::1;:8;:10::i;:::-;6082:77:::0;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;6003:73:32:-;-1:-1:-1;;;;;;;;;;;3272:16:0;3283:4;3272:10;:16::i;:::-;6061:8:32::1;:6;:8::i;5228:557:25:-:0;5326:13;5353:18;5385:21;5420:15;5449:25;5488:12;5514:27;5617:13;:11;:13::i;:::-;5644:16;:14;:16::i;:::-;5752;;;5736:1;5752:16;;;;;;;;;-1:-1:-1;;;5566:212:25;;;-1:-1:-1;5566:212:25;;-1:-1:-1;5674:13:25;;-1:-1:-1;5709:4:25;;-1:-1:-1;5736:1:25;-1:-1:-1;5752:16:25;-1:-1:-1;5566:212:25;-1:-1:-1;5228:557:25:o;3780:207:0:-;3857:4;3949:14;;;-1:-1:-1;;;;;;;;;;;3949:14:0;;;;;;;;-1:-1:-1;;;;;3949:31:0;;;;;;;;;;;;;;;3780:207::o;5447:499:32:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;5543:25:32::1;5571:9:::0;;;:5:::1;:9;::::0;;;;5595:11:::1;::::0;::::1;::::0;::::1;;5590:47;;5615:22;;-1:-1:-1::0;;;5615:22:32::1;;;;;;;;;;;5590:47;5670:4;:13;;;5651:15;:32;5647:62;;5692:17;;-1:-1:-1::0;;;5692:17:32::1;;;;;;;;;;;5647:62;-1:-1:-1::0;;;;;5723:16:32;::::1;5719:44;;5748:15;;-1:-1:-1::0;;;5748:15:32::1;;;;;;;;;;;5719:44;5782:11;;:19:::0;;-1:-1:-1;;5782:19:32::1;::::0;;-1:-1:-1;;;5447:499:32:o;2289:449::-;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;2422:22:32::1;:20;:22::i;:::-;2454:17;:15;:17::i;:::-;2481:24;:22;:24::i;:::-;2515;:22;:24::i;:::-;2558:10;:36:::0;;-1:-1:-1;;;;;;2558:36:32::1;-1:-1:-1::0;;;;;2558:36:32;::::1;;::::0;;2613:37:::1;-1:-1:-1::0;2644:5:32;2613:10:::1;:37::i;:::-;;2660:30;-1:-1:-1::0;;;;;;;;;;;2684:5:32::1;2660:10;:30::i;:::-;;2700:31;1038:24;2724:6;2700:10;:31::i;:::-;;5068:14:1::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;8391:50:33;;5140:14:1;;8379:2:33;8364:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;2289:449:32;;;:::o;3662:1700::-;3395:21:5;:19;:21::i;:::-;1979:19:4::1;:17;:19::i;:::-;-1:-1:-1::0;;;;;3908:21:32;::::2;3904:49;;3938:15;;-1:-1:-1::0;;;3938:15:32::2;;;;;;;;;;;3904:49;3979:15;3967:8;:27;3963:57;;4003:17;;-1:-1:-1::0;;;4003:17:32::2;;;;;;;;;;;3963:57;4039:25;4067:21:::0;;;:5:::2;:21;::::0;;;;4103:11:::2;::::0;::::2;::::0;::::2;;4098:47;;4123:22;;-1:-1:-1::0;;;4123:22:32::2;;;;;;;;;;;4098:47;4170:4;:13;;;4159:8;:24;4155:54;;;4192:17;;-1:-1:-1::0;;;4192:17:32::2;;;;;;;;;;;4155:54;4308:270;::::0;;4332:115:::2;4308:270;::::0;::::2;8739:25:33::0;8780:18;;;8773:34;;;8823:18;;;8816:34;;;-1:-1:-1;;;;;8886:32:33;;8866:18;;;8859:60;8935:19;;;8928:35;;;8979:19;;;8972:35;;;4264:14:32::2;::::0;4281:299:::2;::::0;8711:19:33;;4308:270:32::2;;;;;;;;;;;;4298:281;;;;;;4281:16;:299::i;:::-;4264:316;;4599:14;4616:25;4631:9;;4616:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;4616:6:32;;:25;-1:-1:-1;;4616:14:32::2;:25:::0;-1:-1:-1;4616:25:32:i:2;:::-;4599:42;;4656:28;1038:24;4677:6;4656:7;:28::i;:::-;4651:62;;4693:20;;-1:-1:-1::0;;;4693:20:32::2;;;;;;;;;;;4651:62;4770:22;4795:23:::0;;;:7:::2;:23;::::0;;;;;;;-1:-1:-1;;;;;4795:32:32;::::2;::::0;;;;;;;;4841:34;;::::2;4837:64;;4884:17;;-1:-1:-1::0;;;4884:17:32::2;;;;;;;;;;;4837:64;4920:15;4938:33;4957:14:::0;4938:16;:33:::2;:::i;:::-;4920:51;;5002:7;4985:4;:14;;;:24;4981:60;;;5018:23;;-1:-1:-1::0;;;5018:23:32::2;;;;;;;;;;;4981:60;5084:23;::::0;;;:7:::2;:23;::::0;;;;;;;-1:-1:-1;;;;;5084:32:32;::::2;::::0;;;;;;;:51;;;5145:14:::2;::::0;::::2;:25:::0;;5163:7;;5084:23;5145:25:::2;::::0;5163:7;;5145:25:::2;:::i;:::-;::::0;;;-1:-1:-1;;5226:10:32::2;::::0;5243;;5226:46:::2;::::0;-1:-1:-1;;;5226:46:32;;-1:-1:-1;;;;;5243:10:32;;::::2;5226:46;::::0;::::2;9488:34:33::0;9558:15;;;9538:18;;;9531:43;9590:18;;;9583:34;;;5226:10:32;::::2;::::0;:16:::2;::::0;9423:18:33;;5226:46:32::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5296:59:32::2;::::0;;9802:25:33;;;9858:2;9843:18;;9836:34;;;-1:-1:-1;;;;;5296:59:32;::::2;::::0;-1:-1:-1;5304:14:32;;-1:-1:-1;5296:59:32::2;::::0;9775:18:33;5296:59:32::2;;;;;;;3894:1468;;;;;3437:20:5::0;1949:1;2532:30;4113:23;3860:283;3437:20;3662:1700:32;;;;;;;:::o;5710:138:0:-;5785:18;5798:4;5785:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5815:26:::1;5827:4;5833:7;5815:11;:26::i;2811:779:32:-:0;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;-1:-1:-1;;;;;3020:19:32;::::1;3016:47;;3048:15;;-1:-1:-1::0;;;3048:15:32::1;;;;;;;;;;;3016:47;3077:5;3086:1;3077:10:::0;3073:38:::1;;3096:15;;-1:-1:-1::0;;;3096:15:32::1;;;;;;;;;;;3073:38;3137:15;3125:8;:27;3121:57;;3161:17;;-1:-1:-1::0;;;3161:17:32::1;;;;;;;;;;;3121:57;3192:9;::::0;;;:5:::1;:9;::::0;;;;:16:::1;;::::0;::::1;;3188:51;;;3217:22;;-1:-1:-1::0;;;3217:22:32::1;;;;;;;;;;;3188:51;3291:206;;;;;;;;3325:5;-1:-1:-1::0;;;;;3291:206:32::1;;;;;3351:5;3291:206;;;;3381:5;3291:206;;;;3415:13;3291:206;;;;3452:8;3291:206;;;;3482:4;3291:206;;;;::::0;3279:5:::1;:9;3285:2;3279:9;;;;;;;;;;;:218;;;;;;;;;;;;;-1:-1:-1::0;;;;;3279:218:32::1;;;;;-1:-1:-1::0;;;;;3279:218:32::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3545:5;-1:-1:-1::0;;;;;3521:62:32::1;3541:2;3521:62;3552:5;3559:13;3574:8;3521:62;;;;;;;10083:25:33::0;;;10139:2;10124:18;;10117:34;;;;10182:2;10167:18;;10160:34;10071:2;10056:18;;9881:319;3521:62:32::1;;;;;;;;2811:779:::0;;;;;;:::o;4196:103:0:-;4262:30;4273:4;966:10:3;4262::0;:30::i;7318:387::-;7395:4;-1:-1:-1;;;;;;;;;;;7485:22:0;7493:4;7499:7;7485;:22::i;:::-;7480:219;;7523:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7523:31:0;;;;;;;;;:38;;-1:-1:-1;;7523:38:0;7557:4;7523:38;;;7607:12;966:10:3;;887:96;7607:12:0;-1:-1:-1;;;;;7580:40:0;7598:7;-1:-1:-1;;;;;7580:40:0;7592:4;7580:40;;;;;;;;;;7641:4;7634:11;;;;;7480:219;7683:5;7676:12;;;;;7942:388;8020:4;-1:-1:-1;;;;;;;;;;;8109:22:0;8117:4;8123:7;8109;:22::i;:::-;8105:219;;;8181:5;8147:14;;;;;;;;;;;-1:-1:-1;;;;;8147:31:0;;;;;;;;;;:39;;-1:-1:-1;;8147:39:0;;;8205:40;966:10:3;;8147:14:0;;8205:40;;8181:5;8205:40;8266:4;8259:11;;;;;3478:178:4;2226:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3595:17:4;;-1:-1:-1;;3595:17:4::1;::::0;;3627:22:::1;966:10:3::0;3636:12:4::1;3627:22;::::0;-1:-1:-1;;;;;3849:32:33;;;3831:51;;3819:2;3804:18;3627:22:4::1;;;;;;;3526:130;3478:178::o:0;4578:312:2:-;4658:4;-1:-1:-1;;;;;4667:6:2;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:14;-1:-1:-1;;;;;1519:53:14;;1441:138;4728:32:2;-1:-1:-1;;;;;4728:42:2;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:2;;;;;;;;;;;4633:251;4578:312::o;6522:103:32:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;6032:538:2:-;6149:17;-1:-1:-1;;;;;6131:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:2;;;;;;;;-1:-1:-1;;6131:52:2;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:2;;-1:-1:-1;;;;;3849:32:33;;6493:60:2;;;3831:51:33;3804:18;;6493:60:2;;;;;;;;6127:437;-1:-1:-1;;;;;;;;;;;6225:40:2;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:2;;;;;1080:25:33;;;1053:18;;6292:34:2;934:177:33;6221:120:2;6354:54;6384:17;6403:4;6354:29;:54::i;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:2;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:2;;;;;;;;;;;3170:176:4;1979:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3288:16:4;;-1:-1:-1;;3288:16:4::1;3300:4;3288:16;::::0;;3319:20:::1;966:10:3::0;3326:12:4::1;887:96:3::0;6105:126:25;6151:13;6183:41;:5;6210:13;6183:26;:41::i;:::-;6176:48;;6105:126;:::o;6557:135::-;6606:13;6638:47;:8;6668:16;6638:29;:47::i;9071:205:1:-;9129:30;;3147:66;9186:27;8819:122;3312:65:0;6929:20:1;:18;:20::i;2684:111:5:-;6929:20:1;:18;:20::i;:::-;2754:34:5::1;:32;:34::i;3470:384::-:0;2532:30;3670:9;;-1:-1:-1;;3670:20:5;3666:88;;3713:30;;-1:-1:-1;;;3713:30:5;;;;;;;;;;;3666:88;1991:1;3828:19;;3470:384::o;2709:128:4:-;-1:-1:-1;;;;;;;;;;;2625:9:4;;;2770:61;;;2805:15;;-1:-1:-1;;;2805:15:4;;;;;;;;;;;5017:176:25;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;4049:4:26;4043:11;-1:-1:-1;;;4067:23:26;;4119:4;4110:14;;4103:39;;;;4171:4;4162:14;;4155:34;4227:4;4212:20;;;3874:374;3714:255:24;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:24;;3714:255;-1:-1:-1;;;;3714:255:24:o;3860:283:5:-;1949:1;2532:30;4113:23;3860:283::o;4429:197:0:-;4517:22;4525:4;4531:7;4517;:22::i;:::-;4512:108;;4562:47;;-1:-1:-1;;;4562:47:0;;-1:-1:-1;;;;;10794:32:33;;4562:47:0;;;10776:51:33;10843:18;;;10836:34;;;10749:18;;4562:47:0;10602:274:33;2909:126:4;-1:-1:-1;;;;;;;;;;;2625:9:4;;;2967:62;;3003:15;;-1:-1:-1;;;3003:15:4;;;;;;;;;;;2264:344:14;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:14;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;3368:267:21:-;3462:13;1390:66;3491:46;;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7082:141:1;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;2801:183:5;6929:20:1;:18;:20::i;3945:262:25:-;3998:7;4029:4;-1:-1:-1;;;;;4038:11:25;4021:28;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;-1:-1:-1;4107:22:25;;3945:262::o;4017:184::-;4167:23;4304:80;;;2079:95;4304:80;;;11949:25:33;4326:11:25;11990:18:33;;;11983:34;;;;4339:14:25;12033:18:33;;;12026:34;4355:13:25;12076:18:33;;;12069:34;4378:4:25;12119:19:33;;;12112:61;4268:7:25;;11921:19:33;;4304:80:25;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;2129:778:24;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:24;;2823:1;;-1:-1:-1;2827:35:24;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:24;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:24;;;;;1080:25:33;;;1053:18;;7634:46:24;934:177:33;7563:243:24;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:24;;;;;1080:25:33;;;1053:18;;7763:32:24;934:177:33;1671:281:14;1748:17;-1:-1:-1;;;;;1748:29:14;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:14;;-1:-1:-1;;;;;3849:32:33;;1805:47:14;;;3831:51:33;3804:18;;1805:47:14;3666:222:33;1744:119:14;-1:-1:-1;;;;;;;;;;;1872:73:14;;-1:-1:-1;;;;;;1872:73:14;-1:-1:-1;;;;;1872:73:14;;;;;;;;;;1671:281::o;3916:253:18:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:18;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:18:o;6113:122:14:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:14;;;;;;;;;;;2078:378:21;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:21;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:21;;;-1:-1:-1;2408:4:21;2399:14;;2392:28;;;;-1:-1:-1;2363:16:21;2078:378::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;5203:1551:24:-;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:24;;-1:-1:-1;6385:30:24;;-1:-1:-1;6417:1:24;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;12411:25:33;;;12484:4;12472:17;;12452:18;;;12445:45;;;;12506:18;;;12499:34;;;12549:18;;;12542:34;;;6541:24:24;;12383:19:33;;6541:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:24;;-1:-1:-1;;6541:24:24;;;-1:-1:-1;;;;;;;6579:20:24;;6575:113;;-1:-1:-1;6631:1:24;;-1:-1:-1;6635:29:24;;-1:-1:-1;6631:1:24;;-1:-1:-1;6615:62:24;;6575:113;6706:6;-1:-1:-1;6714:20:24;;-1:-1:-1;6714:20:24;;-1:-1:-1;5203:1551:24;;;;;;;;;:::o;4437:582:18:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:18;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:18;;-1:-1:-1;;;;;3849:32:33;;4933:24:18;;;3831:51:33;3804:18;;4933:24:18;3666:222:33;4853:119:18;-1:-1:-1;4992:10:18;4605:408;4437:582;;;;;:::o;2528:245:21:-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:21;;;;;;;;;;;5559:434:18;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:18;;;;;;;;;;;14:286:33;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:33;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:33;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:254::-;743:6;751;804:2;792:9;783:7;779:23;775:32;772:52;;;820:1;817;810:12;772:52;856:9;843:23;833:33;;885:38;919:2;908:9;904:18;885:38;:::i;:::-;875:48;;675:254;;;;;:::o;1116:180::-;1175:6;1228:2;1216:9;1207:7;1203:23;1199:32;1196:52;;;1244:1;1241;1234:12;1196:52;-1:-1:-1;1267:23:33;;1116:180;-1:-1:-1;1116:180:33:o;2534:127::-;2595:10;2590:3;2586:20;2583:1;2576:31;2626:4;2623:1;2616:15;2650:4;2647:1;2640:15;2666:995;2743:6;2751;2804:2;2792:9;2783:7;2779:23;2775:32;2772:52;;;2820:1;2817;2810:12;2772:52;2843:29;2862:9;2843:29;:::i;:::-;2833:39;;2923:2;2912:9;2908:18;2895:32;2946:18;2987:2;2979:6;2976:14;2973:34;;;3003:1;3000;2993:12;2973:34;3041:6;3030:9;3026:22;3016:32;;3086:7;3079:4;3075:2;3071:13;3067:27;3057:55;;3108:1;3105;3098:12;3057:55;3144:2;3131:16;3166:2;3162;3159:10;3156:36;;;3172:18;;:::i;:::-;3247:2;3241:9;3215:2;3301:13;;-1:-1:-1;;3297:22:33;;;3321:2;3293:31;3289:40;3277:53;;;3345:18;;;3365:22;;;3342:46;3339:72;;;3391:18;;:::i;:::-;3431:10;3427:2;3420:22;3466:2;3458:6;3451:18;3506:7;3501:2;3496;3492;3488:11;3484:20;3481:33;3478:53;;;3527:1;3524;3517:12;3478:53;3583:2;3578;3574;3570:11;3565:2;3557:6;3553:15;3540:46;3628:1;3623:2;3618;3610:6;3606:15;3602:24;3595:35;3649:6;3639:16;;;;;;;2666:995;;;;;:::o;3893:250::-;3978:1;3988:113;4002:6;3999:1;3996:13;3988:113;;;4078:11;;;4072:18;4059:11;;;4052:39;4024:2;4017:10;3988:113;;;-1:-1:-1;;4135:1:33;4117:16;;4110:27;3893:250::o;4148:271::-;4190:3;4228:5;4222:12;4255:6;4250:3;4243:19;4271:76;4340:6;4333:4;4328:3;4324:14;4317:4;4310:5;4306:16;4271:76;:::i;:::-;4401:2;4380:15;-1:-1:-1;;4376:29:33;4367:39;;;;4408:4;4363:50;;4148:271;-1:-1:-1;;4148:271:33:o;4424:1259::-;4830:3;4825;4821:13;4813:6;4809:26;4798:9;4791:45;4772:4;4855:2;4893:3;4888:2;4877:9;4873:18;4866:31;4920:46;4961:3;4950:9;4946:19;4938:6;4920:46;:::i;:::-;5014:9;5006:6;5002:22;4997:2;4986:9;4982:18;4975:50;5048:33;5074:6;5066;5048:33;:::i;:::-;5112:2;5097:18;;5090:34;;;-1:-1:-1;;;;;5161:32:33;;5155:3;5140:19;;5133:61;5181:3;5210:19;;5203:35;;;5275:22;;;5269:3;5254:19;;5247:51;5347:13;;5369:22;;;5419:2;5445:15;;;;-1:-1:-1;5407:15:33;;;;-1:-1:-1;5488:169:33;5502:6;5499:1;5496:13;5488:169;;;5563:13;;5551:26;;5632:15;;;;5597:12;;;;5524:1;5517:9;5488:169;;;-1:-1:-1;5674:3:33;;4424:1259;-1:-1:-1;;;;;;;;;;;;4424:1259:33:o;5688:220::-;5837:2;5826:9;5819:21;5800:4;5857:45;5898:2;5887:9;5883:18;5875:6;5857:45;:::i;5913:334::-;5990:6;5998;6006;6059:2;6047:9;6038:7;6034:23;6030:32;6027:52;;;6075:1;6072;6065:12;6027:52;6098:29;6117:9;6098:29;:::i;:::-;6088:39;;6146:38;6180:2;6169:9;6165:18;6146:38;:::i;:::-;6136:48;;6203:38;6237:2;6226:9;6222:18;6203:38;:::i;:::-;6193:48;;5913:334;;;;;:::o;6252:940::-;6367:6;6375;6383;6391;6399;6407;6415;6468:3;6456:9;6447:7;6443:23;6439:33;6436:53;;;6485:1;6482;6475:12;6436:53;6521:9;6508:23;6498:33;;6578:2;6567:9;6563:18;6550:32;6540:42;;6601:38;6635:2;6624:9;6620:18;6601:38;:::i;:::-;6591:48;;6686:2;6675:9;6671:18;6658:32;6648:42;;6737:3;6726:9;6722:19;6709:33;6699:43;;6793:3;6782:9;6778:19;6765:33;6817:18;6858:2;6850:6;6847:14;6844:34;;;6874:1;6871;6864:12;6844:34;6912:6;6901:9;6897:22;6887:32;;6957:7;6950:4;6946:2;6942:13;6938:27;6928:55;;6979:1;6976;6969:12;6928:55;7019:2;7006:16;7045:2;7037:6;7034:14;7031:34;;;7061:1;7058;7051:12;7031:34;7106:7;7101:2;7092:6;7088:2;7084:15;7080:24;7077:37;7074:57;;;7127:1;7124;7117:12;7074:57;7158:2;7154;7150:11;7140:21;;7180:6;7170:16;;;;;6252:940;;;;;;;;;;:::o;7197:460::-;7292:6;7300;7308;7316;7324;7377:3;7365:9;7356:7;7352:23;7348:33;7345:53;;;7394:1;7391;7384:12;7345:53;7430:9;7417:23;7407:33;;7459:38;7493:2;7482:9;7478:18;7459:38;:::i;:::-;7197:460;;7449:48;;-1:-1:-1;;;;7544:2:33;7529:18;;7516:32;;7595:2;7580:18;;7567:32;;7646:3;7631:19;;;7618:33;;-1:-1:-1;7197:460:33:o;9018:225::-;9085:9;;;9106:11;;;9103:134;;;9159:10;9154:3;9150:20;9147:1;9140:31;9194:4;9191:1;9184:15;9222:4;9219:1;9212:15;10413:184;10483:6;10536:2;10524:9;10515:7;10511:23;10507:32;10504:52;;;10552:1;10549;10542:12;10504:52;-1:-1:-1;10575:16:33;;10413:184;-1:-1:-1;10413:184:33:o;10881:380::-;10960:1;10956:12;;;;11003;;;11024:61;;11078:4;11070:6;11066:17;11056:27;;11024:61;11131:2;11123:6;11120:14;11100:18;11097:38;11094:161;;11177:10;11172:3;11168:20;11165:1;11158:31;11212:4;11209:1;11202:15;11240:4;11237:1;11230:15;11094:161;;10881:380;;;:::o;11266:127::-;11327:10;11322:3;11318:20;11315:1;11308:31;11358:4;11355:1;11348:15;11382:4;11379:1;11372:15;11398:287;11527:3;11565:6;11559:13;11581:66;11640:6;11635:3;11628:4;11620:6;11616:17;11581:66;:::i;:::-;11663:16;;;;;11398:287;-1:-1:-1;;11398:287:33:o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","PAUSER_ROLE()":"e63ab1e9","SIGNER_ROLE()":"a1ebf35d","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","claim(uint256,bytes32,address,uint256,uint256,bytes)":"c32dcd8d","claimed(uint256,address)":"120aa877","createDistribution(uint256,address,uint256,uint256,uint256)":"dba2844b","dists(uint256)":"dc8999b4","eip712Domain()":"84b0196e","getClaimed(uint256,address)":"e2d80d15","getDistribution(uint256)":"3b345a87","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address,address)":"c0c53b8b","pause()":"8456cb59","paused()":"5c975abb","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","rewardPool()":"66666aa9","supportsInterface(bytes4)":"01ffc9a7","sweepRemainder(uint256,address)":"95130a8b","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DistributionInactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DistributionNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientRemaining\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoAmountToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedSigner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClaimedTotal\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"snapshotBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"DistributionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SIGNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"postId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"authorizedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"snapshotBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"createDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dists\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"snapshotBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getDistribution\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"snapshotBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct SignedRewardDistributor.Distribution\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPool\",\"outputs\":[{\"internalType\":\"contract RewardPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sweepRemainder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Handles EIP-712 signed reward claims with pre-funded pool\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"claim(uint256,bytes32,address,uint256,uint256,bytes)\":{\"details\":\"Claim rewards using EIP-712 signature\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createDistribution(uint256,address,uint256,uint256,uint256)\":{\"details\":\"Create a new distribution (admin only)\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getClaimed(uint256,address)\":{\"details\":\"Get claimed amount for user\"},\"getDistribution(uint256)\":{\"details\":\"Get distribution info\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"pause()\":{\"details\":\"Pause/unpause contract\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepRemainder(uint256,address)\":{\"details\":\"Sweep remaining tokens after deadline (admin only)\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"SignedRewardDistributor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SignedRewardDistributor.sol\":\"SignedRewardDistributor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/RewardPool.sol\":{\"keccak256\":\"0x511a2760886d6e2559295956d4558eb8d032942f8a2e013c3312e7ff95c48219\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4f8af341d79966b05a9d245b0395d6bf28205a7d3db849d284d9e1ef7f01d5a\",\"dweb:/ipfs/QmVnBQcqunpMEUA8hevXkDUj8SBfB1bX1BeSimvZRnpkuy\"]},\"contracts/SignedRewardDistributor.sol\":{\"keccak256\":\"0x4e9992b99e59800ab7ace4ecb59caa03da8a99ad108514e79e85aa21e83ccba2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://080376d5bc9f2df920c7b3e4f38aa48121ed33fbcaa02419b9edc2fb44f674d5\",\"dweb:/ipfs/QmNM7SpZFcvbbMvmezT7bqgi9fdSM81ADpMWWZHKoJkYFs\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4726,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"_nameFallback","offset":0,"slot":"0","type":"t_string_storage"},{"astId":4728,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"_versionFallback","offset":0,"slot":"1","type":"t_string_storage"},{"astId":8879,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"rewardPool","offset":0,"slot":"2","type":"t_contract(RewardPool)8840"},{"astId":8897,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"dists","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_struct(Distribution)8892_storage)"},{"astId":8903,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"claimed","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(RewardPool)8840":{"encoding":"inplace","label":"contract RewardPool","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_struct(Distribution)8892_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SignedRewardDistributor.Distribution)","numberOfBytes":"32","value":"t_struct(Distribution)8892_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Distribution)8892_storage":{"encoding":"inplace","label":"struct SignedRewardDistributor.Distribution","members":[{"astId":8881,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"token","offset":0,"slot":"0","type":"t_address"},{"astId":8883,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"total","offset":0,"slot":"1","type":"t_uint256"},{"astId":8885,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"remaining","offset":0,"slot":"2","type":"t_uint256"},{"astId":8887,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"snapshotBlock","offset":0,"slot":"3","type":"t_uint256"},{"astId":8889,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"deadline","offset":0,"slot":"4","type":"t_uint256"},{"astId":8891,"contract":"contracts/SignedRewardDistributor.sol:SignedRewardDistributor","label":"active","offset":0,"slot":"5","type":"t_bool"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}